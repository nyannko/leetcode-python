{"index":{"version":"0.5.12","fields":[{"name":"title","boost":10},{"name":"keywords","boost":15},{"name":"body","boost":1}],"ref":"url","documentStore":{"store":{"./":["算法笔记","🥰alg"],"alg/1_2Sum.html":["(int","0;","1.","2sum","=","hashmap<>();","i;","index)","int","int[]","map","map(value,","map.get(j)","new","null;","nums,","nums[i];","public","return","target)","twosum(int[]","{","}","字典法，将原字典key和value转换，遍历一次数组并返回第一个数字出现的index和当前数字的index。"],"alg/15_3Sum.html":["!!!","&&","(i","(int","(l","+","//","0","0;","1,","15.","1;","1])","3sum","=","==",">","arraylist<>();","arrays.sort(nums);","binari","continue;","int","j,","k重复的判断，i,","l","list","list>","l不能和它前面的数字相等，l不和它后面的数字相等。题目要求不能有重复的结果。","new","nums)","nums.length","nums[i","nums[i]","nums[i];","pointers，注意排序，处理重复，数组越界问题。","public","r","re","r移动的区域。","search","sort","start","target","threesum(int[]","{","使用two","时间复杂度o(n^2)(for里面套while)，空间复杂度o(k)","注意要对数组进行排序，因为要比较大小决定指针移动方向，没有排序会跳过某些数字。","紫色是i经过的区域，绿色是l,","这三句是防止i,"],"alg/18_4Sum.html":["&&","(int","(l","+","//","0","0;","1","1,","11,","12,","13,","15,","17","18.","1;","1])","3sum.","3sum偷懒法..","4sum","=","==","arraylist<>();","arrays.sort(nums);","binari","continue;","differ","foursum(int[]","int","j","l","line","list","list>","new","nums,","nums.length","nums[i","nums[i]","nums[j","nums[j]","nums[j];","public","r","re","search","sort","start","tar","target","target)","{","外部增加循环，判断重复，内部修改起始值。","时间复杂度o(n^3)(for里面套for再while)，空间复杂度o(k)"],"alg/69_Sqrtx.html":["(math.pow(m,","(x","+","/","1;","2)","69.","=","==",">",">>","bound。","int","l","m","m)","m;","mysqrt(int","mysqrt3(int","public","r","return","sqrt(x)","x)","{","}","二分法的扩展，条件是一个数的平方大于x。可以用乘法或者除法进行比较，除法的时候要注意l=1，不然的话m有可能等于零出错。加上二分法最基本的两种写法，那么可以有四种写法。返回lower"],"alg/149_Max_Points_on_a_Line.html":["!=","\"\"\"","#","&&","'infinity'dy前面加上decimal，因为浮点数精度可能出现问题导致不同的点算出相同的斜率。","(!(other","(1,","(1，1)中有两个点斜率相等","(int","(n","(other","(point)","*","+","..","/","0","0):","0;","0],","1","1)","1):","1,","1.0)","149.","1],","1|","1})","2","2):","2]]","2|","2})","3","3;","4","5","6",":rtype:",":type","=","==",">","@overrid","[1,","[2,","[[0,","^","a,","a;","b)","b;","boolean","class","concis","decimal(di","def","dx","equals(object","false;","first","gcd","hashcod","hashcode()","hashmap<>();","https://leetcode.com/problems/max","input","instanceof","int","iter","java","len(points)","line","line/discuss/47113/a","line/discuss/47268/two","list[point]","map","max","maxpoints(point[]","maxpoints(self,","maxpoints2(self,","n/2次，用字典记录下各个斜率（或者点）出现的次数。最后返回结果为一次迭代中最多的点+重复的点+本身","new","note","o","o.x","o.y;","other)","other;","point","point(int","point))","points)","points):","points.length;","points:","public","python","ref","result","return","second","size","solut","third","this)","this.i","this.x","true;","x","x;","y","y;","y的gcd来同时缩小x，y的范围避免浮点数的精度问题。","{","{(0,","{(1,","}","使用java重写python第二种方法的时候，逻辑上只要xy相等point就算相等，需要重写point中的equals和hashcode方法，hashcode方法在每次存储或者查找map的时候计算point存放的位置，equals用来比较两个点的x,y是否相等。","如果使用这种方法的话需要在slope","思路是两个for循环，需要比较(n","第二种方法使用求x,","计算一个列表中最多能有几个点在一条线上。","运行例子","返回最大值3","还有一种比较快的方法没有看，好像是直接比较乘法。"],"alg/169_Majority_Element.html":["(count","(int","(integ","(major","(map.containskey(n))","(map.get(n)","+","/","0)","0,","0;","1);","1.boyer","169.","2)","2.字典","2];","3.排序+返回中间值",":",";","=","==",">","algorithm","arrays.sort(nums);","count","count++;","element","find","hashmap<>();","https://en.wikipedia.org/wiki/boyer%e2%80%93moore_majority_vote_algorithm","https://gregable.com/2013/10/major","int","major","major;","majority.html","majorityelement(int[]","majorityelement3(int[]","map","map.get(n)","map.put(n,","moor","n","n)","n:","n;","new","nums)","nums.length","nums[nums.length","o(1)","o(n)","o(nlogn)","public","ref","return","static","vote","{","}","大概是o(logn)?","粉色格子为count=0时换主，返回绿色格子"],"alg/173_Binary_Search_Tree_Iterator.html":["!=","\"\"\"","#1","#2","#3","&&","(!stack.isempty()","(root","(stack.isempty()","(this.root","*","*/","/**","0;","173.",":rtype:",":type","=","==","@return","[]","__init__(self,","binari","bool","boolean","bstiter","bstiterator(object):","bstiterator(treenod","class","def","dfs(self,","else:","fals","false;","hasnext()","hasnext(self):","inordertraversal(self,","inorder的递归写法，思路就是按照左中右的处理顺序(左边处理完了，将左边的节点放入结果，上述图例中按照1111231...的顺序执行)","int","iter","java用linkedlist做，注意判空不要直接像python一样和null比较。。","linkedlist","linkedlist<>();","new","next","next()","next(self):","next_nod","next_node.right","next_node.v","nextnod","nextnode.right;","nextnode.val;","none","null)","number","privat","public","re","res)","res):","res.append(root.val)","return","root","root)","root):","root,","root.left;","root:","root;","search","self.dfs(root,","self.dfs(root.left,","self.dfs(root.right,","self.p","self.p.left","self.p:","self.stack","self.stack.append(self.p)","self.stack.pop()","smallest","stack","stack.pop();","stack.push(root);","stack.push(this.root);","stack;","this.root","this.root.left;","tree","treenod","true","true;","whether","{","||","}","一个例子：检查左边的none后pop(1),检查右边的none后pop(3)","二叉搜索树的中序遍历，定义一个self.p指针，永远指向下一个节点。思路是左边的节点全部一次性进栈，完成后，pop最上面的节点a，检查它是否有右节点，如果有的话就作为下一个遍历的根节点，因为此节点的值大于a小于a的父节点。如果a没有右节点，说明没有值在a和a的父节点之间，那么直接popa的父节点作为答案。"],"alg/215_Kth_Largest_Element_in_an_Array.html":["(int","(q.size()","1.使用总容量为k+1的优先队列维护值最大的k个点，一旦总数量y超过k，移除y中值最小的点。堆中插入和删除的最差时间为o(log(k),log(k)为堆的高度，又因为遍历整个数组，所以时间复杂度为n*log(k)","2,","215.","2]","3","3,","3]","4","4,","5,","5]","6,","6]",":","=",">","[1,","[2,","[3,","[3]","[4,","array","befor","collection.reverseorder());","element","findkthlargest(int[]","input:","int","k)","kth","largest","new","num","nums)","nums,","pop:","priorityqueu","priorityqueue<>();","priorityqueue<>(nums.length,","public","q","q.offer(num);","q.poll();","return","{","{3,2,1,5,6,4},","}","一个例子","使用offer()或者add()方法时会进行排序，这里维护一个小堆。poll()方法移除优先级最高的点，这里是最小值","最大堆可以用collection.reverseorder()这个comparator，别的自定义对象需要自己实现compar"],"alg/704_Binary_Search.html":["#","######","(l","(nums[m]","(r","+","/","0,","1","1,","1;","1改成len(nums)免去检查","2;","704.","=","==",">",">=","a[m]","binari","boundari","bs(a,","bs(nums,","bs1(a,","check","def","dfs(int[]","dfs(nums,","else:","int","l","l)","l,","len(a)","len(nums)","lower_bound(a,","l和r=m同时写会造成死循环，例如bs([3,4,7,9,10,11],6)，所以要在l=r的时候跳出循环进行边界检查。这个程序会错的原因是返回时没有进行检查。","l没有对边界进行检查。如bs1([3,4,7,9,10,11],11)返回","m","m,","m;","nums,","nums.length","nums.length;","nums[l]","public","r","r)","r,","return","search","search(int[]","tar):","tar:","target)","target):","target);","target:","{","}","一样的java递归写法:","二分法的边界问题还是有一点点搞的，特别是题目变形的时候会发现其实是在猜边界写题....这样其实很不好，我觉得这个边界问题其实就是除法取下界的锅。给出两种错掉的迭代写法：","变种写法..len(nums)","正确写法一：小于判断加检查边界后返回(len(num);","正确写法二：小于等于加直接返回(len(num)","求区间中重复数字的上下界长度：","溢出的特殊处理就不提了。","这里是l=m+1而不是l=m：是因为除法取下界会造成l边界不会改变，从而形成死循环。","错误写法一:","错误写法二:"],"1_linkedlist.html":["141,","142","143（这两题前两步一样，都是先分割再反转，再比较或合并）,","146(lru)","147","148","160","19","203,","206,","21,","23(一开始的impl很慢)","234,","237,","24","328","707,","817","82,","83,","86,","876,","cycle:","deletion:","find","insertion:","intersection:","link","list","merge:","middle,","partition:","reversion:","sort:","什么地方学到过链表？","其他:","操作：迭代，递归","比如hashmap中的每一个bucket中存放的对象可以用链表连接存储，比如垃圾收集中的freelist，比如linux文件系统的inode，比如堆上对象的创建，比如poll(是不啦)，比如图，还有比如某次作业存放job","组合:","链表","难点：边界判断，指针指向"],"alg/206_Reverse_Linked_List.html":["\"\"\"","(cur","1.recursion:","2.iteration:","206.",":rtype:",":type","=","==","cur)","cur.next","cur.next;","def","dfs(cur,","dfs(listnod","dfs(null,","head","head)","head):","head);","head.next","head:","link","list","listnod","next_nod","next_node);","none","null)","pre","pre,","pre;","public","return","revers","reverselist(listnod","reverselist(self,","{","}","分为三步：定义递归函数以及它的input，考虑递归关系(改指针)，设定返回条件(cur为null的时候返回pre)","四步见图"],"alg/24_Swap_Nodes_in_Pairs.html":["!=","&&","((head==","(head.next)","(point.next","1.recustion:","2.iteration:","24.","=","==","dummi","dummy.next","dummy.next;","dummy;","head)","head.next","head.next;","head;","link","listnod","listnode(0);","list升级版","n","n.next","n;","new","node","null","null)","pair","point","point.next","point.next.next","point.next.next;","point.next;","public","return","revers","s1","s1.next","s1;","s2","s2.next","s2.next;","s2;","swap","swappairs(head.next.next);","swappairs(listnod","{","||","}","和中序遍历的递归写法有点像，先定义n，然后让head.next递归去得到结果，最后让n.next=head连接整理好的链表，过程见图。","见图顺序，dummy的作用是创建新的链表头，返回结果的时候用，point是取节点的基础。"],"alg/876_Middle_of_the_Linked_List.html":["!=","&&","(fast","876.","=","fast","fast.next","fast.next.next;","head)","head,","head;","link","list","listnod","middl","middlenode(listnod","null","null)","public","return","slow","slow.next;","slow;","{","}","快慢指针求链表中间值，奇数时fast.next==null，偶数时fast==nul"],"alg/141_Linked_List_Cycle.html":["!=","&&","(fast","//","141.","=","==","boolean","case","cycl","false;","fast","fast.next","fast.next.next;","hascycle(listnod","head)","head,","head;","link","list","listnod","null","null)","public","return","slow","slow)","slow.next;","true;","{","}","快慢指针，当快指针和慢指针重叠时说明有cycle，while条件是为了没有cycle的时候跳出循环。"],"alg/142_Linked_List_Cycle_II.html":["!=","&&","(entri","(fast","142.","=","==","cycl","detectcycle(listnod","entri","entry.next;","entry;","fast","fast.next","fast.next.next;","head)","head,","head;","ii","link","list","listnod","null","null)","null;","public","return","slow","slow)","slow.next;","{","}","寻找cycle的开始节点。相比快慢指针另外多加了一个指针entry，用来从头寻找cycle入口"],"alg/160_Intersection_of_Two_Linked_Lists.html":["!=","(heada","(headb","160.",":","=","==","?","getintersectionnode(listnod","heada","heada,","heada.next;","heada;","headb","headb)","headb.next;","headb;","intersect","link","list","listnod","nodea","nodeb","null","null)","null;","public","return","two","{","||","}","由于第一次遍历可能因为不等长找不到交点，在遍历完之后需要让链表的尾部等于对方的头节点，直到找到交点跳出循环。"],"alg/237_Delete_Node_in_a_Linked_List.html":["237.","=","delet","deletenode(listnod","link","list","node","node)","node.next","node.next.next;","node.next.val;","node.v","public","void","{","}","删除链表中的一个节点，就是修改值和指针。"],"alg/203_Remove_Linked_List_Elements.html":["!=","&&","(head","(head.val","(node","(node.next","//","203.",":","=","==","?","case","cur","cur.next","dummi","dummy.next","dummy.next;","dummy;","element","head","head,","head.next","head.next;","head.val","head;","int","intern","link","list","listnod","listnode(0);","naive方法，先移除头部，再移除中间。","new","node","node.next","node.next.next;","node.next.v","node.next;","node方法","null","null)","null;","public","recurs","remov","removeelements(head.next,","removeelements(listnod","return","same","val)","val);","{","}"],"alg/83_Remove_Duplicates_from_Sorted_List.html":["!=","&&","(head","(head.next","(head.val","83.",":","=","==","?","deleteduplicates(head.next);","deleteduplicates(listnod","duplic","head","head)","head.next","head.next.next;","head.next.val)","head.next;","head.val","head;","list","listnod","naive方法:","node","node;","null","null)","public","recursion:","remov","return","sort","{","||","}","不看答案还是写不出啊啊啊啊啊啊啊啊啊","你🐴"],"alg/82_Remove_Duplicates_from_Sorted_List_II.html":["!=","&&","(cur","(cur.next","82.","=","==","cur","cur)","cur.next.v","cur.next;","cur.val)","deleteduplicates(listnod","dummi","dummy.next","dummy.next;","dummy;","duplic","head)","head;","if(pre.next","ii","list","listnod","listnode(0);","new","node法跳过重复nod","null","null)","pre","pre.next","pre.next;","public","remov","return","sort","{","}"],"alg/86_Partition_List.html":["!=","(head","(head.val","1","3来说，分割完之后lh.next=1","86.","=",">2",">2,",">2,而rh=4",">2....的无限循环，所以需要删除rh最后这个2。（为什么会有这个2呢是因为在最后一次加node的时候没有新的值了，so这个2没有被覆盖。",">2。rh最后这个2和lh最后这个2是一样的node，所以在运行l.next",">3",">4",">5","head,","head;","int","l","l,","lh","list","listnod","listnode(0),","listnode(0);","new","node","null)","null;。比如拿例题head","partit","partition(listnod","public","r","r;","rh","rh.next;的时候，其实会同时改变l和rh，结果就变成1","x","x)","{","不加新node，直接用head，head就像一条蛇游走在l和r之间什么鬼啦。这里有个坑点就是必须加上r.next","新建两个list，小于val去左边，大于去右边，最后拼一拼","无脑新添node法"],"alg/234_Palindrome_Linked_List.html":["!=","&&","(fast","(node","(pre","(pre.val","//","234.","=","boolean","compar","false;","fast","fast.next","fast.next.next;","head","head)","head,","head.next;","head.val)","head;","ispalindrome(listnod","link","list","listnod","naive迭代","node","node.next","node.next;","node;","null","null)","null;","palindrom","pre","pre.next;","pre;","public","return","revers","slow","slow.next;","slow;","split","tmp","tmp;","true;","{","}"],"alg/143_Reorder_List.html":["!=","&&","(cur","(fast","(head","(l1","//","1","143.","2","3","4","5","=","==",">",">2",">3",">4;",">6",">7","cur","cur.next","cur.next;","cur;","fast","fast.next","fast.next.next;","head","head)","head,","head.next","head;","l1","l1.next","l1.next;","l2","l2;","list","listnod","merg","null","null)","null,","null;","public","rel2","rel2;","reorder","reorderlist(listnod","return;","revers","slow","slow.next","slow.next;","split","tmp","tmp;","void","{","||","}","偶数list会被分为1","分割的时候，","分割，反转，合并","奇数list会被分为1"],"alg/147_Insertion_Sort_List.html":["!=","&&","(cur","(pre.next","//","147.","=","cur","cur.next;","dummi","dummy,","follow","head)","head,","insert","insertionsortlist(listnod","list","listnod","listnode(0);","new","next","null","null)","null;","pre","pre.next.v","public","sort","store","tmp","valu","{","过程见图"],"alg/328_Odd_Even_Linked_List.html":["!=","&&","(even","(head","//","328.","=","==","concat","even","even.next","even.next.next;","even.next;","even;","evenhead","evenhead;","head)","head,","head.next,","head;","link","list","listnod","null","null)","odd","odd.next","odd.next.next;","odd.next;","oddevenlist(listnod","public","return","{","}","这里的even和odd指的是index。奇数位的连成一个链表，偶数位的连成一个链表，最后这两个链表连一连。"],"alg/148_Sort_List.html":["!=","&&","(fast","(head","(l","(l.val","148.","=","==","dummi","dummy;","fast","fast.next","fast.next.next;","head","head)","head,","head.next","head;","l","l,","list","listnod","listnode(0);","merge(l,","merge(listnod","new","null","null)","null;","pre","pre.next","public","r","r)","r);","return","slow","slow.next;","slow;","sort","sortlist(head),","sortlist(listnod","sortlist(slow);","{","||","}","将list等分，merge函数和21题一样"],"alg/21_Merge_Two_Sorted_Lists.html":["!=","&&","(l1","(l1.val","21.",":","=","==","?","head","l1","l1,","l2","l2)","l2;","list","listnod","listnode(0);","merg","mergetwolists(listnod","naive方法设置dummi","new","node再比较大小。","null","null)","p","p;","public","recursion:","return","sort","two","{","||"],"alg/23_Merge_k_Sorted_Lists.html":["!=","(l","(l1","(l1.val","(lists.length","(newlist.size()","+","0)","0,","1)","1),","1);","1,","1;","2)","2));","23.",":","=","==",">=",">>","?","arraylist<>(arrays.aslist(lists));","comparator()","compare(listnod","heap","int","k","l,","l1","l1,","l2","l2)","l2);","l2;","list","list);","listnod","lists)","lists,","lists.length","lists[l];","m","m);","merg","merge(l1,","merge(listnod","merge2list(newlist.get(newlist.size()","mergeklists(listnode[]","mergeklists2(listnode[]","naiv","new","newlist","newlist.add(0,","newlist.get(0);","newlist.get(newlist.size()","newlist.remove(newlist.size()","null","null)","null;","partition(listnode[]","partition(lists,","priorityqueu","priorityqueue<>(lists.length,","public","q","r)","r);","recus","return","sort","{","||","}","一开始的实现，拼一拼","优先队列重写listnode的comparator从小到大取点。"],"alg/146_LRU_Cache.html":["\"\"\"","#","(when","//","0)","0),","0.75f,","0.75f是hashmap默认的load","0:","1","1);","146.",":rtype:",":type","=",">","__init__(self,","_add(self,","_remove(self,","access","boolean","cach","capac","capacity)","capacity):","capacity:","capacity;","class","collect","def","del","dict","eldest","eldest)","element","else:","factor会减少空间开销，但是会增加collision，从而增加了get和put的时间开销。","factor，用于hashmap的自动扩容。比如说hashmap有16个buckets，当12(16*0.75)个buckets装满后，hashmap会自动增加到32个buckets。","get(int","get(self,","import","int","java","key","key)","key):","key,","key:","larger","last_nod","last_node.next","link","linkedhashmap<>(capacity,","linkedhashmap直接实现，注意参数和removeeldestentry的返回值，这个配置在tij中也提到过，没有被访问过的元素会在列表的最前面。","list","lru","lrucache(object):","lrucache2","lrucache2(int","lrucache:","map","map.getordefault(key,","map.put(key,","map;","new","new_nod","next_nod","next_node.prev","node","node(0,","node(key,","node):","node.next","node.prev","node.valu","node:","node_remov","none","order","ordereddict","ordereddict()","prev_nod","prev_node.next","protect","public","put(int","put(self,","remov","removeeldestentry(map.entri","return","self._add(new_node)","self._add(node)","self._remove(node)","self._remove(node_remove)","self.cap","self.capac","self.d","self.d.pop(key)","self.d.popitem(last=false)","self.d:","self.d[key]","self.d[node_remove.key]","self.head","self.head,","self.head.next","self.key","self.next","self.prev","self.siz","self.tail","self.tail.prev","self.valu","size()","this.capac","true","true)","updat","valu","value)","value):","value);","value:","void","{","{}","}","};","主要逻辑：","作用：平衡时间和空间的开销。高的load","链表+字典实现，所有用过的点会插入链表末尾："],"alg/817_Linked_List_Components.html":["(int","0;","817.","=","compon","g)","hashset();","head,","int","int[]","link","list","new","numcomponents(listnod","public","set","{","判断链表中元素是否在set(g)中得到连通分量的个数（下一个节点为null或者不在set中）。"],"alg/707_Design_Linked_List.html":["\"\"\"","+=","0","0:","1","1):","1.","707.",":rtype:",":type","=","==","__init__(self):","__init__(self,","add","addathead(self,","addatindex(self,","addattail(self,","append","befor","class","curr","curr.next","curr.next.next","curr.val","data","def","delet","deleteatindex(self,","design","element","else:","end","equal","first","get(self,","greater","here.","index","index):","index,","index:","initi","inserted.","insertion,","int","invalid,","last","length","length,","link","list","list,","list.","mylinkedlist(object):","new","node","node(object):","node(val)","node.next","none","none:","range(index","range(index):","return","self.addatindex(0,","self.addatindex(self.size,","self.head","self.next","self.siz","self.size:","self.val","structur","th","val","val)","val):","val:","valid.","valu","void","基本操作，注意函数的复用，addathead和addattail可以用addatindex来写"],"alg/19_Remove_Nth_Node_From_End_of_List.html":["!=","\"\"\"","(int","(l1","(n","+","//","0)","0;","1):","19.",":rtype:",":type","=","==","comput","def","dummi","dummy,","dummy.next","dummy;","end","fast","fast,","fast.next","fast:","forward","head","head,","head:","head;","int","l1","l1.next;","length","length++;","list","listnod","listnode(0)","listnode(0);","n)","n):","n:","n;","naive方法，要算两次","new","node","nth","null)","public","range(n","re","remov","removenthfromend(listnod","removenthfromend(self,","return","slow","slow.next","slow.next.next","step","{","}","高票答案改写："],"2_tree.html":["100,","101,","102","104,","111,","112","144，94，145,","222,","226,","617","872","depth:","invert","merge:","nodes:","same","symmetr","tree","||","二叉树的性质:","操作：栈，递归","递归三连：前中后序遍历，level遍历","难点：写递归，有返回值的递归，没有返回值的递归，作为helper函数的递归等等.."],"alg/144_Binary_Tree_Preorder_Traversal.html":["!=","(!s.isempty())","(node.left","(node.right","(root","(root.left","(root.right","//","144.","=","==","arraylist<>();","binari","dfs(root,","dfs(root.left,","dfs(root.right,","dfs(treenod","linkedlist","linkedlist<>();","list","naive级别递归三连其一：前序遍历。","new","node","null)","preorder","preordertraversal(treenod","public","re","res)","res);","res.add(node.val);","res.add(root.left.val);","res.add(root.right.val);","res.add(root.val);","res;","return","return;","root)","root,","s","s.pop();","s.push(node.left);","s.push(node.right);","s.push(root);","travers","tree","treenod","void","{","}","右边的坑：dfs(root.right,","左边的坑：dfs(root.left,","栈：先push右边再push左边，保持左边元素永远在栈顶（第一个出栈）","递归的理解：先写出三个点的前序遍历，然后发现后面两个左右子树的if可以用dfs复用。"],"alg/94_Binary_Tree_Inorder_Traversal.html":["!=","!stack.isempty())","(node","(root","(root.left","(root.right","//","94.","=","==","arraylist();","arraylist<>();","binari","dfs(root,","dfs(root.left,","dfs(root.right,","dfs(treenod","inord","inordertraversal(treenod","inordertraversal2(treenod","linkedlist","linkedlist();","list","naive级别递归三连其二：中序遍历。","new","node","node.left;","node.right;","null","null)","public","re","res)","res);","res.add(node.val);","res.add(root.left.val);","res.add(root.right.val);","res.add(root.val);","res;","return","return;","root)","root,","root;","stack","stack.pop();","stack.push(node);","travers","tree","treenod","void","{","||","}","右边的坑：dfs(root.right,","左边的坑：dfs(root.left,","永远的栈，注意用linkedlist","递归的理解：同样先写出三个点的中序遍历，然后发现迷之缩进里的两个左右子树的if可以用dfs复用。"],"alg/145_Binary_Tree_Postorder_Traversal.html":["(root","(root.left","(root.right","//","145.","=","==","arraylist<>();","binari","dfs(root,","dfs(root.left,","dfs(root.right,","dfs(treenod","list","naive级别递归三连其三：后序遍历。","new","null)","postord","postordertraversal(treenod","public","re","res)","res);","res.add(root.left.val);","res.add(root.right.val);","res.add(root.val);","res;","return","return;","root)","root,","travers","tree","void","{","}","右边的坑：dfs(root.right,","左边的坑：dfs(root.left,","递归的理解：写出三个点的后序遍历，然后发现迷之缩进里的两个左右子树的if可以用dfs复用。"],"alg/102_Binary_Tree_Level_Order_Traversal.html":["\"\"\"","(!q.isempty())","(int","(root","0;","102.",":rtype:",":type","=","==","[]","[root]","_","binari","def","else:","fals","flag","flag:","int","level","levelnum","levelorder(treenod","linkedlist<>();","list","list>","list[list[int]]","new","node","node.left:","node.right:","null)","order","public","q","q.offer(root);","q.size();","queue","queue.append(node.left)","queue.append(node.right)","queue.pop(0)","queue:","range(len(queue)):","re","res.append(val)","res;","return","root)","root):","root:","subr","travers","tree","treenod","true","val","val.append(node.val)","val.reverse()","zigzaglevelorder(self,","zigzag和ii记得去看答案，还有dfs递归解法。","zigzag那道题用了flag..","{","栈。注意list的用法，比如有时候时deque，有时候时linkedlist。queue的时候一般用offer方法，因为容量满的时候不会抛出异常而是返回false。"],"alg/100_Same_Tree.html":["&&","(left","100.","==","boolean","false;","issametree(left.left,","issametree(left.right,","issametree(treenod","left,","left.val","null","null)","public","return","right","right)","right.left)","right.right);","right.val","same","tree","treenod","true;","{","||","}","基础递归"],"alg/101_Symmetric_Tree.html":["&&","(left","(left.val","(root","101.","==","boolean","dfs(left.left,","dfs(left.right,","dfs(root.left,","dfs(treenod","false;","issymmetric(treenod","left,","null","null)","public","return","right","right)","right.left);","right.right)","right.val)","root)","root.right);","symmetr","tree","treenod","tree很像，把root弄成了两个点，并且左右子树相反。","true;","{","||","}","和same"],"alg/226_Invert_Binary_Tree.html":["!=","\"\"\"","(!q.isempty())","(node.left","(node.right","(root","226.",":rtype:",":type","=","==","bfs:","binari","def","invert","inverttree(root.right);","inverttree(self,","inverttree(tmp);","inverttree(treenod","linkedlist<>();","naive递归","new","node","node.left","node.left;","node.right","node.right;","null)","null;","public","q","q.offer(node.left);","q.offer(node.right);","q.offer(root);","q.poll();","queue","return","root","root)","root):","root.left","root.left,","root.left;","root.right","root.right,","root:","root;","self.inverttree(root.left)","self.inverttree(root.right)","tmp","tmp;","tree","treenod","{","}"],"alg/617_Merge_Two_Binary_Trees.html":["(t1","+=","617.",":","=","==","?","binari","merg","mergetrees(t1.left,","mergetrees(t1.right,","mergetrees(treenod","null","null)","public","return","t1,","t1.left","t1.right","t1.val","t1;","t2","t2)","t2.left);","t2.right);","t2.val;","tree","treenod","two","{","||","}","简单递归，可以先考虑三个点的情况写出来。"],"alg/872_Leaf-Similar_Trees.html":["&&","(root","(root.left","872.","=","==","arraylist<>(),","arraylist<>();","boolean","findleaf(root.left,","findleaf(root.right,","findleaf(root1,","findleaf(root2,","findleaf(treenod","leaf","leafsimilar(treenod","list","naive比较法，效率比较低，还有一种同时比较的方法，记得去看。","new","null","null)","public","res)","res);","res.add(root.val);","res1","res1);","res1.equals(res2);","res2","res2);","return","return;","root,","root.right","root1,","root2)","similar","tree","treenod","void","{","}"],"alg/104_Maximum_Depth_of_Binary_Tree.html":["+","+1","/","0;","1","104.","15","20","3","7","9","==","\\","binari","depth","if(root","int","math.max(maxdepth(root.left),","maxdepth(root.right));","maxdepth(treenod","maximum","null","null)","public","return","root)","tree","{","}","递归时，每层路径加一"],"alg/111_Minimum_Depth_of_Binary_Tree.html":["+","0","0)","0;","111.","1;","=","==","binari","depth","if(left","if(root","int","left","math.min(left,","mindepth(root.left);","mindepth(root.right);","mindepth(treenod","minimum","null)","public","return","right","right)","root)","tree","{","||","}","保证树是一层的且左右子树有一边为0的时候[1,3]，最小值为2","和求maxdepth基本一样"],"alg/112_Path_Sum.html":["&&","(root","(root.left","112.","==","boolean","false;","haspathsum(root.left,","haspathsum(root.right,","haspathsum(treenod","int","null","null)","path","public","return","root,","root.right","root.val)","root.val);","root.val;","sum","sum)","{","||","}"],"alg/222_Count_Complete_Tree_Nodes.html":["(countnodes(root.left)","(countnodes(root.right)","(int)","(leftdepth","(n>=0)","(root","+","0;","1","1)=2个节点","1)个节点。如第二层有2^(2","1.第i层有2^(i","1=7个节点","1个节点。如三层的树最多有2^3","2.深度为k的二叉树最多有2^k","222.","3.对任何一棵二叉树t,","4.具有","=","==","complet","count","countnodes(root.left)","countnodes(root.right);","countnodes(treenod","getdepth(root.left);","getdepth(root.right);","getdepth(treenod","int","leftdepth","leftdepth));","math.pow(2,","n","node","null)","public","return","rightdepth","rightdepth)","rightdepth));","root)","tree","{","}","个结点的完全二叉树的深度为⌊log(n)⌋+1。如4个节点的树有⌊log(4)⌋+1=3层。","则n0＝n2＋1。","可以用遍历法求，但是不能判断是不是complete，且为o(n)的时间复杂度","如果其叶结点数为n0,","度为2的结点数为n2,","是一个很迷的递归，","补一下二叉树的性质："]},"length":47},"tokenStore":{"root":{"0":{"docs":{"alg/15_3Sum.html":{"ref":"alg/15_3Sum.html","tf":0.03076923076923077},"alg/18_4Sum.html":{"ref":"alg/18_4Sum.html","tf":0.013157894736842105},"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.008928571428571428},"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.004291845493562232},"alg/111_Minimum_Depth_of_Binary_Tree.html":{"ref":"alg/111_Minimum_Depth_of_Binary_Tree.html","tf":0.03508771929824561}},";":{"docs":{"alg/1_2Sum.html":{"ref":"alg/1_2Sum.html","tf":0.03571428571428571},"alg/15_3Sum.html":{"ref":"alg/15_3Sum.html","tf":0.015384615384615385},"alg/18_4Sum.html":{"ref":"alg/18_4Sum.html","tf":0.013157894736842105},"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.008928571428571428},"alg/169_Majority_Element.html":{"ref":"alg/169_Majority_Element.html","tf":0.017094017094017096},"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.005050505050505051},"alg/817_Linked_List_Components.html":{"ref":"alg/817_Linked_List_Components.html","tf":0.05},"alg/19_Remove_Nth_Node_From_End_of_List.html":{"ref":"alg/19_Remove_Nth_Node_From_End_of_List.html","tf":0.018867924528301886},"alg/102_Binary_Tree_Level_Order_Traversal.html":{"ref":"alg/102_Binary_Tree_Level_Order_Traversal.html","tf":0.010869565217391304},"alg/104_Maximum_Depth_of_Binary_Tree.html":{"ref":"alg/104_Maximum_Depth_of_Binary_Tree.html","tf":0.02702702702702703},"alg/111_Minimum_Depth_of_Binary_Tree.html":{"ref":"alg/111_Minimum_Depth_of_Binary_Tree.html","tf":0.017543859649122806},"alg/222_Count_Complete_Tree_Nodes.html":{"ref":"alg/222_Count_Complete_Tree_Nodes.html","tf":0.03260869565217391}}},")":{"docs":{"alg/169_Majority_Element.html":{"ref":"alg/169_Majority_Element.html","tf":0.008547008547008548},"alg/23_Merge_k_Sorted_Lists.html":{"ref":"alg/23_Merge_k_Sorted_Lists.html","tf":0.006944444444444444},"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.003246753246753247},"alg/19_Remove_Nth_Node_From_End_of_List.html":{"ref":"alg/19_Remove_Nth_Node_From_End_of_List.html","tf":0.009433962264150943},"alg/111_Minimum_Depth_of_Binary_Tree.html":{"ref":"alg/111_Minimum_Depth_of_Binary_Tree.html","tf":0.03508771929824561}},":":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.013392857142857142}}},",":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.003246753246753247}}}},"]":{"docs":{},",":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.008928571428571428}}}},",":{"docs":{"alg/169_Majority_Element.html":{"ref":"alg/169_Majority_Element.html","tf":0.008547008547008548},"alg/704_Binary_Search.html":{"ref":"alg/704_Binary_Search.html","tf":0.02909090909090909},"alg/23_Merge_k_Sorted_Lists.html":{"ref":"alg/23_Merge_k_Sorted_Lists.html","tf":0.006944444444444444}}},".":{"7":{"5":{"docs":{},"f":{"docs":{},",":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.003246753246753247}}},"是":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"默":{"docs":{},"认":{"docs":{},"的":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.003246753246753247}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}},":":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.006493506493506494},"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.008583690987124463}}}},"1":{"0":{"0":{"docs":{},",":{"docs":{"2_tree.html":{"ref":"2_tree.html","tf":0.041666666666666664}}},".":{"docs":{"alg/100_Same_Tree.html":{"ref":"alg/100_Same_Tree.html","tf":3.356060606060606}}}},"1":{"docs":{},",":{"docs":{"2_tree.html":{"ref":"2_tree.html","tf":0.041666666666666664}}},".":{"docs":{"alg/101_Symmetric_Tree.html":{"ref":"alg/101_Symmetric_Tree.html","tf":3.350282485875706}}}},"2":{"docs":{"2_tree.html":{"ref":"2_tree.html","tf":0.041666666666666664}},".":{"docs":{"alg/102_Binary_Tree_Level_Order_Traversal.html":{"ref":"alg/102_Binary_Tree_Level_Order_Traversal.html","tf":1.6775362318840579}}}},"4":{"docs":{},",":{"docs":{"2_tree.html":{"ref":"2_tree.html","tf":0.041666666666666664}}},".":{"docs":{"alg/104_Maximum_Depth_of_Binary_Tree.html":{"ref":"alg/104_Maximum_Depth_of_Binary_Tree.html","tf":2.027027027027027}}}},"docs":{}},"1":{"1":{"docs":{},",":{"docs":{"2_tree.html":{"ref":"2_tree.html","tf":0.041666666666666664}}},".":{"docs":{"alg/111_Minimum_Depth_of_Binary_Tree.html":{"ref":"alg/111_Minimum_Depth_of_Binary_Tree.html","tf":2.017543859649123}}}},"2":{"docs":{"2_tree.html":{"ref":"2_tree.html","tf":0.041666666666666664}},".":{"docs":{"alg/112_Path_Sum.html":{"ref":"alg/112_Path_Sum.html","tf":3.3619047619047615}}}},"docs":{},",":{"docs":{"alg/18_4Sum.html":{"ref":"alg/18_4Sum.html","tf":0.013157894736842105}}}},"2":{"docs":{},",":{"docs":{"alg/18_4Sum.html":{"ref":"alg/18_4Sum.html","tf":0.013157894736842105}}}},"3":{"docs":{},",":{"docs":{"alg/18_4Sum.html":{"ref":"alg/18_4Sum.html","tf":0.013157894736842105}}}},"4":{"1":{"docs":{},",":{"docs":{"1_linkedlist.html":{"ref":"1_linkedlist.html","tf":0.02564102564102564}}},".":{"docs":{"alg/141_Linked_List_Cycle.html":{"ref":"alg/141_Linked_List_Cycle.html","tf":2.521276595744681}}}},"2":{"docs":{"1_linkedlist.html":{"ref":"1_linkedlist.html","tf":0.02564102564102564}},".":{"docs":{"alg/142_Linked_List_Cycle_II.html":{"ref":"alg/142_Linked_List_Cycle_II.html","tf":2.017543859649123}}}},"3":{"docs":{},"（":{"docs":{},"这":{"docs":{},"两":{"docs":{},"题":{"docs":{},"前":{"docs":{},"两":{"docs":{},"步":{"docs":{},"一":{"docs":{},"样":{"docs":{},"，":{"docs":{},"都":{"docs":{},"是":{"docs":{},"先":{"docs":{},"分":{"docs":{},"割":{"docs":{},"再":{"docs":{},"反":{"docs":{},"转":{"docs":{},"，":{"docs":{},"再":{"docs":{},"比":{"docs":{},"较":{"docs":{},"或":{"docs":{},"合":{"docs":{},"并":{"docs":{},"）":{"docs":{},",":{"docs":{"1_linkedlist.html":{"ref":"1_linkedlist.html","tf":0.02564102564102564}}}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{"alg/143_Reorder_List.html":{"ref":"alg/143_Reorder_List.html","tf":3.3407960199004973}}}},"4":{"docs":{},"，":{"9":{"4":{"docs":{},"，":{"1":{"4":{"5":{"docs":{},",":{"docs":{"2_tree.html":{"ref":"2_tree.html","tf":0.041666666666666664}}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},".":{"docs":{"alg/144_Binary_Tree_Preorder_Traversal.html":{"ref":"alg/144_Binary_Tree_Preorder_Traversal.html","tf":2.0093457943925235}}}},"5":{"docs":{},".":{"docs":{"alg/145_Binary_Tree_Postorder_Traversal.html":{"ref":"alg/145_Binary_Tree_Postorder_Traversal.html","tf":2.014705882352941}}}},"6":{"docs":{},"(":{"docs":{},"l":{"docs":{},"r":{"docs":{},"u":{"docs":{},")":{"docs":{"1_linkedlist.html":{"ref":"1_linkedlist.html","tf":0.02564102564102564}}}}}}},".":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":3.3365800865800863}}}},"7":{"docs":{"1_linkedlist.html":{"ref":"1_linkedlist.html","tf":0.02564102564102564}},".":{"docs":{"alg/147_Insertion_Sort_List.html":{"ref":"alg/147_Insertion_Sort_List.html","tf":2.5238095238095237}}}},"8":{"docs":{"1_linkedlist.html":{"ref":"1_linkedlist.html","tf":0.02564102564102564}},".":{"docs":{"alg/148_Sort_List.html":{"ref":"alg/148_Sort_List.html","tf":3.345098039215686}}}},"9":{"docs":{},".":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":2.5044642857142856}}}},"docs":{}},"5":{"docs":{"alg/104_Maximum_Depth_of_Binary_Tree.html":{"ref":"alg/104_Maximum_Depth_of_Binary_Tree.html","tf":0.02702702702702703}},".":{"docs":{"alg/15_3Sum.html":{"ref":"alg/15_3Sum.html","tf":5.015384615384615}}},",":{"docs":{"alg/18_4Sum.html":{"ref":"alg/18_4Sum.html","tf":0.013157894736842105}}}},"6":{"0":{"docs":{"1_linkedlist.html":{"ref":"1_linkedlist.html","tf":0.02564102564102564}},".":{"docs":{"alg/160_Intersection_of_Two_Linked_Lists.html":{"ref":"alg/160_Intersection_of_Two_Linked_Lists.html","tf":2.018181818181818}}}},"9":{"docs":{},".":{"docs":{"alg/169_Majority_Element.html":{"ref":"alg/169_Majority_Element.html","tf":3.3418803418803416}}}},"docs":{}},"7":{"3":{"docs":{},".":{"docs":{"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":2.005050505050505}}}},"docs":{"alg/18_4Sum.html":{"ref":"alg/18_4Sum.html","tf":0.013157894736842105}}},"8":{"docs":{},".":{"docs":{"alg/18_4Sum.html":{"ref":"alg/18_4Sum.html","tf":5.0131578947368425}}}},"9":{"docs":{"1_linkedlist.html":{"ref":"1_linkedlist.html","tf":0.02564102564102564}},".":{"docs":{"alg/19_Remove_Nth_Node_From_End_of_List.html":{"ref":"alg/19_Remove_Nth_Node_From_End_of_List.html","tf":1.6761006289308176}}}},"docs":{"alg/18_4Sum.html":{"ref":"alg/18_4Sum.html","tf":0.013157894736842105},"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.008928571428571428},"alg/704_Binary_Search.html":{"ref":"alg/704_Binary_Search.html","tf":0.04727272727272727},"alg/86_Partition_List.html":{"ref":"alg/86_Partition_List.html","tf":0.010526315789473684},"alg/143_Reorder_List.html":{"ref":"alg/143_Reorder_List.html","tf":0.007462686567164179},"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.012987012987012988},"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.017167381974248927},"alg/104_Maximum_Depth_of_Binary_Tree.html":{"ref":"alg/104_Maximum_Depth_of_Binary_Tree.html","tf":0.05405405405405406},"alg/222_Count_Complete_Tree_Nodes.html":{"ref":"alg/222_Count_Complete_Tree_Nodes.html","tf":0.021739130434782608}},".":{"0":{"docs":{},")":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714}}}},"docs":{"alg/1_2Sum.html":{"ref":"alg/1_2Sum.html","tf":5.035714285714286},"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.004291845493562232}},"b":{"docs":{},"o":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{"alg/169_Majority_Element.html":{"ref":"alg/169_Majority_Element.html","tf":0.008547008547008548}}}}}}},"使":{"docs":{},"用":{"docs":{},"总":{"docs":{},"容":{"docs":{},"量":{"docs":{},"为":{"docs":{},"k":{"docs":{},"+":{"1":{"docs":{},"的":{"docs":{},"优":{"docs":{},"先":{"docs":{},"队":{"docs":{},"列":{"docs":{},"维":{"docs":{},"护":{"docs":{},"值":{"docs":{},"最":{"docs":{},"大":{"docs":{},"的":{"docs":{},"k":{"docs":{},"个":{"docs":{},"点":{"docs":{},"，":{"docs":{},"一":{"docs":{},"旦":{"docs":{},"总":{"docs":{},"数":{"docs":{},"量":{"docs":{},"y":{"docs":{},"超":{"docs":{},"过":{"docs":{},"k":{"docs":{},"，":{"docs":{},"移":{"docs":{},"除":{"docs":{},"y":{"docs":{},"中":{"docs":{},"值":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{},"点":{"docs":{},"。":{"docs":{},"堆":{"docs":{},"中":{"docs":{},"插":{"docs":{},"入":{"docs":{},"和":{"docs":{},"删":{"docs":{},"除":{"docs":{},"的":{"docs":{},"最":{"docs":{},"差":{"docs":{},"时":{"docs":{},"间":{"docs":{},"为":{"docs":{},"o":{"docs":{},"(":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"(":{"docs":{},"k":{"docs":{},")":{"docs":{},",":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"(":{"docs":{},"k":{"docs":{},")":{"docs":{},"为":{"docs":{},"堆":{"docs":{},"的":{"docs":{},"高":{"docs":{},"度":{"docs":{},"，":{"docs":{},"又":{"docs":{},"因":{"docs":{},"为":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"整":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{},"n":{"docs":{},"*":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"(":{"docs":{},"k":{"docs":{},")":{"docs":{"alg/215_Kth_Largest_Element_in_an_Array.html":{"ref":"alg/215_Kth_Largest_Element_in_an_Array.html","tf":0.010101010101010102}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},":":{"docs":{"alg/206_Reverse_Linked_List.html":{"ref":"alg/206_Reverse_Linked_List.html","tf":0.014705882352941176}}}}}}}},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},":":{"docs":{"alg/24_Swap_Nodes_in_Pairs.html":{"ref":"alg/24_Swap_Nodes_in_Pairs.html","tf":0.011363636363636364}}}}}}}}}}}},"第":{"docs":{},"i":{"docs":{},"层":{"docs":{},"有":{"2":{"docs":{},"^":{"docs":{},"(":{"docs":{},"i":{"docs":{"alg/222_Count_Complete_Tree_Nodes.html":{"ref":"alg/222_Count_Complete_Tree_Nodes.html","tf":0.010869565217391304}}}}}},"docs":{}}}}}},",":{"docs":{"alg/15_3Sum.html":{"ref":"alg/15_3Sum.html","tf":0.015384615384615385},"alg/18_4Sum.html":{"ref":"alg/18_4Sum.html","tf":0.013157894736842105},"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.013392857142857142},"alg/704_Binary_Search.html":{"ref":"alg/704_Binary_Search.html","tf":0.01090909090909091},"alg/23_Merge_k_Sorted_Lists.html":{"ref":"alg/23_Merge_k_Sorted_Lists.html","tf":0.006944444444444444}}},";":{"docs":{"alg/15_3Sum.html":{"ref":"alg/15_3Sum.html","tf":0.015384615384615385},"alg/18_4Sum.html":{"ref":"alg/18_4Sum.html","tf":0.02631578947368421},"alg/69_Sqrtx.html":{"ref":"alg/69_Sqrtx.html","tf":0.09090909090909091},"alg/704_Binary_Search.html":{"ref":"alg/704_Binary_Search.html","tf":0.014545454545454545},"alg/23_Merge_k_Sorted_Lists.html":{"ref":"alg/23_Merge_k_Sorted_Lists.html","tf":0.006944444444444444},"alg/111_Minimum_Depth_of_Binary_Tree.html":{"ref":"alg/111_Minimum_Depth_of_Binary_Tree.html","tf":0.05263157894736842}}},"]":{"docs":{},")":{"docs":{"alg/15_3Sum.html":{"ref":"alg/15_3Sum.html","tf":0.03076923076923077},"alg/18_4Sum.html":{"ref":"alg/18_4Sum.html","tf":0.02631578947368421}}},",":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714}}}},")":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.008928571428571428},"alg/23_Merge_k_Sorted_Lists.html":{"ref":"alg/23_Merge_k_Sorted_Lists.html","tf":0.006944444444444444}},":":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.022321428571428572},"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.008583690987124463},"alg/19_Remove_Nth_Node_From_End_of_List.html":{"ref":"alg/19_Remove_Nth_Node_From_End_of_List.html","tf":0.009433962264150943}}},";":{"docs":{"alg/169_Majority_Element.html":{"ref":"alg/169_Majority_Element.html","tf":0.017094017094017096},"alg/23_Merge_k_Sorted_Lists.html":{"ref":"alg/23_Merge_k_Sorted_Lists.html","tf":0.020833333333333332},"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.003246753246753247}}},",":{"docs":{"alg/23_Merge_k_Sorted_Lists.html":{"ref":"alg/23_Merge_k_Sorted_Lists.html","tf":0.006944444444444444}}},"=":{"2":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{"alg/222_Count_Complete_Tree_Nodes.html":{"ref":"alg/222_Count_Complete_Tree_Nodes.html","tf":0.010869565217391304}}}}}},"docs":{}},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{},"如":{"docs":{},"第":{"docs":{},"二":{"docs":{},"层":{"docs":{},"有":{"2":{"docs":{},"^":{"docs":{},"(":{"2":{"docs":{"alg/222_Count_Complete_Tree_Nodes.html":{"ref":"alg/222_Count_Complete_Tree_Nodes.html","tf":0.010869565217391304}}},"docs":{}}}},"docs":{}}}}}}}}}}},"|":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714}}},"}":{"docs":{},")":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.022321428571428572}}}},"改":{"docs":{},"成":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},")":{"docs":{},"免":{"docs":{},"去":{"docs":{},"检":{"docs":{},"查":{"docs":{"alg/704_Binary_Search.html":{"ref":"alg/704_Binary_Search.html","tf":0.0036363636363636364}}}}}}}}}}}}}}}}},"=":{"7":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{"alg/222_Count_Complete_Tree_Nodes.html":{"ref":"alg/222_Count_Complete_Tree_Nodes.html","tf":0.010869565217391304}}}}}},"docs":{}},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{},"如":{"docs":{},"三":{"docs":{},"层":{"docs":{},"的":{"docs":{},"树":{"docs":{},"最":{"docs":{},"多":{"docs":{},"有":{"2":{"docs":{},"^":{"3":{"docs":{"alg/222_Count_Complete_Tree_Nodes.html":{"ref":"alg/222_Count_Complete_Tree_Nodes.html","tf":0.010869565217391304}}},"docs":{}}},"docs":{}}}}}}}}}}}}}},"2":{"0":{"3":{"docs":{},",":{"docs":{"1_linkedlist.html":{"ref":"1_linkedlist.html","tf":0.02564102564102564}}},".":{"docs":{"alg/203_Remove_Linked_List_Elements.html":{"ref":"alg/203_Remove_Linked_List_Elements.html","tf":2.007142857142857}}}},"6":{"docs":{},",":{"docs":{"1_linkedlist.html":{"ref":"1_linkedlist.html","tf":0.02564102564102564}}},".":{"docs":{"alg/206_Reverse_Linked_List.html":{"ref":"alg/206_Reverse_Linked_List.html","tf":2.514705882352941}}}},"docs":{"alg/104_Maximum_Depth_of_Binary_Tree.html":{"ref":"alg/104_Maximum_Depth_of_Binary_Tree.html","tf":0.02702702702702703}}},"1":{"5":{"docs":{},".":{"docs":{"alg/215_Kth_Largest_Element_in_an_Array.html":{"ref":"alg/215_Kth_Largest_Element_in_an_Array.html","tf":2.01010101010101}}}},"docs":{},",":{"docs":{"1_linkedlist.html":{"ref":"1_linkedlist.html","tf":0.02564102564102564}}},".":{"docs":{"alg/21_Merge_Two_Sorted_Lists.html":{"ref":"alg/21_Merge_Two_Sorted_Lists.html","tf":2.017857142857143}}}},"2":{"2":{"docs":{},",":{"docs":{"2_tree.html":{"ref":"2_tree.html","tf":0.041666666666666664}}},".":{"docs":{"alg/222_Count_Complete_Tree_Nodes.html":{"ref":"alg/222_Count_Complete_Tree_Nodes.html","tf":2.010869565217391}}}},"6":{"docs":{},",":{"docs":{"2_tree.html":{"ref":"2_tree.html","tf":0.041666666666666664}}},".":{"docs":{"alg/226_Invert_Binary_Tree.html":{"ref":"alg/226_Invert_Binary_Tree.html","tf":2.5106382978723403}}}},"docs":{}},"3":{"4":{"docs":{},",":{"docs":{"1_linkedlist.html":{"ref":"1_linkedlist.html","tf":0.02564102564102564}}},".":{"docs":{"alg/234_Palindrome_Linked_List.html":{"ref":"alg/234_Palindrome_Linked_List.html","tf":2.511764705882353}}}},"7":{"docs":{},",":{"docs":{"1_linkedlist.html":{"ref":"1_linkedlist.html","tf":0.02564102564102564}}},".":{"docs":{"alg/237_Delete_Node_in_a_Linked_List.html":{"ref":"alg/237_Delete_Node_in_a_Linked_List.html","tf":2.0555555555555554}}}},"docs":{},"(":{"docs":{},"一":{"docs":{},"开":{"docs":{},"始":{"docs":{},"的":{"docs":{},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"很":{"docs":{},"慢":{"docs":{},")":{"docs":{"1_linkedlist.html":{"ref":"1_linkedlist.html","tf":0.02564102564102564}}}}}}}}}}}}}},".":{"docs":{"alg/23_Merge_k_Sorted_Lists.html":{"ref":"alg/23_Merge_k_Sorted_Lists.html","tf":2.0069444444444446}}}},"4":{"docs":{"1_linkedlist.html":{"ref":"1_linkedlist.html","tf":0.02564102564102564}},".":{"docs":{"alg/24_Swap_Nodes_in_Pairs.html":{"ref":"alg/24_Swap_Nodes_in_Pairs.html","tf":2.5113636363636362}}}},"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.008928571428571428},"alg/143_Reorder_List.html":{"ref":"alg/143_Reorder_List.html","tf":0.007462686567164179}},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"alg/1_2Sum.html":{"ref":"alg/1_2Sum.html","tf":5.035714285714286}}}}},")":{"docs":{"alg/69_Sqrtx.html":{"ref":"alg/69_Sqrtx.html","tf":0.04040404040404041},"alg/169_Majority_Element.html":{"ref":"alg/169_Majority_Element.html","tf":0.008547008547008548},"alg/23_Merge_k_Sorted_Lists.html":{"ref":"alg/23_Merge_k_Sorted_Lists.html","tf":0.006944444444444444}},":":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714}}},")":{"docs":{},";":{"docs":{"alg/23_Merge_k_Sorted_Lists.html":{"ref":"alg/23_Merge_k_Sorted_Lists.html","tf":0.006944444444444444}}}}},"]":{"docs":{"alg/215_Kth_Largest_Element_in_an_Array.html":{"ref":"alg/215_Kth_Largest_Element_in_an_Array.html","tf":0.020202020202020204}},"]":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714}}},";":{"docs":{"alg/169_Majority_Element.html":{"ref":"alg/169_Majority_Element.html","tf":0.008547008547008548}}}},"|":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714}}},"}":{"docs":{},")":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714}}}},".":{"docs":{},"字":{"docs":{},"典":{"docs":{"alg/169_Majority_Element.html":{"ref":"alg/169_Majority_Element.html","tf":0.008547008547008548}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},":":{"docs":{"alg/206_Reverse_Linked_List.html":{"ref":"alg/206_Reverse_Linked_List.html","tf":0.014705882352941176},"alg/24_Swap_Nodes_in_Pairs.html":{"ref":"alg/24_Swap_Nodes_in_Pairs.html","tf":0.011363636363636364}}}}}}}}}}}},"深":{"docs":{},"度":{"docs":{},"为":{"docs":{},"k":{"docs":{},"的":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"最":{"docs":{},"多":{"docs":{},"有":{"2":{"docs":{},"^":{"docs":{},"k":{"docs":{"alg/222_Count_Complete_Tree_Nodes.html":{"ref":"alg/222_Count_Complete_Tree_Nodes.html","tf":0.010869565217391304}}}}},"docs":{}}}}}}}}}}}}},",":{"docs":{"alg/215_Kth_Largest_Element_in_an_Array.html":{"ref":"alg/215_Kth_Largest_Element_in_an_Array.html","tf":0.010101010101010102}}},";":{"docs":{"alg/704_Binary_Search.html":{"ref":"alg/704_Binary_Search.html","tf":0.007272727272727273}}}},"3":{"2":{"8":{"docs":{"1_linkedlist.html":{"ref":"1_linkedlist.html","tf":0.02564102564102564}},".":{"docs":{"alg/328_Odd_Even_Linked_List.html":{"ref":"alg/328_Odd_Even_Linked_List.html","tf":2.018181818181818}}}},"docs":{}},"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714},"alg/215_Kth_Largest_Element_in_an_Array.html":{"ref":"alg/215_Kth_Largest_Element_in_an_Array.html","tf":0.010101010101010102},"alg/143_Reorder_List.html":{"ref":"alg/143_Reorder_List.html","tf":0.007462686567164179},"alg/104_Maximum_Depth_of_Binary_Tree.html":{"ref":"alg/104_Maximum_Depth_of_Binary_Tree.html","tf":0.02702702702702703}},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"alg/15_3Sum.html":{"ref":"alg/15_3Sum.html","tf":5.015384615384615}},".":{"docs":{"alg/18_4Sum.html":{"ref":"alg/18_4Sum.html","tf":0.013157894736842105}}},"偷":{"docs":{},"懒":{"docs":{},"法":{"docs":{},".":{"docs":{},".":{"docs":{"alg/18_4Sum.html":{"ref":"alg/18_4Sum.html","tf":0.013157894736842105}}}}}}}}}},";":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714}}},".":{"docs":{},"排":{"docs":{},"序":{"docs":{},"+":{"docs":{},"返":{"docs":{},"回":{"docs":{},"中":{"docs":{},"间":{"docs":{},"值":{"docs":{"alg/169_Majority_Element.html":{"ref":"alg/169_Majority_Element.html","tf":0.008547008547008548}}}}}}}}}},"对":{"docs":{},"任":{"docs":{},"何":{"docs":{},"一":{"docs":{},"棵":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"t":{"docs":{},",":{"docs":{"alg/222_Count_Complete_Tree_Nodes.html":{"ref":"alg/222_Count_Complete_Tree_Nodes.html","tf":0.010869565217391304}}}}}}}}}}}}},",":{"docs":{"alg/215_Kth_Largest_Element_in_an_Array.html":{"ref":"alg/215_Kth_Largest_Element_in_an_Array.html","tf":0.050505050505050504}}},"]":{"docs":{"alg/215_Kth_Largest_Element_in_an_Array.html":{"ref":"alg/215_Kth_Largest_Element_in_an_Array.html","tf":0.020202020202020204}}},"来":{"docs":{},"说":{"docs":{},"，":{"docs":{},"分":{"docs":{},"割":{"docs":{},"完":{"docs":{},"之":{"docs":{},"后":{"docs":{},"l":{"docs":{},"h":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"=":{"1":{"docs":{"alg/86_Partition_List.html":{"ref":"alg/86_Partition_List.html","tf":0.010526315789473684}}},"docs":{}}}}}}}}}}}}}}}}}},"4":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.008928571428571428},"alg/215_Kth_Largest_Element_in_an_Array.html":{"ref":"alg/215_Kth_Largest_Element_in_an_Array.html","tf":0.010101010101010102},"alg/143_Reorder_List.html":{"ref":"alg/143_Reorder_List.html","tf":0.007462686567164179}},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"alg/18_4Sum.html":{"ref":"alg/18_4Sum.html","tf":5.0131578947368425}}}}},",":{"docs":{"alg/215_Kth_Largest_Element_in_an_Array.html":{"ref":"alg/215_Kth_Largest_Element_in_an_Array.html","tf":0.010101010101010102}}},".":{"docs":{},"具":{"docs":{},"有":{"docs":{"alg/222_Count_Complete_Tree_Nodes.html":{"ref":"alg/222_Count_Complete_Tree_Nodes.html","tf":0.010869565217391304}}}}}},"5":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714},"alg/143_Reorder_List.html":{"ref":"alg/143_Reorder_List.html","tf":0.014925373134328358}},",":{"docs":{"alg/215_Kth_Largest_Element_in_an_Array.html":{"ref":"alg/215_Kth_Largest_Element_in_an_Array.html","tf":0.020202020202020204}}},"]":{"docs":{"alg/215_Kth_Largest_Element_in_an_Array.html":{"ref":"alg/215_Kth_Largest_Element_in_an_Array.html","tf":0.04040404040404041}}}},"6":{"1":{"7":{"docs":{"2_tree.html":{"ref":"2_tree.html","tf":0.041666666666666664}},".":{"docs":{"alg/617_Merge_Two_Binary_Trees.html":{"ref":"alg/617_Merge_Two_Binary_Trees.html","tf":2.022727272727273}}}},"docs":{}},"9":{"docs":{},".":{"docs":{"alg/69_Sqrtx.html":{"ref":"alg/69_Sqrtx.html","tf":5.01010101010101}}}},"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714}},",":{"docs":{"alg/215_Kth_Largest_Element_in_an_Array.html":{"ref":"alg/215_Kth_Largest_Element_in_an_Array.html","tf":0.020202020202020204}}},"]":{"docs":{"alg/215_Kth_Largest_Element_in_an_Array.html":{"ref":"alg/215_Kth_Largest_Element_in_an_Array.html","tf":0.020202020202020204}}}},"7":{"0":{"4":{"docs":{},".":{"docs":{"alg/704_Binary_Search.html":{"ref":"alg/704_Binary_Search.html","tf":3.3369696969696965}}}},"7":{"docs":{},",":{"docs":{"1_linkedlist.html":{"ref":"1_linkedlist.html","tf":0.02564102564102564}}},".":{"docs":{"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":2.504291845493562}}}},"docs":{}},"docs":{"alg/104_Maximum_Depth_of_Binary_Tree.html":{"ref":"alg/104_Maximum_Depth_of_Binary_Tree.html","tf":0.02702702702702703}}},"8":{"1":{"7":{"docs":{"1_linkedlist.html":{"ref":"1_linkedlist.html","tf":0.02564102564102564}},".":{"docs":{"alg/817_Linked_List_Components.html":{"ref":"alg/817_Linked_List_Components.html","tf":2.55}}}},"docs":{}},"2":{"docs":{},",":{"docs":{"1_linkedlist.html":{"ref":"1_linkedlist.html","tf":0.02564102564102564}}},".":{"docs":{"alg/82_Remove_Duplicates_from_Sorted_List_II.html":{"ref":"alg/82_Remove_Duplicates_from_Sorted_List_II.html","tf":1.6820512820512818}}}},"3":{"docs":{},",":{"docs":{"1_linkedlist.html":{"ref":"1_linkedlist.html","tf":0.02564102564102564}}},".":{"docs":{"alg/83_Remove_Duplicates_from_Sorted_List.html":{"ref":"alg/83_Remove_Duplicates_from_Sorted_List.html","tf":2.014925373134328}}}},"6":{"docs":{},",":{"docs":{"1_linkedlist.html":{"ref":"1_linkedlist.html","tf":0.02564102564102564}}},".":{"docs":{"alg/86_Partition_List.html":{"ref":"alg/86_Partition_List.html","tf":3.3438596491228068}}}},"7":{"2":{"docs":{"2_tree.html":{"ref":"2_tree.html","tf":0.041666666666666664}},".":{"docs":{"alg/872_Leaf-Similar_Trees.html":{"ref":"alg/872_Leaf-Similar_Trees.html","tf":2.519230769230769}}}},"6":{"docs":{},",":{"docs":{"1_linkedlist.html":{"ref":"1_linkedlist.html","tf":0.02564102564102564}}},".":{"docs":{"alg/876_Middle_of_the_Linked_List.html":{"ref":"alg/876_Middle_of_the_Linked_List.html","tf":2.5285714285714285}}}},"docs":{}},"docs":{}},"9":{"4":{"docs":{},".":{"docs":{"alg/94_Binary_Tree_Inorder_Traversal.html":{"ref":"alg/94_Binary_Tree_Inorder_Traversal.html","tf":2.008771929824561}}}},"docs":{"alg/104_Maximum_Depth_of_Binary_Tree.html":{"ref":"alg/104_Maximum_Depth_of_Binary_Tree.html","tf":0.02702702702702703}}},"docs":{},"算":{"docs":{},"法":{"docs":{},"笔":{"docs":{},"记":{"docs":{"./":{"ref":"./","tf":1}}}}}},"�":{"docs":{},"�":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{"./":{"ref":"./","tf":10}}}}}}},"(":{"1":{"docs":{},",":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.013392857142857142}}},"，":{"1":{"docs":{},")":{"docs":{},"中":{"docs":{},"有":{"docs":{},"两":{"docs":{},"个":{"docs":{},"点":{"docs":{},"斜":{"docs":{},"率":{"docs":{},"相":{"docs":{},"等":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714}}}}}}}}}}}}},"docs":{}}},"docs":{},"i":{"docs":{"alg/15_3Sum.html":{"ref":"alg/15_3Sum.html","tf":0.015384615384615385}},"n":{"docs":{},"t":{"docs":{"alg/1_2Sum.html":{"ref":"alg/1_2Sum.html","tf":0.03571428571428571},"alg/15_3Sum.html":{"ref":"alg/15_3Sum.html","tf":0.015384615384615385},"alg/18_4Sum.html":{"ref":"alg/18_4Sum.html","tf":0.02631578947368421},"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714},"alg/169_Majority_Element.html":{"ref":"alg/169_Majority_Element.html","tf":0.008547008547008548},"alg/215_Kth_Largest_Element_in_an_Array.html":{"ref":"alg/215_Kth_Largest_Element_in_an_Array.html","tf":0.010101010101010102},"alg/817_Linked_List_Components.html":{"ref":"alg/817_Linked_List_Components.html","tf":0.05},"alg/19_Remove_Nth_Node_From_End_of_List.html":{"ref":"alg/19_Remove_Nth_Node_From_End_of_List.html","tf":0.009433962264150943},"alg/102_Binary_Tree_Level_Order_Traversal.html":{"ref":"alg/102_Binary_Tree_Level_Order_Traversal.html","tf":0.010869565217391304}},"e":{"docs":{},"g":{"docs":{"alg/169_Majority_Element.html":{"ref":"alg/169_Majority_Element.html","tf":0.008547008547008548}}}},")":{"docs":{"alg/222_Count_Complete_Tree_Nodes.html":{"ref":"alg/222_Count_Complete_Tree_Nodes.html","tf":0.021739130434782608}}}}}},"l":{"1":{"docs":{"alg/143_Reorder_List.html":{"ref":"alg/143_Reorder_List.html","tf":0.007462686567164179},"alg/21_Merge_Two_Sorted_Lists.html":{"ref":"alg/21_Merge_Two_Sorted_Lists.html","tf":0.05357142857142857},"alg/23_Merge_k_Sorted_Lists.html":{"ref":"alg/23_Merge_k_Sorted_Lists.html","tf":0.013888888888888888},"alg/19_Remove_Nth_Node_From_End_of_List.html":{"ref":"alg/19_Remove_Nth_Node_From_End_of_List.html","tf":0.009433962264150943}},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"alg/21_Merge_Two_Sorted_Lists.html":{"ref":"alg/21_Merge_Two_Sorted_Lists.html","tf":0.03571428571428571},"alg/23_Merge_k_Sorted_Lists.html":{"ref":"alg/23_Merge_k_Sorted_Lists.html","tf":0.013888888888888888}}}}}}},"docs":{"alg/15_3Sum.html":{"ref":"alg/15_3Sum.html","tf":0.03076923076923077},"alg/18_4Sum.html":{"ref":"alg/18_4Sum.html","tf":0.013157894736842105},"alg/704_Binary_Search.html":{"ref":"alg/704_Binary_Search.html","tf":0.007272727272727273},"alg/148_Sort_List.html":{"ref":"alg/148_Sort_List.html","tf":0.011764705882352941},"alg/23_Merge_k_Sorted_Lists.html":{"ref":"alg/23_Merge_k_Sorted_Lists.html","tf":0.013888888888888888}},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"alg/148_Sort_List.html":{"ref":"alg/148_Sort_List.html","tf":0.011764705882352941}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"alg/23_Merge_k_Sorted_Lists.html":{"ref":"alg/23_Merge_k_Sorted_Lists.html","tf":0.006944444444444444}}}}}}}}}}}}},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"alg/100_Same_Tree.html":{"ref":"alg/100_Same_Tree.html","tf":0.045454545454545456},"alg/101_Symmetric_Tree.html":{"ref":"alg/101_Symmetric_Tree.html","tf":0.03389830508474576}},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"alg/101_Symmetric_Tree.html":{"ref":"alg/101_Symmetric_Tree.html","tf":0.01694915254237288}}}}}},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{"alg/222_Count_Complete_Tree_Nodes.html":{"ref":"alg/222_Count_Complete_Tree_Nodes.html","tf":0.010869565217391304}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"w":{"docs":{},"(":{"docs":{},"m":{"docs":{},",":{"docs":{"alg/69_Sqrtx.html":{"ref":"alg/69_Sqrtx.html","tf":0.04040404040404041}}}}}}}}}}},"j":{"docs":{},"o":{"docs":{},"r":{"docs":{"alg/169_Majority_Element.html":{"ref":"alg/169_Majority_Element.html","tf":0.008547008547008548}}}}},"p":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},")":{"docs":{"alg/169_Majority_Element.html":{"ref":"alg/169_Majority_Element.html","tf":0.008547008547008548}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{"alg/169_Majority_Element.html":{"ref":"alg/169_Majority_Element.html","tf":0.008547008547008548}}}}}}}}}}}},"x":{"docs":{"alg/69_Sqrtx.html":{"ref":"alg/69_Sqrtx.html","tf":0.06060606060606061}}},"!":{"docs":{},"(":{"docs":{},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.005050505050505051}}}}}}}}}}}}}}}},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"alg/144_Binary_Tree_Preorder_Traversal.html":{"ref":"alg/144_Binary_Tree_Preorder_Traversal.html","tf":0.009345794392523364}}}}}}}}}}}}}},"q":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"alg/102_Binary_Tree_Level_Order_Traversal.html":{"ref":"alg/102_Binary_Tree_Level_Order_Traversal.html","tf":0.010869565217391304},"alg/226_Invert_Binary_Tree.html":{"ref":"alg/226_Invert_Binary_Tree.html","tf":0.010638297872340425}}}}}}}}}}}}}}},"n":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714},"alg/19_Remove_Nth_Node_From_End_of_List.html":{"ref":"alg/19_Remove_Nth_Node_From_End_of_List.html","tf":0.009433962264150943}},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"m":{"docs":{},"]":{"docs":{"alg/704_Binary_Search.html":{"ref":"alg/704_Binary_Search.html","tf":0.014545454545454545}}}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"alg/203_Remove_Linked_List_Elements.html":{"ref":"alg/203_Remove_Linked_List_Elements.html","tf":0.007142857142857143},"alg/234_Palindrome_Linked_List.html":{"ref":"alg/234_Palindrome_Linked_List.html","tf":0.011764705882352941},"alg/94_Binary_Tree_Inorder_Traversal.html":{"ref":"alg/94_Binary_Tree_Inorder_Traversal.html","tf":0.017543859649122806}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"alg/203_Remove_Linked_List_Elements.html":{"ref":"alg/203_Remove_Linked_List_Elements.html","tf":0.007142857142857143}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"alg/144_Binary_Tree_Preorder_Traversal.html":{"ref":"alg/144_Binary_Tree_Preorder_Traversal.html","tf":0.009345794392523364},"alg/226_Invert_Binary_Tree.html":{"ref":"alg/226_Invert_Binary_Tree.html","tf":0.010638297872340425}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"alg/144_Binary_Tree_Preorder_Traversal.html":{"ref":"alg/144_Binary_Tree_Preorder_Traversal.html","tf":0.009345794392523364},"alg/226_Invert_Binary_Tree.html":{"ref":"alg/226_Invert_Binary_Tree.html","tf":0.010638297872340425}}}}}}}}}}},"e":{"docs":{},"w":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"alg/23_Merge_k_Sorted_Lists.html":{"ref":"alg/23_Merge_k_Sorted_Lists.html","tf":0.013888888888888888}}}}}}}}}}}}}}},">":{"docs":{},"=":{"0":{"docs":{},")":{"docs":{"alg/222_Count_Complete_Tree_Nodes.html":{"ref":"alg/222_Count_Complete_Tree_Nodes.html","tf":0.010869565217391304}}}},"docs":{}}}},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714}}}}}}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"alg/24_Swap_Nodes_in_Pairs.html":{"ref":"alg/24_Swap_Nodes_in_Pairs.html","tf":0.011363636363636364}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{"alg/234_Palindrome_Linked_List.html":{"ref":"alg/234_Palindrome_Linked_List.html","tf":0.011764705882352941}},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"alg/234_Palindrome_Linked_List.html":{"ref":"alg/234_Palindrome_Linked_List.html","tf":0.011764705882352941}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"alg/147_Insertion_Sort_List.html":{"ref":"alg/147_Insertion_Sort_List.html","tf":0.023809523809523808}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"alg/169_Majority_Element.html":{"ref":"alg/169_Majority_Element.html","tf":0.008547008547008548}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{"alg/222_Count_Complete_Tree_Nodes.html":{"ref":"alg/222_Count_Complete_Tree_Nodes.html","tf":0.010869565217391304}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{"alg/222_Count_Complete_Tree_Nodes.html":{"ref":"alg/222_Count_Complete_Tree_Nodes.html","tf":0.010869565217391304}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{"alg/206_Reverse_Linked_List.html":{"ref":"alg/206_Reverse_Linked_List.html","tf":0.014705882352941176},"alg/82_Remove_Duplicates_from_Sorted_List_II.html":{"ref":"alg/82_Remove_Duplicates_from_Sorted_List_II.html","tf":0.015384615384615385},"alg/143_Reorder_List.html":{"ref":"alg/143_Reorder_List.html","tf":0.007462686567164179},"alg/147_Insertion_Sort_List.html":{"ref":"alg/147_Insertion_Sort_List.html","tf":0.023809523809523808}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"alg/82_Remove_Duplicates_from_Sorted_List_II.html":{"ref":"alg/82_Remove_Duplicates_from_Sorted_List_II.html","tf":0.015384615384615385}}}}}}}}}},"r":{"docs":{"alg/704_Binary_Search.html":{"ref":"alg/704_Binary_Search.html","tf":0.007272727272727273}},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.010101010101010102},"alg/144_Binary_Tree_Preorder_Traversal.html":{"ref":"alg/144_Binary_Tree_Preorder_Traversal.html","tf":0.028037383177570093},"alg/94_Binary_Tree_Inorder_Traversal.html":{"ref":"alg/94_Binary_Tree_Inorder_Traversal.html","tf":0.017543859649122806},"alg/145_Binary_Tree_Postorder_Traversal.html":{"ref":"alg/145_Binary_Tree_Postorder_Traversal.html","tf":0.029411764705882353},"alg/102_Binary_Tree_Level_Order_Traversal.html":{"ref":"alg/102_Binary_Tree_Level_Order_Traversal.html","tf":0.010869565217391304},"alg/101_Symmetric_Tree.html":{"ref":"alg/101_Symmetric_Tree.html","tf":0.01694915254237288},"alg/226_Invert_Binary_Tree.html":{"ref":"alg/226_Invert_Binary_Tree.html","tf":0.02127659574468085},"alg/872_Leaf-Similar_Trees.html":{"ref":"alg/872_Leaf-Similar_Trees.html","tf":0.019230769230769232},"alg/112_Path_Sum.html":{"ref":"alg/112_Path_Sum.html","tf":0.02857142857142857},"alg/222_Count_Complete_Tree_Nodes.html":{"ref":"alg/222_Count_Complete_Tree_Nodes.html","tf":0.03260869565217391}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"alg/144_Binary_Tree_Preorder_Traversal.html":{"ref":"alg/144_Binary_Tree_Preorder_Traversal.html","tf":0.009345794392523364},"alg/94_Binary_Tree_Inorder_Traversal.html":{"ref":"alg/94_Binary_Tree_Inorder_Traversal.html","tf":0.008771929824561403},"alg/145_Binary_Tree_Postorder_Traversal.html":{"ref":"alg/145_Binary_Tree_Postorder_Traversal.html","tf":0.014705882352941176},"alg/872_Leaf-Similar_Trees.html":{"ref":"alg/872_Leaf-Similar_Trees.html","tf":0.019230769230769232},"alg/112_Path_Sum.html":{"ref":"alg/112_Path_Sum.html","tf":0.02857142857142857}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"alg/144_Binary_Tree_Preorder_Traversal.html":{"ref":"alg/144_Binary_Tree_Preorder_Traversal.html","tf":0.009345794392523364},"alg/94_Binary_Tree_Inorder_Traversal.html":{"ref":"alg/94_Binary_Tree_Inorder_Traversal.html","tf":0.008771929824561403},"alg/145_Binary_Tree_Postorder_Traversal.html":{"ref":"alg/145_Binary_Tree_Postorder_Traversal.html","tf":0.014705882352941176}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.005050505050505051}}}}}}}}}}}}}}}}},"t":{"1":{"docs":{"alg/617_Merge_Two_Binary_Trees.html":{"ref":"alg/617_Merge_Two_Binary_Trees.html","tf":0.045454545454545456}}},"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.005050505050505051}}}}}}}}}}},"q":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"alg/215_Kth_Largest_Element_in_an_Array.html":{"ref":"alg/215_Kth_Largest_Element_in_an_Array.html","tf":0.010101010101010102}}}}}}}}}},"(":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"=":{"docs":{},"=":{"docs":{"alg/24_Swap_Nodes_in_Pairs.html":{"ref":"alg/24_Swap_Nodes_in_Pairs.html","tf":0.011363636363636364}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"alg/203_Remove_Linked_List_Elements.html":{"ref":"alg/203_Remove_Linked_List_Elements.html","tf":0.02142857142857143},"alg/83_Remove_Duplicates_from_Sorted_List.html":{"ref":"alg/83_Remove_Duplicates_from_Sorted_List.html","tf":0.029850746268656716},"alg/86_Partition_List.html":{"ref":"alg/86_Partition_List.html","tf":0.021052631578947368},"alg/143_Reorder_List.html":{"ref":"alg/143_Reorder_List.html","tf":0.007462686567164179},"alg/328_Odd_Even_Linked_List.html":{"ref":"alg/328_Odd_Even_Linked_List.html","tf":0.01818181818181818},"alg/148_Sort_List.html":{"ref":"alg/148_Sort_List.html","tf":0.011764705882352941}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"alg/83_Remove_Duplicates_from_Sorted_List.html":{"ref":"alg/83_Remove_Duplicates_from_Sorted_List.html","tf":0.014925373134328358}},")":{"docs":{"alg/24_Swap_Nodes_in_Pairs.html":{"ref":"alg/24_Swap_Nodes_in_Pairs.html","tf":0.011363636363636364}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"alg/203_Remove_Linked_List_Elements.html":{"ref":"alg/203_Remove_Linked_List_Elements.html","tf":0.014285714285714285},"alg/83_Remove_Duplicates_from_Sorted_List.html":{"ref":"alg/83_Remove_Duplicates_from_Sorted_List.html","tf":0.014925373134328358},"alg/86_Partition_List.html":{"ref":"alg/86_Partition_List.html","tf":0.021052631578947368}}}}}},"a":{"docs":{"alg/160_Intersection_of_Two_Linked_Lists.html":{"ref":"alg/160_Intersection_of_Two_Linked_Lists.html","tf":0.05454545454545454}}},"b":{"docs":{"alg/160_Intersection_of_Two_Linked_Lists.html":{"ref":"alg/160_Intersection_of_Two_Linked_Lists.html","tf":0.01818181818181818}}}}}}},"f":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"alg/876_Middle_of_the_Linked_List.html":{"ref":"alg/876_Middle_of_the_Linked_List.html","tf":0.02857142857142857},"alg/141_Linked_List_Cycle.html":{"ref":"alg/141_Linked_List_Cycle.html","tf":0.0425531914893617},"alg/142_Linked_List_Cycle_II.html":{"ref":"alg/142_Linked_List_Cycle_II.html","tf":0.03508771929824561},"alg/234_Palindrome_Linked_List.html":{"ref":"alg/234_Palindrome_Linked_List.html","tf":0.011764705882352941},"alg/143_Reorder_List.html":{"ref":"alg/143_Reorder_List.html","tf":0.007462686567164179},"alg/148_Sort_List.html":{"ref":"alg/148_Sort_List.html","tf":0.011764705882352941}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"alg/142_Linked_List_Cycle_II.html":{"ref":"alg/142_Linked_List_Cycle_II.html","tf":0.017543859649122806}}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{"alg/328_Odd_Even_Linked_List.html":{"ref":"alg/328_Odd_Even_Linked_List.html","tf":0.01818181818181818}}}}}},"w":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.003246753246753247}}}}}}},"=":{"docs":{"alg/1_2Sum.html":{"ref":"alg/1_2Sum.html","tf":0.07142857142857142},"alg/15_3Sum.html":{"ref":"alg/15_3Sum.html","tf":0.07692307692307693},"alg/18_4Sum.html":{"ref":"alg/18_4Sum.html","tf":0.07894736842105263},"alg/69_Sqrtx.html":{"ref":"alg/69_Sqrtx.html","tf":0.04040404040404041},"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.044642857142857144},"alg/169_Majority_Element.html":{"ref":"alg/169_Majority_Element.html","tf":0.03418803418803419},"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.06565656565656566},"alg/215_Kth_Largest_Element_in_an_Array.html":{"ref":"alg/215_Kth_Largest_Element_in_an_Array.html","tf":0.020202020202020204},"alg/704_Binary_Search.html":{"ref":"alg/704_Binary_Search.html","tf":0.06545454545454546},"alg/206_Reverse_Linked_List.html":{"ref":"alg/206_Reverse_Linked_List.html","tf":0.10294117647058823},"alg/24_Swap_Nodes_in_Pairs.html":{"ref":"alg/24_Swap_Nodes_in_Pairs.html","tf":0.13636363636363635},"alg/876_Middle_of_the_Linked_List.html":{"ref":"alg/876_Middle_of_the_Linked_List.html","tf":0.11428571428571428},"alg/141_Linked_List_Cycle.html":{"ref":"alg/141_Linked_List_Cycle.html","tf":0.0851063829787234},"alg/142_Linked_List_Cycle_II.html":{"ref":"alg/142_Linked_List_Cycle_II.html","tf":0.12280701754385964},"alg/160_Intersection_of_Two_Linked_Lists.html":{"ref":"alg/160_Intersection_of_Two_Linked_Lists.html","tf":0.07272727272727272},"alg/237_Delete_Node_in_a_Linked_List.html":{"ref":"alg/237_Delete_Node_in_a_Linked_List.html","tf":0.1111111111111111},"alg/203_Remove_Linked_List_Elements.html":{"ref":"alg/203_Remove_Linked_List_Elements.html","tf":0.08571428571428572},"alg/83_Remove_Duplicates_from_Sorted_List.html":{"ref":"alg/83_Remove_Duplicates_from_Sorted_List.html","tf":0.05970149253731343},"alg/82_Remove_Duplicates_from_Sorted_List_II.html":{"ref":"alg/82_Remove_Duplicates_from_Sorted_List_II.html","tf":0.12307692307692308},"alg/86_Partition_List.html":{"ref":"alg/86_Partition_List.html","tf":0.1368421052631579},"alg/234_Palindrome_Linked_List.html":{"ref":"alg/234_Palindrome_Linked_List.html","tf":0.1411764705882353},"alg/143_Reorder_List.html":{"ref":"alg/143_Reorder_List.html","tf":0.1417910447761194},"alg/147_Insertion_Sort_List.html":{"ref":"alg/147_Insertion_Sort_List.html","tf":0.11904761904761904},"alg/328_Odd_Even_Linked_List.html":{"ref":"alg/328_Odd_Even_Linked_List.html","tf":0.14545454545454545},"alg/148_Sort_List.html":{"ref":"alg/148_Sort_List.html","tf":0.12941176470588237},"alg/21_Merge_Two_Sorted_Lists.html":{"ref":"alg/21_Merge_Two_Sorted_Lists.html","tf":0.03571428571428571},"alg/23_Merge_k_Sorted_Lists.html":{"ref":"alg/23_Merge_k_Sorted_Lists.html","tf":0.034722222222222224},"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.10714285714285714},"alg/817_Linked_List_Components.html":{"ref":"alg/817_Linked_List_Components.html","tf":0.1},"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.08583690987124463},"alg/19_Remove_Nth_Node_From_End_of_List.html":{"ref":"alg/19_Remove_Nth_Node_From_End_of_List.html","tf":0.14150943396226415},"alg/144_Binary_Tree_Preorder_Traversal.html":{"ref":"alg/144_Binary_Tree_Preorder_Traversal.html","tf":0.037383177570093455},"alg/94_Binary_Tree_Inorder_Traversal.html":{"ref":"alg/94_Binary_Tree_Inorder_Traversal.html","tf":0.06140350877192982},"alg/145_Binary_Tree_Postorder_Traversal.html":{"ref":"alg/145_Binary_Tree_Postorder_Traversal.html","tf":0.014705882352941176},"alg/102_Binary_Tree_Level_Order_Traversal.html":{"ref":"alg/102_Binary_Tree_Level_Order_Traversal.html","tf":0.13043478260869565},"alg/226_Invert_Binary_Tree.html":{"ref":"alg/226_Invert_Binary_Tree.html","tf":0.09574468085106383},"alg/617_Merge_Two_Binary_Trees.html":{"ref":"alg/617_Merge_Two_Binary_Trees.html","tf":0.045454545454545456},"alg/872_Leaf-Similar_Trees.html":{"ref":"alg/872_Leaf-Similar_Trees.html","tf":0.038461538461538464},"alg/111_Minimum_Depth_of_Binary_Tree.html":{"ref":"alg/111_Minimum_Depth_of_Binary_Tree.html","tf":0.03508771929824561},"alg/222_Count_Complete_Tree_Nodes.html":{"ref":"alg/222_Count_Complete_Tree_Nodes.html","tf":0.021739130434782608}},"=":{"docs":{"alg/15_3Sum.html":{"ref":"alg/15_3Sum.html","tf":0.03076923076923077},"alg/18_4Sum.html":{"ref":"alg/18_4Sum.html","tf":0.02631578947368421},"alg/69_Sqrtx.html":{"ref":"alg/69_Sqrtx.html","tf":0.04040404040404041},"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.013392857142857142},"alg/169_Majority_Element.html":{"ref":"alg/169_Majority_Element.html","tf":0.017094017094017096},"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.010101010101010102},"alg/704_Binary_Search.html":{"ref":"alg/704_Binary_Search.html","tf":0.01090909090909091},"alg/206_Reverse_Linked_List.html":{"ref":"alg/206_Reverse_Linked_List.html","tf":0.014705882352941176},"alg/24_Swap_Nodes_in_Pairs.html":{"ref":"alg/24_Swap_Nodes_in_Pairs.html","tf":0.011363636363636364},"alg/141_Linked_List_Cycle.html":{"ref":"alg/141_Linked_List_Cycle.html","tf":0.02127659574468085},"alg/142_Linked_List_Cycle_II.html":{"ref":"alg/142_Linked_List_Cycle_II.html","tf":0.017543859649122806},"alg/160_Intersection_of_Two_Linked_Lists.html":{"ref":"alg/160_Intersection_of_Two_Linked_Lists.html","tf":0.07272727272727272},"alg/203_Remove_Linked_List_Elements.html":{"ref":"alg/203_Remove_Linked_List_Elements.html","tf":0.02857142857142857},"alg/83_Remove_Duplicates_from_Sorted_List.html":{"ref":"alg/83_Remove_Duplicates_from_Sorted_List.html","tf":0.05970149253731343},"alg/82_Remove_Duplicates_from_Sorted_List_II.html":{"ref":"alg/82_Remove_Duplicates_from_Sorted_List_II.html","tf":0.03076923076923077},"alg/143_Reorder_List.html":{"ref":"alg/143_Reorder_List.html","tf":0.014925373134328358},"alg/328_Odd_Even_Linked_List.html":{"ref":"alg/328_Odd_Even_Linked_List.html","tf":0.01818181818181818},"alg/148_Sort_List.html":{"ref":"alg/148_Sort_List.html","tf":0.023529411764705882},"alg/21_Merge_Two_Sorted_Lists.html":{"ref":"alg/21_Merge_Two_Sorted_Lists.html","tf":0.03571428571428571},"alg/23_Merge_k_Sorted_Lists.html":{"ref":"alg/23_Merge_k_Sorted_Lists.html","tf":0.034722222222222224},"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.008583690987124463},"alg/19_Remove_Nth_Node_From_End_of_List.html":{"ref":"alg/19_Remove_Nth_Node_From_End_of_List.html","tf":0.009433962264150943},"alg/144_Binary_Tree_Preorder_Traversal.html":{"ref":"alg/144_Binary_Tree_Preorder_Traversal.html","tf":0.037383177570093455},"alg/94_Binary_Tree_Inorder_Traversal.html":{"ref":"alg/94_Binary_Tree_Inorder_Traversal.html","tf":0.03508771929824561},"alg/145_Binary_Tree_Postorder_Traversal.html":{"ref":"alg/145_Binary_Tree_Postorder_Traversal.html","tf":0.058823529411764705},"alg/102_Binary_Tree_Level_Order_Traversal.html":{"ref":"alg/102_Binary_Tree_Level_Order_Traversal.html","tf":0.010869565217391304},"alg/100_Same_Tree.html":{"ref":"alg/100_Same_Tree.html","tf":0.11363636363636363},"alg/101_Symmetric_Tree.html":{"ref":"alg/101_Symmetric_Tree.html","tf":0.1016949152542373},"alg/226_Invert_Binary_Tree.html":{"ref":"alg/226_Invert_Binary_Tree.html","tf":0.02127659574468085},"alg/617_Merge_Two_Binary_Trees.html":{"ref":"alg/617_Merge_Two_Binary_Trees.html","tf":0.06818181818181818},"alg/872_Leaf-Similar_Trees.html":{"ref":"alg/872_Leaf-Similar_Trees.html","tf":0.057692307692307696},"alg/104_Maximum_Depth_of_Binary_Tree.html":{"ref":"alg/104_Maximum_Depth_of_Binary_Tree.html","tf":0.02702702702702703},"alg/111_Minimum_Depth_of_Binary_Tree.html":{"ref":"alg/111_Minimum_Depth_of_Binary_Tree.html","tf":0.08771929824561403},"alg/112_Path_Sum.html":{"ref":"alg/112_Path_Sum.html","tf":0.11428571428571428},"alg/222_Count_Complete_Tree_Nodes.html":{"ref":"alg/222_Count_Complete_Tree_Nodes.html","tf":0.043478260869565216}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"alg/1_2Sum.html":{"ref":"alg/1_2Sum.html","tf":0.03571428571428571},"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714},"alg/169_Majority_Element.html":{"ref":"alg/169_Majority_Element.html","tf":0.008547008547008548}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"alg/817_Linked_List_Components.html":{"ref":"alg/817_Linked_List_Components.html","tf":0.05}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.005050505050505051}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},")":{"docs":{},":":{"docs":{"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.005050505050505051}}}}}}}}}}}}},"c":{"docs":{},"y":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"alg/141_Linked_List_Cycle.html":{"ref":"alg/141_Linked_List_Cycle.html","tf":0.02127659574468085}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{"alg/112_Path_Sum.html":{"ref":"alg/112_Path_Sum.html","tf":0.02857142857142857}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},",":{"docs":{"alg/112_Path_Sum.html":{"ref":"alg/112_Path_Sum.html","tf":0.02857142857142857}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"alg/112_Path_Sum.html":{"ref":"alg/112_Path_Sum.html","tf":0.02857142857142857}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"s":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},"/":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.008928571428571428}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},".":{"docs":{},"w":{"docs":{},"i":{"docs":{},"k":{"docs":{},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},".":{"docs":{},"o":{"docs":{},"r":{"docs":{},"g":{"docs":{},"/":{"docs":{},"w":{"docs":{},"i":{"docs":{},"k":{"docs":{},"i":{"docs":{},"/":{"docs":{},"b":{"docs":{},"o":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"%":{"docs":{},"e":{"2":{"docs":{},"%":{"8":{"0":{"docs":{},"%":{"9":{"3":{"docs":{},"m":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"j":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"_":{"docs":{},"v":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"_":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{"alg/169_Majority_Element.html":{"ref":"alg/169_Majority_Element.html","tf":0.008547008547008548}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"2":{"0":{"1":{"3":{"docs":{},"/":{"1":{"0":{"docs":{},"/":{"docs":{},"m":{"docs":{},"a":{"docs":{},"j":{"docs":{},"o":{"docs":{},"r":{"docs":{"alg/169_Majority_Element.html":{"ref":"alg/169_Majority_Element.html","tf":0.008547008547008548}}}}}}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"alg/206_Reverse_Linked_List.html":{"ref":"alg/206_Reverse_Linked_List.html","tf":0.029411764705882353},"alg/203_Remove_Linked_List_Elements.html":{"ref":"alg/203_Remove_Linked_List_Elements.html","tf":0.02142857142857143},"alg/83_Remove_Duplicates_from_Sorted_List.html":{"ref":"alg/83_Remove_Duplicates_from_Sorted_List.html","tf":0.014925373134328358},"alg/234_Palindrome_Linked_List.html":{"ref":"alg/234_Palindrome_Linked_List.html","tf":0.011764705882352941},"alg/143_Reorder_List.html":{"ref":"alg/143_Reorder_List.html","tf":0.007462686567164179},"alg/148_Sort_List.html":{"ref":"alg/148_Sort_List.html","tf":0.011764705882352941},"alg/21_Merge_Two_Sorted_Lists.html":{"ref":"alg/21_Merge_Two_Sorted_Lists.html","tf":0.017857142857142856},"alg/19_Remove_Nth_Node_From_End_of_List.html":{"ref":"alg/19_Remove_Nth_Node_From_End_of_List.html","tf":0.009433962264150943}},")":{"docs":{"alg/206_Reverse_Linked_List.html":{"ref":"alg/206_Reverse_Linked_List.html","tf":0.014705882352941176},"alg/24_Swap_Nodes_in_Pairs.html":{"ref":"alg/24_Swap_Nodes_in_Pairs.html","tf":0.022727272727272728},"alg/876_Middle_of_the_Linked_List.html":{"ref":"alg/876_Middle_of_the_Linked_List.html","tf":0.02857142857142857},"alg/141_Linked_List_Cycle.html":{"ref":"alg/141_Linked_List_Cycle.html","tf":0.02127659574468085},"alg/142_Linked_List_Cycle_II.html":{"ref":"alg/142_Linked_List_Cycle_II.html","tf":0.017543859649122806},"alg/83_Remove_Duplicates_from_Sorted_List.html":{"ref":"alg/83_Remove_Duplicates_from_Sorted_List.html","tf":0.029850746268656716},"alg/82_Remove_Duplicates_from_Sorted_List_II.html":{"ref":"alg/82_Remove_Duplicates_from_Sorted_List_II.html","tf":0.015384615384615385},"alg/234_Palindrome_Linked_List.html":{"ref":"alg/234_Palindrome_Linked_List.html","tf":0.011764705882352941},"alg/143_Reorder_List.html":{"ref":"alg/143_Reorder_List.html","tf":0.007462686567164179},"alg/147_Insertion_Sort_List.html":{"ref":"alg/147_Insertion_Sort_List.html","tf":0.023809523809523808},"alg/328_Odd_Even_Linked_List.html":{"ref":"alg/328_Odd_Even_Linked_List.html","tf":0.01818181818181818},"alg/148_Sort_List.html":{"ref":"alg/148_Sort_List.html","tf":0.011764705882352941}},":":{"docs":{"alg/206_Reverse_Linked_List.html":{"ref":"alg/206_Reverse_Linked_List.html","tf":0.014705882352941176}}},";":{"docs":{"alg/206_Reverse_Linked_List.html":{"ref":"alg/206_Reverse_Linked_List.html","tf":0.014705882352941176}}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"alg/206_Reverse_Linked_List.html":{"ref":"alg/206_Reverse_Linked_List.html","tf":0.029411764705882353},"alg/24_Swap_Nodes_in_Pairs.html":{"ref":"alg/24_Swap_Nodes_in_Pairs.html","tf":0.011363636363636364},"alg/203_Remove_Linked_List_Elements.html":{"ref":"alg/203_Remove_Linked_List_Elements.html","tf":0.014285714285714285},"alg/83_Remove_Duplicates_from_Sorted_List.html":{"ref":"alg/83_Remove_Duplicates_from_Sorted_List.html","tf":0.05970149253731343},"alg/143_Reorder_List.html":{"ref":"alg/143_Reorder_List.html","tf":0.007462686567164179},"alg/148_Sort_List.html":{"ref":"alg/148_Sort_List.html","tf":0.011764705882352941}},";":{"docs":{"alg/24_Swap_Nodes_in_Pairs.html":{"ref":"alg/24_Swap_Nodes_in_Pairs.html","tf":0.011363636363636364},"alg/203_Remove_Linked_List_Elements.html":{"ref":"alg/203_Remove_Linked_List_Elements.html","tf":0.014285714285714285},"alg/83_Remove_Duplicates_from_Sorted_List.html":{"ref":"alg/83_Remove_Duplicates_from_Sorted_List.html","tf":0.014925373134328358},"alg/234_Palindrome_Linked_List.html":{"ref":"alg/234_Palindrome_Linked_List.html","tf":0.011764705882352941}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},";":{"docs":{"alg/83_Remove_Duplicates_from_Sorted_List.html":{"ref":"alg/83_Remove_Duplicates_from_Sorted_List.html","tf":0.014925373134328358}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"alg/83_Remove_Duplicates_from_Sorted_List.html":{"ref":"alg/83_Remove_Duplicates_from_Sorted_List.html","tf":0.029850746268656716}}}}}}},",":{"docs":{"alg/328_Odd_Even_Linked_List.html":{"ref":"alg/328_Odd_Even_Linked_List.html","tf":0.01818181818181818}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"alg/203_Remove_Linked_List_Elements.html":{"ref":"alg/203_Remove_Linked_List_Elements.html","tf":0.007142857142857143},"alg/83_Remove_Duplicates_from_Sorted_List.html":{"ref":"alg/83_Remove_Duplicates_from_Sorted_List.html","tf":0.014925373134328358}},")":{"docs":{"alg/234_Palindrome_Linked_List.html":{"ref":"alg/234_Palindrome_Linked_List.html","tf":0.011764705882352941}}}}}}},":":{"docs":{"alg/206_Reverse_Linked_List.html":{"ref":"alg/206_Reverse_Linked_List.html","tf":0.029411764705882353},"alg/19_Remove_Nth_Node_From_End_of_List.html":{"ref":"alg/19_Remove_Nth_Node_From_End_of_List.html","tf":0.009433962264150943}}},";":{"docs":{"alg/24_Swap_Nodes_in_Pairs.html":{"ref":"alg/24_Swap_Nodes_in_Pairs.html","tf":0.03409090909090909},"alg/876_Middle_of_the_Linked_List.html":{"ref":"alg/876_Middle_of_the_Linked_List.html","tf":0.02857142857142857},"alg/141_Linked_List_Cycle.html":{"ref":"alg/141_Linked_List_Cycle.html","tf":0.02127659574468085},"alg/142_Linked_List_Cycle_II.html":{"ref":"alg/142_Linked_List_Cycle_II.html","tf":0.017543859649122806},"alg/203_Remove_Linked_List_Elements.html":{"ref":"alg/203_Remove_Linked_List_Elements.html","tf":0.04285714285714286},"alg/83_Remove_Duplicates_from_Sorted_List.html":{"ref":"alg/83_Remove_Duplicates_from_Sorted_List.html","tf":0.04477611940298507},"alg/82_Remove_Duplicates_from_Sorted_List_II.html":{"ref":"alg/82_Remove_Duplicates_from_Sorted_List_II.html","tf":0.03076923076923077},"alg/86_Partition_List.html":{"ref":"alg/86_Partition_List.html","tf":0.010526315789473684},"alg/234_Palindrome_Linked_List.html":{"ref":"alg/234_Palindrome_Linked_List.html","tf":0.011764705882352941},"alg/143_Reorder_List.html":{"ref":"alg/143_Reorder_List.html","tf":0.014925373134328358},"alg/328_Odd_Even_Linked_List.html":{"ref":"alg/328_Odd_Even_Linked_List.html","tf":0.03636363636363636},"alg/148_Sort_List.html":{"ref":"alg/148_Sort_List.html","tf":0.011764705882352941},"alg/19_Remove_Nth_Node_From_End_of_List.html":{"ref":"alg/19_Remove_Nth_Node_From_End_of_List.html","tf":0.02830188679245283}}},",":{"docs":{"alg/876_Middle_of_the_Linked_List.html":{"ref":"alg/876_Middle_of_the_Linked_List.html","tf":0.02857142857142857},"alg/141_Linked_List_Cycle.html":{"ref":"alg/141_Linked_List_Cycle.html","tf":0.02127659574468085},"alg/142_Linked_List_Cycle_II.html":{"ref":"alg/142_Linked_List_Cycle_II.html","tf":0.03508771929824561},"alg/203_Remove_Linked_List_Elements.html":{"ref":"alg/203_Remove_Linked_List_Elements.html","tf":0.02142857142857143},"alg/86_Partition_List.html":{"ref":"alg/86_Partition_List.html","tf":0.021052631578947368},"alg/234_Palindrome_Linked_List.html":{"ref":"alg/234_Palindrome_Linked_List.html","tf":0.011764705882352941},"alg/143_Reorder_List.html":{"ref":"alg/143_Reorder_List.html","tf":0.007462686567164179},"alg/147_Insertion_Sort_List.html":{"ref":"alg/147_Insertion_Sort_List.html","tf":0.023809523809523808},"alg/328_Odd_Even_Linked_List.html":{"ref":"alg/328_Odd_Even_Linked_List.html","tf":0.01818181818181818},"alg/148_Sort_List.html":{"ref":"alg/148_Sort_List.html","tf":0.023529411764705882},"alg/817_Linked_List_Components.html":{"ref":"alg/817_Linked_List_Components.html","tf":0.05},"alg/19_Remove_Nth_Node_From_End_of_List.html":{"ref":"alg/19_Remove_Nth_Node_From_End_of_List.html","tf":0.018867924528301886}}},"a":{"docs":{"alg/160_Intersection_of_Two_Linked_Lists.html":{"ref":"alg/160_Intersection_of_Two_Linked_Lists.html","tf":0.01818181818181818}},",":{"docs":{"alg/160_Intersection_of_Two_Linked_Lists.html":{"ref":"alg/160_Intersection_of_Two_Linked_Lists.html","tf":0.03636363636363636}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},";":{"docs":{"alg/160_Intersection_of_Two_Linked_Lists.html":{"ref":"alg/160_Intersection_of_Two_Linked_Lists.html","tf":0.01818181818181818}}}}}}}},";":{"docs":{"alg/160_Intersection_of_Two_Linked_Lists.html":{"ref":"alg/160_Intersection_of_Two_Linked_Lists.html","tf":0.01818181818181818}}}},"b":{"docs":{"alg/160_Intersection_of_Two_Linked_Lists.html":{"ref":"alg/160_Intersection_of_Two_Linked_Lists.html","tf":0.03636363636363636}},")":{"docs":{"alg/160_Intersection_of_Two_Linked_Lists.html":{"ref":"alg/160_Intersection_of_Two_Linked_Lists.html","tf":0.03636363636363636}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},";":{"docs":{"alg/160_Intersection_of_Two_Linked_Lists.html":{"ref":"alg/160_Intersection_of_Two_Linked_Lists.html","tf":0.01818181818181818}}}}}}}},";":{"docs":{"alg/160_Intersection_of_Two_Linked_Lists.html":{"ref":"alg/160_Intersection_of_Two_Linked_Lists.html","tf":0.01818181818181818}}}}},"p":{"docs":{"alg/23_Merge_k_Sorted_Lists.html":{"ref":"alg/23_Merge_k_Sorted_Lists.html","tf":0.006944444444444444}}}},"r":{"docs":{},"e":{"docs":{},".":{"docs":{"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.004291845493562232}}}}}}},"i":{"docs":{},";":{"docs":{"alg/1_2Sum.html":{"ref":"alg/1_2Sum.html","tf":0.03571428571428571}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.05150214592274678}},")":{"docs":{"alg/1_2Sum.html":{"ref":"alg/1_2Sum.html","tf":0.03571428571428571}},":":{"docs":{"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.008583690987124463}}}},",":{"docs":{"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.004291845493562232}}},":":{"docs":{"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.012875536480686695}}}}}},"t":{"docs":{"alg/1_2Sum.html":{"ref":"alg/1_2Sum.html","tf":0.03571428571428571},"alg/15_3Sum.html":{"ref":"alg/15_3Sum.html","tf":0.03076923076923077},"alg/18_4Sum.html":{"ref":"alg/18_4Sum.html","tf":0.039473684210526314},"alg/69_Sqrtx.html":{"ref":"alg/69_Sqrtx.html","tf":0.020202020202020204},"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.04017857142857143},"alg/169_Majority_Element.html":{"ref":"alg/169_Majority_Element.html","tf":0.03418803418803419},"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.010101010101010102},"alg/215_Kth_Largest_Element_in_an_Array.html":{"ref":"alg/215_Kth_Largest_Element_in_an_Array.html","tf":0.020202020202020204},"alg/704_Binary_Search.html":{"ref":"alg/704_Binary_Search.html","tf":0.05818181818181818},"alg/203_Remove_Linked_List_Elements.html":{"ref":"alg/203_Remove_Linked_List_Elements.html","tf":0.02142857142857143},"alg/86_Partition_List.html":{"ref":"alg/86_Partition_List.html","tf":0.021052631578947368},"alg/23_Merge_k_Sorted_Lists.html":{"ref":"alg/23_Merge_k_Sorted_Lists.html","tf":0.020833333333333332},"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.04220779220779221},"alg/817_Linked_List_Components.html":{"ref":"alg/817_Linked_List_Components.html","tf":0.05},"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.030042918454935622},"alg/19_Remove_Nth_Node_From_End_of_List.html":{"ref":"alg/19_Remove_Nth_Node_From_End_of_List.html","tf":0.03773584905660377},"alg/102_Binary_Tree_Level_Order_Traversal.html":{"ref":"alg/102_Binary_Tree_Level_Order_Traversal.html","tf":0.010869565217391304},"alg/104_Maximum_Depth_of_Binary_Tree.html":{"ref":"alg/104_Maximum_Depth_of_Binary_Tree.html","tf":0.02702702702702703},"alg/111_Minimum_Depth_of_Binary_Tree.html":{"ref":"alg/111_Minimum_Depth_of_Binary_Tree.html","tf":0.05263157894736842},"alg/112_Path_Sum.html":{"ref":"alg/112_Path_Sum.html","tf":0.02857142857142857},"alg/222_Count_Complete_Tree_Nodes.html":{"ref":"alg/222_Count_Complete_Tree_Nodes.html","tf":0.05434782608695652}},"[":{"docs":{},"]":{"docs":{"alg/1_2Sum.html":{"ref":"alg/1_2Sum.html","tf":0.03571428571428571},"alg/817_Linked_List_Components.html":{"ref":"alg/817_Linked_List_Components.html","tf":0.05}}}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"alg/160_Intersection_of_Two_Linked_Lists.html":{"ref":"alg/160_Intersection_of_Two_Linked_Lists.html","tf":2.018181818181818}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},":":{"docs":{"1_linkedlist.html":{"ref":"1_linkedlist.html","tf":0.02564102564102564}}}}}}}}}},"n":{"docs":{"alg/203_Remove_Linked_List_Elements.html":{"ref":"alg/203_Remove_Linked_List_Elements.html","tf":0.007142857142857143}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714}},":":{"docs":{"alg/215_Kth_Largest_Element_in_an_Array.html":{"ref":"alg/215_Kth_Largest_Element_in_an_Array.html","tf":0.010101010101010102}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"alg/147_Insertion_Sort_List.html":{"ref":"alg/147_Insertion_Sort_List.html","tf":2.5238095238095237}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},":":{"docs":{"1_linkedlist.html":{"ref":"1_linkedlist.html","tf":0.02564102564102564}}},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"alg/147_Insertion_Sort_List.html":{"ref":"alg/147_Insertion_Sort_List.html","tf":0.023809523809523808}}}}}}}}}}}}}}}}}},",":{"docs":{"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.004291845493562232}}}}}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.004291845493562232}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"alg/94_Binary_Tree_Inorder_Traversal.html":{"ref":"alg/94_Binary_Tree_Inorder_Traversal.html","tf":2.008771929824561}},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"a":{"docs":{},"l":{"2":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"alg/94_Binary_Tree_Inorder_Traversal.html":{"ref":"alg/94_Binary_Tree_Inorder_Traversal.html","tf":0.008771929824561403}}}}}}}}}}},"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},",":{"docs":{"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.005050505050505051}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"alg/94_Binary_Tree_Inorder_Traversal.html":{"ref":"alg/94_Binary_Tree_Inorder_Traversal.html","tf":0.008771929824561403}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"递":{"docs":{},"归":{"docs":{},"写":{"docs":{},"法":{"docs":{},"，":{"docs":{},"思":{"docs":{},"路":{"docs":{},"就":{"docs":{},"是":{"docs":{},"按":{"docs":{},"照":{"docs":{},"左":{"docs":{},"中":{"docs":{},"右":{"docs":{},"的":{"docs":{},"处":{"docs":{},"理":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"(":{"docs":{},"左":{"docs":{},"边":{"docs":{},"处":{"docs":{},"理":{"docs":{},"完":{"docs":{},"了":{"docs":{},"，":{"docs":{},"将":{"docs":{},"左":{"docs":{},"边":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"放":{"docs":{},"入":{"docs":{},"结":{"docs":{},"果":{"docs":{},"，":{"docs":{},"上":{"docs":{},"述":{"docs":{},"图":{"docs":{},"例":{"docs":{},"中":{"docs":{},"按":{"docs":{},"照":{"1":{"1":{"1":{"1":{"2":{"3":{"1":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"执":{"docs":{},"行":{"docs":{},")":{"docs":{"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.005050505050505051}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.004291845493562232}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},",":{"docs":{"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.004291845493562232}}}}}}},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"2_tree.html":{"ref":"2_tree.html","tf":0.041666666666666664},"alg/226_Invert_Binary_Tree.html":{"ref":"alg/226_Invert_Binary_Tree.html","tf":2.5106382978723403}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"alg/226_Invert_Binary_Tree.html":{"ref":"alg/226_Invert_Binary_Tree.html","tf":0.010638297872340425}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},",":{"docs":{"alg/226_Invert_Binary_Tree.html":{"ref":"alg/226_Invert_Binary_Tree.html","tf":0.010638297872340425}}}}}}},"t":{"docs":{},"m":{"docs":{},"p":{"docs":{},")":{"docs":{},";":{"docs":{"alg/226_Invert_Binary_Tree.html":{"ref":"alg/226_Invert_Binary_Tree.html","tf":0.010638297872340425}}}}}},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"alg/226_Invert_Binary_Tree.html":{"ref":"alg/226_Invert_Binary_Tree.html","tf":0.02127659574468085}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.013392857142857142},"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":2.005050505050505}}}}},"i":{"docs":{"alg/142_Linked_List_Cycle_II.html":{"ref":"alg/142_Linked_List_Cycle_II.html","tf":2.017543859649123},"alg/82_Remove_Duplicates_from_Sorted_List_II.html":{"ref":"alg/82_Remove_Duplicates_from_Sorted_List_II.html","tf":1.6820512820512818}}},"f":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"alg/82_Remove_Duplicates_from_Sorted_List_II.html":{"ref":"alg/82_Remove_Duplicates_from_Sorted_List_II.html","tf":0.015384615384615385}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"alg/104_Maximum_Depth_of_Binary_Tree.html":{"ref":"alg/104_Maximum_Depth_of_Binary_Tree.html","tf":0.02702702702702703},"alg/111_Minimum_Depth_of_Binary_Tree.html":{"ref":"alg/111_Minimum_Depth_of_Binary_Tree.html","tf":0.017543859649122806}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"alg/111_Minimum_Depth_of_Binary_Tree.html":{"ref":"alg/111_Minimum_Depth_of_Binary_Tree.html","tf":0.03508771929824561}}}}}}}},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"alg/234_Palindrome_Linked_List.html":{"ref":"alg/234_Palindrome_Linked_List.html","tf":0.011764705882352941}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"(":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{"alg/100_Same_Tree.html":{"ref":"alg/100_Same_Tree.html","tf":0.022727272727272728}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},",":{"docs":{"alg/100_Same_Tree.html":{"ref":"alg/100_Same_Tree.html","tf":0.022727272727272728}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"alg/100_Same_Tree.html":{"ref":"alg/100_Same_Tree.html","tf":0.022727272727272728}}}}}}}}}}}}}}}}},"y":{"docs":{},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"alg/101_Symmetric_Tree.html":{"ref":"alg/101_Symmetric_Tree.html","tf":0.01694915254237288}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.003246753246753247}}}}}}}},"m":{"docs":{"alg/69_Sqrtx.html":{"ref":"alg/69_Sqrtx.html","tf":0.0707070707070707},"alg/704_Binary_Search.html":{"ref":"alg/704_Binary_Search.html","tf":0.04},"alg/23_Merge_k_Sorted_Lists.html":{"ref":"alg/23_Merge_k_Sorted_Lists.html","tf":0.006944444444444444}},"a":{"docs":{},"p":{"docs":{"alg/1_2Sum.html":{"ref":"alg/1_2Sum.html","tf":0.07142857142857142},"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.008928571428571428},"alg/169_Majority_Element.html":{"ref":"alg/169_Majority_Element.html","tf":0.017094017094017096},"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.006493506493506494}},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},",":{"docs":{"alg/1_2Sum.html":{"ref":"alg/1_2Sum.html","tf":0.03571428571428571}}}}}}}}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"j":{"docs":{},")":{"docs":{"alg/1_2Sum.html":{"ref":"alg/1_2Sum.html","tf":0.03571428571428571}}}},"n":{"docs":{},")":{"docs":{"alg/169_Majority_Element.html":{"ref":"alg/169_Majority_Element.html","tf":0.008547008547008548}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},",":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.003246753246753247}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},",":{"docs":{"alg/169_Majority_Element.html":{"ref":"alg/169_Majority_Element.html","tf":0.017094017094017096}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},",":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.003246753246753247}}}}}}}}}}},";":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.003246753246753247}}}},"x":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":2.5044642857142856}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"2":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},",":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714}}}}}}}}},"docs":{},"(":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},",":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"alg/104_Maximum_Depth_of_Binary_Tree.html":{"ref":"alg/104_Maximum_Depth_of_Binary_Tree.html","tf":0.02702702702702703}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"alg/104_Maximum_Depth_of_Binary_Tree.html":{"ref":"alg/104_Maximum_Depth_of_Binary_Tree.html","tf":0.02702702702702703}}}}}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"u":{"docs":{},"m":{"docs":{"alg/104_Maximum_Depth_of_Binary_Tree.html":{"ref":"alg/104_Maximum_Depth_of_Binary_Tree.html","tf":2.027027027027027}}}}}}},"j":{"docs":{},"o":{"docs":{},"r":{"docs":{"alg/169_Majority_Element.html":{"ref":"alg/169_Majority_Element.html","tf":3.367521367521367}},";":{"docs":{"alg/169_Majority_Element.html":{"ref":"alg/169_Majority_Element.html","tf":0.008547008547008548}}},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"alg/169_Majority_Element.html":{"ref":"alg/169_Majority_Element.html","tf":0.008547008547008548}}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"3":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"alg/169_Majority_Element.html":{"ref":"alg/169_Majority_Element.html","tf":0.008547008547008548}}}}}}}}},"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"alg/169_Majority_Element.html":{"ref":"alg/169_Majority_Element.html","tf":0.017094017094017096}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{},",":{"docs":{"alg/104_Maximum_Depth_of_Binary_Tree.html":{"ref":"alg/104_Maximum_Depth_of_Binary_Tree.html","tf":0.02702702702702703}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{"alg/111_Minimum_Depth_of_Binary_Tree.html":{"ref":"alg/111_Minimum_Depth_of_Binary_Tree.html","tf":0.017543859649122806}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"w":{"docs":{},"(":{"2":{"docs":{},",":{"docs":{"alg/222_Count_Complete_Tree_Nodes.html":{"ref":"alg/222_Count_Complete_Tree_Nodes.html","tf":0.021739130434782608}}}},"docs":{}}}}}}}}},")":{"docs":{"alg/69_Sqrtx.html":{"ref":"alg/69_Sqrtx.html","tf":0.04040404040404041}},";":{"docs":{"alg/23_Merge_k_Sorted_Lists.html":{"ref":"alg/23_Merge_k_Sorted_Lists.html","tf":0.006944444444444444}}}},";":{"docs":{"alg/69_Sqrtx.html":{"ref":"alg/69_Sqrtx.html","tf":0.050505050505050504},"alg/704_Binary_Search.html":{"ref":"alg/704_Binary_Search.html","tf":0.007272727272727273}}},"y":{"docs":{},"s":{"docs":{},"q":{"docs":{},"r":{"docs":{},"t":{"3":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"alg/69_Sqrtx.html":{"ref":"alg/69_Sqrtx.html","tf":0.010101010101010102}}}}}}},"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"alg/69_Sqrtx.html":{"ref":"alg/69_Sqrtx.html","tf":0.010101010101010102}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},")":{"docs":{},":":{"docs":{"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.004291845493562232}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{"alg/169_Majority_Element.html":{"ref":"alg/169_Majority_Element.html","tf":0.008547008547008548}}}}},",":{"docs":{"alg/704_Binary_Search.html":{"ref":"alg/704_Binary_Search.html","tf":0.0036363636363636364}}},"e":{"docs":{},"r":{"docs":{},"g":{"docs":{"alg/143_Reorder_List.html":{"ref":"alg/143_Reorder_List.html","tf":0.007462686567164179},"alg/21_Merge_Two_Sorted_Lists.html":{"ref":"alg/21_Merge_Two_Sorted_Lists.html","tf":2.017857142857143},"alg/23_Merge_k_Sorted_Lists.html":{"ref":"alg/23_Merge_k_Sorted_Lists.html","tf":2.0069444444444446},"alg/617_Merge_Two_Binary_Trees.html":{"ref":"alg/617_Merge_Two_Binary_Trees.html","tf":2.022727272727273}},"e":{"2":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"alg/23_Merge_k_Sorted_Lists.html":{"ref":"alg/23_Merge_k_Sorted_Lists.html","tf":0.006944444444444444}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{},":":{"docs":{"1_linkedlist.html":{"ref":"1_linkedlist.html","tf":0.02564102564102564},"2_tree.html":{"ref":"2_tree.html","tf":0.041666666666666664}}},"(":{"docs":{},"l":{"1":{"docs":{},",":{"docs":{"alg/23_Merge_k_Sorted_Lists.html":{"ref":"alg/23_Merge_k_Sorted_Lists.html","tf":0.006944444444444444}}}},"docs":{},",":{"docs":{"alg/148_Sort_List.html":{"ref":"alg/148_Sort_List.html","tf":0.011764705882352941}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"alg/148_Sort_List.html":{"ref":"alg/148_Sort_List.html","tf":0.011764705882352941},"alg/23_Merge_k_Sorted_Lists.html":{"ref":"alg/23_Merge_k_Sorted_Lists.html","tf":0.006944444444444444}}}}}}}}}},"t":{"docs":{},"w":{"docs":{},"o":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"alg/21_Merge_Two_Sorted_Lists.html":{"ref":"alg/21_Merge_Two_Sorted_Lists.html","tf":0.03571428571428571}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"t":{"1":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{"alg/617_Merge_Two_Binary_Trees.html":{"ref":"alg/617_Merge_Two_Binary_Trees.html","tf":0.022727272727272728}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},",":{"docs":{"alg/617_Merge_Two_Binary_Trees.html":{"ref":"alg/617_Merge_Two_Binary_Trees.html","tf":0.022727272727272728}}}}}}}}}},"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"alg/617_Merge_Two_Binary_Trees.html":{"ref":"alg/617_Merge_Two_Binary_Trees.html","tf":0.022727272727272728}}}}}}}}}}}}}}},"k":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"2":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"[":{"docs":{},"]":{"docs":{"alg/23_Merge_k_Sorted_Lists.html":{"ref":"alg/23_Merge_k_Sorted_Lists.html","tf":0.006944444444444444}}}}}}}}}}}}}},"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"[":{"docs":{},"]":{"docs":{"alg/23_Merge_k_Sorted_Lists.html":{"ref":"alg/23_Merge_k_Sorted_Lists.html","tf":0.013888888888888888}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"l":{"docs":{"alg/876_Middle_of_the_Linked_List.html":{"ref":"alg/876_Middle_of_the_Linked_List.html","tf":2.5285714285714285}},"e":{"docs":{},",":{"docs":{"1_linkedlist.html":{"ref":"1_linkedlist.html","tf":0.02564102564102564}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"alg/876_Middle_of_the_Linked_List.html":{"ref":"alg/876_Middle_of_the_Linked_List.html","tf":0.02857142857142857}}}}}}}}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"alg/111_Minimum_Depth_of_Binary_Tree.html":{"ref":"alg/111_Minimum_Depth_of_Binary_Tree.html","tf":0.017543859649122806}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"alg/111_Minimum_Depth_of_Binary_Tree.html":{"ref":"alg/111_Minimum_Depth_of_Binary_Tree.html","tf":0.017543859649122806}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"alg/111_Minimum_Depth_of_Binary_Tree.html":{"ref":"alg/111_Minimum_Depth_of_Binary_Tree.html","tf":0.017543859649122806}}}}}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"u":{"docs":{},"m":{"docs":{"alg/111_Minimum_Depth_of_Binary_Tree.html":{"ref":"alg/111_Minimum_Depth_of_Binary_Tree.html","tf":2.017543859649123}}}}}}}}},"n":{"docs":{"alg/169_Majority_Element.html":{"ref":"alg/169_Majority_Element.html","tf":0.008547008547008548},"alg/24_Swap_Nodes_in_Pairs.html":{"ref":"alg/24_Swap_Nodes_in_Pairs.html","tf":0.011363636363636364},"alg/222_Count_Complete_Tree_Nodes.html":{"ref":"alg/222_Count_Complete_Tree_Nodes.html","tf":0.010869565217391304}},"e":{"docs":{},"w":{"docs":{"alg/1_2Sum.html":{"ref":"alg/1_2Sum.html","tf":0.03571428571428571},"alg/15_3Sum.html":{"ref":"alg/15_3Sum.html","tf":0.015384615384615385},"alg/18_4Sum.html":{"ref":"alg/18_4Sum.html","tf":0.013157894736842105},"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714},"alg/169_Majority_Element.html":{"ref":"alg/169_Majority_Element.html","tf":0.008547008547008548},"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.005050505050505051},"alg/215_Kth_Largest_Element_in_an_Array.html":{"ref":"alg/215_Kth_Largest_Element_in_an_Array.html","tf":0.020202020202020204},"alg/24_Swap_Nodes_in_Pairs.html":{"ref":"alg/24_Swap_Nodes_in_Pairs.html","tf":0.011363636363636364},"alg/203_Remove_Linked_List_Elements.html":{"ref":"alg/203_Remove_Linked_List_Elements.html","tf":0.007142857142857143},"alg/82_Remove_Duplicates_from_Sorted_List_II.html":{"ref":"alg/82_Remove_Duplicates_from_Sorted_List_II.html","tf":0.015384615384615385},"alg/86_Partition_List.html":{"ref":"alg/86_Partition_List.html","tf":0.042105263157894736},"alg/147_Insertion_Sort_List.html":{"ref":"alg/147_Insertion_Sort_List.html","tf":0.023809523809523808},"alg/148_Sort_List.html":{"ref":"alg/148_Sort_List.html","tf":0.011764705882352941},"alg/21_Merge_Two_Sorted_Lists.html":{"ref":"alg/21_Merge_Two_Sorted_Lists.html","tf":0.017857142857142856},"alg/23_Merge_k_Sorted_Lists.html":{"ref":"alg/23_Merge_k_Sorted_Lists.html","tf":0.020833333333333332},"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.003246753246753247},"alg/817_Linked_List_Components.html":{"ref":"alg/817_Linked_List_Components.html","tf":0.05},"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.004291845493562232},"alg/19_Remove_Nth_Node_From_End_of_List.html":{"ref":"alg/19_Remove_Nth_Node_From_End_of_List.html","tf":0.009433962264150943},"alg/144_Binary_Tree_Preorder_Traversal.html":{"ref":"alg/144_Binary_Tree_Preorder_Traversal.html","tf":0.028037383177570093},"alg/94_Binary_Tree_Inorder_Traversal.html":{"ref":"alg/94_Binary_Tree_Inorder_Traversal.html","tf":0.02631578947368421},"alg/145_Binary_Tree_Postorder_Traversal.html":{"ref":"alg/145_Binary_Tree_Postorder_Traversal.html","tf":0.014705882352941176},"alg/102_Binary_Tree_Level_Order_Traversal.html":{"ref":"alg/102_Binary_Tree_Level_Order_Traversal.html","tf":0.03260869565217391},"alg/226_Invert_Binary_Tree.html":{"ref":"alg/226_Invert_Binary_Tree.html","tf":0.010638297872340425},"alg/872_Leaf-Similar_Trees.html":{"ref":"alg/872_Leaf-Similar_Trees.html","tf":0.038461538461538464}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"alg/23_Merge_k_Sorted_Lists.html":{"ref":"alg/23_Merge_k_Sorted_Lists.html","tf":0.006944444444444444}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"0":{"docs":{},",":{"docs":{"alg/23_Merge_k_Sorted_Lists.html":{"ref":"alg/23_Merge_k_Sorted_Lists.html","tf":0.006944444444444444}}}},"docs":{}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"alg/23_Merge_k_Sorted_Lists.html":{"ref":"alg/23_Merge_k_Sorted_Lists.html","tf":0.006944444444444444}}}}},"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"alg/23_Merge_k_Sorted_Lists.html":{"ref":"alg/23_Merge_k_Sorted_Lists.html","tf":0.006944444444444444}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"alg/23_Merge_k_Sorted_Lists.html":{"ref":"alg/23_Merge_k_Sorted_Lists.html","tf":0.013888888888888888}}}}}}}}}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.006493506493506494}}}}}}},"x":{"docs":{},"t":{"docs":{"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.020202020202020204},"alg/147_Insertion_Sort_List.html":{"ref":"alg/147_Insertion_Sort_List.html","tf":0.023809523809523808}},"(":{"docs":{},")":{"docs":{"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.005050505050505051}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},")":{"docs":{},":":{"docs":{"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.005050505050505051}}}}}}}}},"_":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.010101010101010102},"alg/206_Reverse_Linked_List.html":{"ref":"alg/206_Reverse_Linked_List.html","tf":0.04411764705882353},"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.006493506493506494}},"e":{"docs":{},".":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.005050505050505051}}}}}}},"v":{"docs":{"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.005050505050505051}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.003246753246753247}}}}}}},")":{"docs":{},";":{"docs":{"alg/206_Reverse_Linked_List.html":{"ref":"alg/206_Reverse_Linked_List.html","tf":0.014705882352941176}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.005050505050505051}},"e":{"docs":{},".":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},";":{"docs":{"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.005050505050505051}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},";":{"docs":{"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.005050505050505051}}}}}}}}}}}}}},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{"alg/24_Swap_Nodes_in_Pairs.html":{"ref":"alg/24_Swap_Nodes_in_Pairs.html","tf":0.011363636363636364},"alg/876_Middle_of_the_Linked_List.html":{"ref":"alg/876_Middle_of_the_Linked_List.html","tf":0.02857142857142857},"alg/141_Linked_List_Cycle.html":{"ref":"alg/141_Linked_List_Cycle.html","tf":0.02127659574468085},"alg/142_Linked_List_Cycle_II.html":{"ref":"alg/142_Linked_List_Cycle_II.html","tf":0.017543859649122806},"alg/160_Intersection_of_Two_Linked_Lists.html":{"ref":"alg/160_Intersection_of_Two_Linked_Lists.html","tf":0.01818181818181818},"alg/203_Remove_Linked_List_Elements.html":{"ref":"alg/203_Remove_Linked_List_Elements.html","tf":0.02142857142857143},"alg/83_Remove_Duplicates_from_Sorted_List.html":{"ref":"alg/83_Remove_Duplicates_from_Sorted_List.html","tf":0.029850746268656716},"alg/82_Remove_Duplicates_from_Sorted_List_II.html":{"ref":"alg/82_Remove_Duplicates_from_Sorted_List_II.html","tf":0.015384615384615385},"alg/234_Palindrome_Linked_List.html":{"ref":"alg/234_Palindrome_Linked_List.html","tf":0.011764705882352941},"alg/143_Reorder_List.html":{"ref":"alg/143_Reorder_List.html","tf":0.03731343283582089},"alg/147_Insertion_Sort_List.html":{"ref":"alg/147_Insertion_Sort_List.html","tf":0.023809523809523808},"alg/328_Odd_Even_Linked_List.html":{"ref":"alg/328_Odd_Even_Linked_List.html","tf":0.01818181818181818},"alg/148_Sort_List.html":{"ref":"alg/148_Sort_List.html","tf":0.03529411764705882},"alg/21_Merge_Two_Sorted_Lists.html":{"ref":"alg/21_Merge_Two_Sorted_Lists.html","tf":0.03571428571428571},"alg/23_Merge_k_Sorted_Lists.html":{"ref":"alg/23_Merge_k_Sorted_Lists.html","tf":0.006944444444444444},"alg/94_Binary_Tree_Inorder_Traversal.html":{"ref":"alg/94_Binary_Tree_Inorder_Traversal.html","tf":0.008771929824561403},"alg/100_Same_Tree.html":{"ref":"alg/100_Same_Tree.html","tf":0.045454545454545456},"alg/101_Symmetric_Tree.html":{"ref":"alg/101_Symmetric_Tree.html","tf":0.03389830508474576},"alg/617_Merge_Two_Binary_Trees.html":{"ref":"alg/617_Merge_Two_Binary_Trees.html","tf":0.022727272727272728},"alg/872_Leaf-Similar_Trees.html":{"ref":"alg/872_Leaf-Similar_Trees.html","tf":0.019230769230769232},"alg/104_Maximum_Depth_of_Binary_Tree.html":{"ref":"alg/104_Maximum_Depth_of_Binary_Tree.html","tf":0.02702702702702703},"alg/112_Path_Sum.html":{"ref":"alg/112_Path_Sum.html","tf":0.02857142857142857}},";":{"docs":{"alg/1_2Sum.html":{"ref":"alg/1_2Sum.html","tf":0.03571428571428571},"alg/142_Linked_List_Cycle_II.html":{"ref":"alg/142_Linked_List_Cycle_II.html","tf":0.017543859649122806},"alg/160_Intersection_of_Two_Linked_Lists.html":{"ref":"alg/160_Intersection_of_Two_Linked_Lists.html","tf":0.01818181818181818},"alg/203_Remove_Linked_List_Elements.html":{"ref":"alg/203_Remove_Linked_List_Elements.html","tf":0.014285714285714285},"alg/234_Palindrome_Linked_List.html":{"ref":"alg/234_Palindrome_Linked_List.html","tf":0.011764705882352941},"alg/143_Reorder_List.html":{"ref":"alg/143_Reorder_List.html","tf":0.007462686567164179},"alg/147_Insertion_Sort_List.html":{"ref":"alg/147_Insertion_Sort_List.html","tf":0.023809523809523808},"alg/148_Sort_List.html":{"ref":"alg/148_Sort_List.html","tf":0.023529411764705882},"alg/23_Merge_k_Sorted_Lists.html":{"ref":"alg/23_Merge_k_Sorted_Lists.html","tf":0.020833333333333332},"alg/226_Invert_Binary_Tree.html":{"ref":"alg/226_Invert_Binary_Tree.html","tf":0.02127659574468085}},"。":{"docs":{},"比":{"docs":{},"如":{"docs":{},"拿":{"docs":{},"例":{"docs":{},"题":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"alg/86_Partition_List.html":{"ref":"alg/86_Partition_List.html","tf":0.010526315789473684}}}}}}}}}}}}},")":{"docs":{"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.025252525252525252},"alg/206_Reverse_Linked_List.html":{"ref":"alg/206_Reverse_Linked_List.html","tf":0.014705882352941176},"alg/24_Swap_Nodes_in_Pairs.html":{"ref":"alg/24_Swap_Nodes_in_Pairs.html","tf":0.03409090909090909},"alg/876_Middle_of_the_Linked_List.html":{"ref":"alg/876_Middle_of_the_Linked_List.html","tf":0.02857142857142857},"alg/141_Linked_List_Cycle.html":{"ref":"alg/141_Linked_List_Cycle.html","tf":0.02127659574468085},"alg/142_Linked_List_Cycle_II.html":{"ref":"alg/142_Linked_List_Cycle_II.html","tf":0.017543859649122806},"alg/160_Intersection_of_Two_Linked_Lists.html":{"ref":"alg/160_Intersection_of_Two_Linked_Lists.html","tf":0.05454545454545454},"alg/203_Remove_Linked_List_Elements.html":{"ref":"alg/203_Remove_Linked_List_Elements.html","tf":0.02142857142857143},"alg/83_Remove_Duplicates_from_Sorted_List.html":{"ref":"alg/83_Remove_Duplicates_from_Sorted_List.html","tf":0.029850746268656716},"alg/82_Remove_Duplicates_from_Sorted_List_II.html":{"ref":"alg/82_Remove_Duplicates_from_Sorted_List_II.html","tf":0.015384615384615385},"alg/86_Partition_List.html":{"ref":"alg/86_Partition_List.html","tf":0.021052631578947368},"alg/234_Palindrome_Linked_List.html":{"ref":"alg/234_Palindrome_Linked_List.html","tf":0.03529411764705882},"alg/143_Reorder_List.html":{"ref":"alg/143_Reorder_List.html","tf":0.029850746268656716},"alg/147_Insertion_Sort_List.html":{"ref":"alg/147_Insertion_Sort_List.html","tf":0.023809523809523808},"alg/328_Odd_Even_Linked_List.html":{"ref":"alg/328_Odd_Even_Linked_List.html","tf":0.03636363636363636},"alg/148_Sort_List.html":{"ref":"alg/148_Sort_List.html","tf":0.03529411764705882},"alg/21_Merge_Two_Sorted_Lists.html":{"ref":"alg/21_Merge_Two_Sorted_Lists.html","tf":0.05357142857142857},"alg/23_Merge_k_Sorted_Lists.html":{"ref":"alg/23_Merge_k_Sorted_Lists.html","tf":0.013888888888888888},"alg/19_Remove_Nth_Node_From_End_of_List.html":{"ref":"alg/19_Remove_Nth_Node_From_End_of_List.html","tf":0.009433962264150943},"alg/144_Binary_Tree_Preorder_Traversal.html":{"ref":"alg/144_Binary_Tree_Preorder_Traversal.html","tf":0.06542056074766354},"alg/94_Binary_Tree_Inorder_Traversal.html":{"ref":"alg/94_Binary_Tree_Inorder_Traversal.html","tf":0.043859649122807015},"alg/145_Binary_Tree_Postorder_Traversal.html":{"ref":"alg/145_Binary_Tree_Postorder_Traversal.html","tf":0.058823529411764705},"alg/102_Binary_Tree_Level_Order_Traversal.html":{"ref":"alg/102_Binary_Tree_Level_Order_Traversal.html","tf":0.010869565217391304},"alg/100_Same_Tree.html":{"ref":"alg/100_Same_Tree.html","tf":0.045454545454545456},"alg/101_Symmetric_Tree.html":{"ref":"alg/101_Symmetric_Tree.html","tf":0.05084745762711865},"alg/226_Invert_Binary_Tree.html":{"ref":"alg/226_Invert_Binary_Tree.html","tf":0.0425531914893617},"alg/617_Merge_Two_Binary_Trees.html":{"ref":"alg/617_Merge_Two_Binary_Trees.html","tf":0.045454545454545456},"alg/872_Leaf-Similar_Trees.html":{"ref":"alg/872_Leaf-Similar_Trees.html","tf":0.038461538461538464},"alg/104_Maximum_Depth_of_Binary_Tree.html":{"ref":"alg/104_Maximum_Depth_of_Binary_Tree.html","tf":0.02702702702702703},"alg/111_Minimum_Depth_of_Binary_Tree.html":{"ref":"alg/111_Minimum_Depth_of_Binary_Tree.html","tf":0.017543859649122806},"alg/112_Path_Sum.html":{"ref":"alg/112_Path_Sum.html","tf":0.05714285714285714},"alg/222_Count_Complete_Tree_Nodes.html":{"ref":"alg/222_Count_Complete_Tree_Nodes.html","tf":0.03260869565217391}}},",":{"docs":{"alg/143_Reorder_List.html":{"ref":"alg/143_Reorder_List.html","tf":0.007462686567164179}}}}},"m":{"docs":{"alg/215_Kth_Largest_Element_in_an_Array.html":{"ref":"alg/215_Kth_Largest_Element_in_an_Array.html","tf":0.010101010101010102}},"s":{"docs":{},",":{"docs":{"alg/1_2Sum.html":{"ref":"alg/1_2Sum.html","tf":0.03571428571428571},"alg/18_4Sum.html":{"ref":"alg/18_4Sum.html","tf":0.013157894736842105},"alg/215_Kth_Largest_Element_in_an_Array.html":{"ref":"alg/215_Kth_Largest_Element_in_an_Array.html","tf":0.010101010101010102},"alg/704_Binary_Search.html":{"ref":"alg/704_Binary_Search.html","tf":0.014545454545454545}}},"[":{"docs":{},"i":{"docs":{"alg/15_3Sum.html":{"ref":"alg/15_3Sum.html","tf":0.03076923076923077},"alg/18_4Sum.html":{"ref":"alg/18_4Sum.html","tf":0.013157894736842105}},"]":{"docs":{"alg/15_3Sum.html":{"ref":"alg/15_3Sum.html","tf":0.03076923076923077},"alg/18_4Sum.html":{"ref":"alg/18_4Sum.html","tf":0.02631578947368421}},";":{"docs":{"alg/1_2Sum.html":{"ref":"alg/1_2Sum.html","tf":0.03571428571428571},"alg/15_3Sum.html":{"ref":"alg/15_3Sum.html","tf":0.015384615384615385}}}}},"j":{"docs":{"alg/18_4Sum.html":{"ref":"alg/18_4Sum.html","tf":0.013157894736842105}},"]":{"docs":{"alg/18_4Sum.html":{"ref":"alg/18_4Sum.html","tf":0.013157894736842105}},";":{"docs":{"alg/18_4Sum.html":{"ref":"alg/18_4Sum.html","tf":0.013157894736842105}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"alg/169_Majority_Element.html":{"ref":"alg/169_Majority_Element.html","tf":0.008547008547008548}}}}}}}}}}}}},"l":{"docs":{},"]":{"docs":{"alg/704_Binary_Search.html":{"ref":"alg/704_Binary_Search.html","tf":0.0036363636363636364}}}}},")":{"docs":{"alg/15_3Sum.html":{"ref":"alg/15_3Sum.html","tf":0.015384615384615385},"alg/169_Majority_Element.html":{"ref":"alg/169_Majority_Element.html","tf":0.042735042735042736},"alg/215_Kth_Largest_Element_in_an_Array.html":{"ref":"alg/215_Kth_Largest_Element_in_an_Array.html","tf":0.010101010101010102}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"alg/15_3Sum.html":{"ref":"alg/15_3Sum.html","tf":0.015384615384615385},"alg/18_4Sum.html":{"ref":"alg/18_4Sum.html","tf":0.013157894736842105},"alg/169_Majority_Element.html":{"ref":"alg/169_Majority_Element.html","tf":0.008547008547008548},"alg/704_Binary_Search.html":{"ref":"alg/704_Binary_Search.html","tf":0.0036363636363636364}},";":{"docs":{"alg/704_Binary_Search.html":{"ref":"alg/704_Binary_Search.html","tf":0.0036363636363636364}}}}}}}}}}},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.020202020202020204}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"alg/817_Linked_List_Components.html":{"ref":"alg/817_Linked_List_Components.html","tf":0.05}}}}}}}}}}}}}}}}}}}}}},"/":{"2":{"docs":{},"次":{"docs":{},"，":{"docs":{},"用":{"docs":{},"字":{"docs":{},"典":{"docs":{},"记":{"docs":{},"录":{"docs":{},"下":{"docs":{},"各":{"docs":{},"个":{"docs":{},"斜":{"docs":{},"率":{"docs":{},"（":{"docs":{},"或":{"docs":{},"者":{"docs":{},"点":{"docs":{},"）":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{},"。":{"docs":{},"最":{"docs":{},"后":{"docs":{},"返":{"docs":{},"回":{"docs":{},"结":{"docs":{},"果":{"docs":{},"为":{"docs":{},"一":{"docs":{},"次":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"中":{"docs":{},"最":{"docs":{},"多":{"docs":{},"的":{"docs":{},"点":{"docs":{},"+":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"点":{"docs":{},"+":{"docs":{},"本":{"docs":{},"身":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714}}}},"n":{"docs":{},"e":{"docs":{"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.005050505050505051},"alg/206_Reverse_Linked_List.html":{"ref":"alg/206_Reverse_Linked_List.html","tf":0.014705882352941176},"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.006493506493506494},"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.008583690987124463}},":":{"docs":{"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.004291845493562232}}}}},"d":{"docs":{},"e":{"docs":{"alg/24_Swap_Nodes_in_Pairs.html":{"ref":"alg/24_Swap_Nodes_in_Pairs.html","tf":2.5113636363636362},"alg/237_Delete_Node_in_a_Linked_List.html":{"ref":"alg/237_Delete_Node_in_a_Linked_List.html","tf":2.0555555555555554},"alg/203_Remove_Linked_List_Elements.html":{"ref":"alg/203_Remove_Linked_List_Elements.html","tf":0.02142857142857143},"alg/83_Remove_Duplicates_from_Sorted_List.html":{"ref":"alg/83_Remove_Duplicates_from_Sorted_List.html","tf":0.014925373134328358},"alg/86_Partition_List.html":{"ref":"alg/86_Partition_List.html","tf":0.010526315789473684},"alg/234_Palindrome_Linked_List.html":{"ref":"alg/234_Palindrome_Linked_List.html","tf":0.023529411764705882},"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.00974025974025974},"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.055793991416309016},"alg/19_Remove_Nth_Node_From_End_of_List.html":{"ref":"alg/19_Remove_Nth_Node_From_End_of_List.html","tf":1.6761006289308176},"alg/144_Binary_Tree_Preorder_Traversal.html":{"ref":"alg/144_Binary_Tree_Preorder_Traversal.html","tf":0.009345794392523364},"alg/94_Binary_Tree_Inorder_Traversal.html":{"ref":"alg/94_Binary_Tree_Inorder_Traversal.html","tf":0.03508771929824561},"alg/102_Binary_Tree_Level_Order_Traversal.html":{"ref":"alg/102_Binary_Tree_Level_Order_Traversal.html","tf":0.010869565217391304},"alg/226_Invert_Binary_Tree.html":{"ref":"alg/226_Invert_Binary_Tree.html","tf":0.010638297872340425},"alg/222_Count_Complete_Tree_Nodes.html":{"ref":"alg/222_Count_Complete_Tree_Nodes.html","tf":2.010869565217391}},"a":{"docs":{"alg/160_Intersection_of_Two_Linked_Lists.html":{"ref":"alg/160_Intersection_of_Two_Linked_Lists.html","tf":0.03636363636363636}}},"b":{"docs":{"alg/160_Intersection_of_Two_Linked_Lists.html":{"ref":"alg/160_Intersection_of_Two_Linked_Lists.html","tf":0.03636363636363636}}},")":{"docs":{"alg/237_Delete_Node_in_a_Linked_List.html":{"ref":"alg/237_Delete_Node_in_a_Linked_List.html","tf":0.05555555555555555}},":":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.006493506493506494}}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"alg/237_Delete_Node_in_a_Linked_List.html":{"ref":"alg/237_Delete_Node_in_a_Linked_List.html","tf":0.05555555555555555},"alg/203_Remove_Linked_List_Elements.html":{"ref":"alg/203_Remove_Linked_List_Elements.html","tf":0.014285714285714285},"alg/234_Palindrome_Linked_List.html":{"ref":"alg/234_Palindrome_Linked_List.html","tf":0.011764705882352941},"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.006493506493506494},"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.008583690987124463}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},";":{"docs":{"alg/237_Delete_Node_in_a_Linked_List.html":{"ref":"alg/237_Delete_Node_in_a_Linked_List.html","tf":0.05555555555555555},"alg/203_Remove_Linked_List_Elements.html":{"ref":"alg/203_Remove_Linked_List_Elements.html","tf":0.007142857142857143}}}}}}},"v":{"docs":{"alg/203_Remove_Linked_List_Elements.html":{"ref":"alg/203_Remove_Linked_List_Elements.html","tf":0.007142857142857143}},"a":{"docs":{},"l":{"docs":{},";":{"docs":{"alg/237_Delete_Node_in_a_Linked_List.html":{"ref":"alg/237_Delete_Node_in_a_Linked_List.html","tf":0.05555555555555555}}}}}}},";":{"docs":{"alg/203_Remove_Linked_List_Elements.html":{"ref":"alg/203_Remove_Linked_List_Elements.html","tf":0.007142857142857143},"alg/234_Palindrome_Linked_List.html":{"ref":"alg/234_Palindrome_Linked_List.html","tf":0.011764705882352941}}}}}}},"v":{"docs":{"alg/237_Delete_Node_in_a_Linked_List.html":{"ref":"alg/237_Delete_Node_in_a_Linked_List.html","tf":0.05555555555555555}},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.003246753246753247}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.006493506493506494}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"alg/226_Invert_Binary_Tree.html":{"ref":"alg/226_Invert_Binary_Tree.html","tf":0.010638297872340425}},";":{"docs":{"alg/94_Binary_Tree_Inorder_Traversal.html":{"ref":"alg/94_Binary_Tree_Inorder_Traversal.html","tf":0.008771929824561403},"alg/226_Invert_Binary_Tree.html":{"ref":"alg/226_Invert_Binary_Tree.html","tf":0.010638297872340425}}},":":{"docs":{"alg/102_Binary_Tree_Level_Order_Traversal.html":{"ref":"alg/102_Binary_Tree_Level_Order_Traversal.html","tf":0.010869565217391304}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"alg/226_Invert_Binary_Tree.html":{"ref":"alg/226_Invert_Binary_Tree.html","tf":0.010638297872340425}},";":{"docs":{"alg/94_Binary_Tree_Inorder_Traversal.html":{"ref":"alg/94_Binary_Tree_Inorder_Traversal.html","tf":0.008771929824561403},"alg/226_Invert_Binary_Tree.html":{"ref":"alg/226_Invert_Binary_Tree.html","tf":0.010638297872340425}}},":":{"docs":{"alg/102_Binary_Tree_Level_Order_Traversal.html":{"ref":"alg/102_Binary_Tree_Level_Order_Traversal.html","tf":0.010869565217391304}}}}}}}}},"方":{"docs":{},"法":{"docs":{"alg/203_Remove_Linked_List_Elements.html":{"ref":"alg/203_Remove_Linked_List_Elements.html","tf":0.007142857142857143}}}},";":{"docs":{"alg/83_Remove_Duplicates_from_Sorted_List.html":{"ref":"alg/83_Remove_Duplicates_from_Sorted_List.html","tf":0.014925373134328358},"alg/234_Palindrome_Linked_List.html":{"ref":"alg/234_Palindrome_Linked_List.html","tf":0.011764705882352941}}},"法":{"docs":{},"跳":{"docs":{},"过":{"docs":{},"重":{"docs":{},"复":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"alg/82_Remove_Duplicates_from_Sorted_List_II.html":{"ref":"alg/82_Remove_Duplicates_from_Sorted_List_II.html","tf":0.015384615384615385}}}}}}}}}},"再":{"docs":{},"比":{"docs":{},"较":{"docs":{},"大":{"docs":{},"小":{"docs":{},"。":{"docs":{"alg/21_Merge_Two_Sorted_Lists.html":{"ref":"alg/21_Merge_Two_Sorted_Lists.html","tf":0.017857142857142856}}}}}}}},"(":{"0":{"docs":{},",":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.006493506493506494}}}},"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},",":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.003246753246753247}}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},")":{"docs":{},":":{"docs":{"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.004291845493562232}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.004291845493562232}}}}}}},":":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.003246753246753247}}},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.006493506493506494}}}}}}}},"s":{"docs":{},":":{"docs":{"2_tree.html":{"ref":"2_tree.html","tf":0.041666666666666664}}}}}}},")":{"docs":{"alg/169_Majority_Element.html":{"ref":"alg/169_Majority_Element.html","tf":0.008547008547008548},"alg/19_Remove_Nth_Node_From_End_of_List.html":{"ref":"alg/19_Remove_Nth_Node_From_End_of_List.html","tf":0.009433962264150943}},":":{"docs":{"alg/19_Remove_Nth_Node_From_End_of_List.html":{"ref":"alg/19_Remove_Nth_Node_From_End_of_List.html","tf":0.009433962264150943}}}},":":{"docs":{"alg/169_Majority_Element.html":{"ref":"alg/169_Majority_Element.html","tf":0.008547008547008548},"alg/19_Remove_Nth_Node_From_End_of_List.html":{"ref":"alg/19_Remove_Nth_Node_From_End_of_List.html","tf":0.009433962264150943}}},";":{"docs":{"alg/169_Majority_Element.html":{"ref":"alg/169_Majority_Element.html","tf":0.017094017094017096},"alg/24_Swap_Nodes_in_Pairs.html":{"ref":"alg/24_Swap_Nodes_in_Pairs.html","tf":0.011363636363636364},"alg/19_Remove_Nth_Node_From_End_of_List.html":{"ref":"alg/19_Remove_Nth_Node_From_End_of_List.html","tf":0.009433962264150943}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"alg/24_Swap_Nodes_in_Pairs.html":{"ref":"alg/24_Swap_Nodes_in_Pairs.html","tf":0.011363636363636364}}}}}}},"a":{"docs":{},"i":{"docs":{},"v":{"docs":{"alg/23_Merge_k_Sorted_Lists.html":{"ref":"alg/23_Merge_k_Sorted_Lists.html","tf":0.006944444444444444}},"e":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"先":{"docs":{},"移":{"docs":{},"除":{"docs":{},"头":{"docs":{},"部":{"docs":{},"，":{"docs":{},"再":{"docs":{},"移":{"docs":{},"除":{"docs":{},"中":{"docs":{},"间":{"docs":{},"。":{"docs":{"alg/203_Remove_Linked_List_Elements.html":{"ref":"alg/203_Remove_Linked_List_Elements.html","tf":0.007142857142857143}}}}}}}}}}}}}},"要":{"docs":{},"算":{"docs":{},"两":{"docs":{},"次":{"docs":{"alg/19_Remove_Nth_Node_From_End_of_List.html":{"ref":"alg/19_Remove_Nth_Node_From_End_of_List.html","tf":0.009433962264150943}}}}}}},":":{"docs":{"alg/83_Remove_Duplicates_from_Sorted_List.html":{"ref":"alg/83_Remove_Duplicates_from_Sorted_List.html","tf":0.014925373134328358}}},"设":{"docs":{},"置":{"docs":{},"d":{"docs":{},"u":{"docs":{},"m":{"docs":{},"m":{"docs":{},"i":{"docs":{"alg/21_Merge_Two_Sorted_Lists.html":{"ref":"alg/21_Merge_Two_Sorted_Lists.html","tf":0.017857142857142856}}}}}}}}}}},"迭":{"docs":{},"代":{"docs":{"alg/234_Palindrome_Linked_List.html":{"ref":"alg/234_Palindrome_Linked_List.html","tf":0.011764705882352941}}}},"级":{"docs":{},"别":{"docs":{},"递":{"docs":{},"归":{"docs":{},"三":{"docs":{},"连":{"docs":{},"其":{"docs":{},"一":{"docs":{},"：":{"docs":{},"前":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"。":{"docs":{"alg/144_Binary_Tree_Preorder_Traversal.html":{"ref":"alg/144_Binary_Tree_Preorder_Traversal.html","tf":0.009345794392523364}}}}}}}}},"二":{"docs":{},"：":{"docs":{},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"。":{"docs":{"alg/94_Binary_Tree_Inorder_Traversal.html":{"ref":"alg/94_Binary_Tree_Inorder_Traversal.html","tf":0.008771929824561403}}}}}}}}},"三":{"docs":{},"：":{"docs":{},"后":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"。":{"docs":{"alg/145_Binary_Tree_Postorder_Traversal.html":{"ref":"alg/145_Binary_Tree_Postorder_Traversal.html","tf":0.014705882352941176}}}}}}}}}}}}}}}},"递":{"docs":{},"归":{"docs":{"alg/226_Invert_Binary_Tree.html":{"ref":"alg/226_Invert_Binary_Tree.html","tf":0.010638297872340425}}}},"比":{"docs":{},"较":{"docs":{},"法":{"docs":{},"，":{"docs":{},"效":{"docs":{},"率":{"docs":{},"比":{"docs":{},"较":{"docs":{},"低":{"docs":{},"，":{"docs":{},"还":{"docs":{},"有":{"docs":{},"一":{"docs":{},"种":{"docs":{},"同":{"docs":{},"时":{"docs":{},"比":{"docs":{},"较":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"记":{"docs":{},"得":{"docs":{},"去":{"docs":{},"看":{"docs":{},"。":{"docs":{"alg/872_Leaf-Similar_Trees.html":{"ref":"alg/872_Leaf-Similar_Trees.html","tf":0.019230769230769232}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{"alg/19_Remove_Nth_Node_From_End_of_List.html":{"ref":"alg/19_Remove_Nth_Node_From_End_of_List.html","tf":1.6761006289308176}}}}},"p":{"docs":{"alg/21_Merge_Two_Sorted_Lists.html":{"ref":"alg/21_Merge_Two_Sorted_Lists.html","tf":0.017857142857142856}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"alg/1_2Sum.html":{"ref":"alg/1_2Sum.html","tf":0.03571428571428571},"alg/15_3Sum.html":{"ref":"alg/15_3Sum.html","tf":0.015384615384615385},"alg/18_4Sum.html":{"ref":"alg/18_4Sum.html","tf":0.013157894736842105},"alg/69_Sqrtx.html":{"ref":"alg/69_Sqrtx.html","tf":0.020202020202020204},"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.013392857142857142},"alg/169_Majority_Element.html":{"ref":"alg/169_Majority_Element.html","tf":0.02564102564102564},"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.015151515151515152},"alg/215_Kth_Largest_Element_in_an_Array.html":{"ref":"alg/215_Kth_Largest_Element_in_an_Array.html","tf":0.010101010101010102},"alg/704_Binary_Search.html":{"ref":"alg/704_Binary_Search.html","tf":0.014545454545454545},"alg/206_Reverse_Linked_List.html":{"ref":"alg/206_Reverse_Linked_List.html","tf":0.029411764705882353},"alg/24_Swap_Nodes_in_Pairs.html":{"ref":"alg/24_Swap_Nodes_in_Pairs.html","tf":0.022727272727272728},"alg/876_Middle_of_the_Linked_List.html":{"ref":"alg/876_Middle_of_the_Linked_List.html","tf":0.02857142857142857},"alg/141_Linked_List_Cycle.html":{"ref":"alg/141_Linked_List_Cycle.html","tf":0.02127659574468085},"alg/142_Linked_List_Cycle_II.html":{"ref":"alg/142_Linked_List_Cycle_II.html","tf":0.017543859649122806},"alg/160_Intersection_of_Two_Linked_Lists.html":{"ref":"alg/160_Intersection_of_Two_Linked_Lists.html","tf":0.01818181818181818},"alg/237_Delete_Node_in_a_Linked_List.html":{"ref":"alg/237_Delete_Node_in_a_Linked_List.html","tf":0.05555555555555555},"alg/203_Remove_Linked_List_Elements.html":{"ref":"alg/203_Remove_Linked_List_Elements.html","tf":0.02142857142857143},"alg/83_Remove_Duplicates_from_Sorted_List.html":{"ref":"alg/83_Remove_Duplicates_from_Sorted_List.html","tf":0.029850746268656716},"alg/82_Remove_Duplicates_from_Sorted_List_II.html":{"ref":"alg/82_Remove_Duplicates_from_Sorted_List_II.html","tf":0.015384615384615385},"alg/86_Partition_List.html":{"ref":"alg/86_Partition_List.html","tf":0.021052631578947368},"alg/234_Palindrome_Linked_List.html":{"ref":"alg/234_Palindrome_Linked_List.html","tf":0.011764705882352941},"alg/143_Reorder_List.html":{"ref":"alg/143_Reorder_List.html","tf":0.007462686567164179},"alg/147_Insertion_Sort_List.html":{"ref":"alg/147_Insertion_Sort_List.html","tf":0.023809523809523808},"alg/328_Odd_Even_Linked_List.html":{"ref":"alg/328_Odd_Even_Linked_List.html","tf":0.01818181818181818},"alg/148_Sort_List.html":{"ref":"alg/148_Sort_List.html","tf":0.023529411764705882},"alg/21_Merge_Two_Sorted_Lists.html":{"ref":"alg/21_Merge_Two_Sorted_Lists.html","tf":0.03571428571428571},"alg/23_Merge_k_Sorted_Lists.html":{"ref":"alg/23_Merge_k_Sorted_Lists.html","tf":0.041666666666666664},"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.00974025974025974},"alg/817_Linked_List_Components.html":{"ref":"alg/817_Linked_List_Components.html","tf":0.05},"alg/19_Remove_Nth_Node_From_End_of_List.html":{"ref":"alg/19_Remove_Nth_Node_From_End_of_List.html","tf":0.009433962264150943},"alg/144_Binary_Tree_Preorder_Traversal.html":{"ref":"alg/144_Binary_Tree_Preorder_Traversal.html","tf":0.037383177570093455},"alg/94_Binary_Tree_Inorder_Traversal.html":{"ref":"alg/94_Binary_Tree_Inorder_Traversal.html","tf":0.03508771929824561},"alg/145_Binary_Tree_Postorder_Traversal.html":{"ref":"alg/145_Binary_Tree_Postorder_Traversal.html","tf":0.04411764705882353},"alg/102_Binary_Tree_Level_Order_Traversal.html":{"ref":"alg/102_Binary_Tree_Level_Order_Traversal.html","tf":0.010869565217391304},"alg/100_Same_Tree.html":{"ref":"alg/100_Same_Tree.html","tf":0.022727272727272728},"alg/101_Symmetric_Tree.html":{"ref":"alg/101_Symmetric_Tree.html","tf":0.03389830508474576},"alg/226_Invert_Binary_Tree.html":{"ref":"alg/226_Invert_Binary_Tree.html","tf":0.02127659574468085},"alg/617_Merge_Two_Binary_Trees.html":{"ref":"alg/617_Merge_Two_Binary_Trees.html","tf":0.022727272727272728},"alg/872_Leaf-Similar_Trees.html":{"ref":"alg/872_Leaf-Similar_Trees.html","tf":0.038461538461538464},"alg/104_Maximum_Depth_of_Binary_Tree.html":{"ref":"alg/104_Maximum_Depth_of_Binary_Tree.html","tf":0.02702702702702703},"alg/111_Minimum_Depth_of_Binary_Tree.html":{"ref":"alg/111_Minimum_Depth_of_Binary_Tree.html","tf":0.017543859649122806},"alg/112_Path_Sum.html":{"ref":"alg/112_Path_Sum.html","tf":0.02857142857142857},"alg/222_Count_Complete_Tree_Nodes.html":{"ref":"alg/222_Count_Complete_Tree_Nodes.html","tf":0.03260869565217391}}}}}},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.003246753246753247}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},",":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.006493506493506494}}}}}}}}}},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":2.5223214285714284},"alg/24_Swap_Nodes_in_Pairs.html":{"ref":"alg/24_Swap_Nodes_in_Pairs.html","tf":0.022727272727272728}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"，":{"docs":{},"注":{"docs":{},"意":{"docs":{},"排":{"docs":{},"序":{"docs":{},"，":{"docs":{},"处":{"docs":{},"理":{"docs":{},"重":{"docs":{},"复":{"docs":{},"，":{"docs":{},"数":{"docs":{},"组":{"docs":{},"越":{"docs":{},"界":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{"alg/15_3Sum.html":{"ref":"alg/15_3Sum.html","tf":0.015384615384615385}}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714}}}}}},")":{"docs":{},")":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714}}}},"s":{"docs":{},")":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714}},":":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.008928571428571428}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714}}}}}}}}}},":":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.008928571428571428}}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"alg/24_Swap_Nodes_in_Pairs.html":{"ref":"alg/24_Swap_Nodes_in_Pairs.html","tf":0.011363636363636364}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"alg/24_Swap_Nodes_in_Pairs.html":{"ref":"alg/24_Swap_Nodes_in_Pairs.html","tf":0.011363636363636364}},";":{"docs":{"alg/24_Swap_Nodes_in_Pairs.html":{"ref":"alg/24_Swap_Nodes_in_Pairs.html","tf":0.011363636363636364}}}}}}}},";":{"docs":{"alg/24_Swap_Nodes_in_Pairs.html":{"ref":"alg/24_Swap_Nodes_in_Pairs.html","tf":0.011363636363636364}}}}}}}}}}},"p":{"docs":{},":":{"docs":{"alg/215_Kth_Largest_Element_in_an_Array.html":{"ref":"alg/215_Kth_Largest_Element_in_an_Array.html","tf":0.12121212121212122}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"alg/145_Binary_Tree_Postorder_Traversal.html":{"ref":"alg/145_Binary_Tree_Postorder_Traversal.html","tf":2.014705882352941}},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"alg/145_Binary_Tree_Postorder_Traversal.html":{"ref":"alg/145_Binary_Tree_Postorder_Traversal.html","tf":0.014705882352941176}}}}}}}}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"n":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.008928571428571428}}}}}}},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.010101010101010102}}}}},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"alg/215_Kth_Largest_Element_in_an_Array.html":{"ref":"alg/215_Kth_Largest_Element_in_an_Array.html","tf":0.020202020202020204},"alg/23_Merge_k_Sorted_Lists.html":{"ref":"alg/23_Merge_k_Sorted_Lists.html","tf":0.006944444444444444}},"e":{"docs":{},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"alg/215_Kth_Largest_Element_in_an_Array.html":{"ref":"alg/215_Kth_Largest_Element_in_an_Array.html","tf":0.010101010101010102}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},",":{"docs":{"alg/215_Kth_Largest_Element_in_an_Array.html":{"ref":"alg/215_Kth_Largest_Element_in_an_Array.html","tf":0.010101010101010102}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},",":{"docs":{"alg/23_Merge_k_Sorted_Lists.html":{"ref":"alg/23_Merge_k_Sorted_Lists.html","tf":0.006944444444444444}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{"alg/206_Reverse_Linked_List.html":{"ref":"alg/206_Reverse_Linked_List.html","tf":0.058823529411764705},"alg/82_Remove_Duplicates_from_Sorted_List_II.html":{"ref":"alg/82_Remove_Duplicates_from_Sorted_List_II.html","tf":0.03076923076923077},"alg/234_Palindrome_Linked_List.html":{"ref":"alg/234_Palindrome_Linked_List.html","tf":0.03529411764705882},"alg/147_Insertion_Sort_List.html":{"ref":"alg/147_Insertion_Sort_List.html","tf":0.023809523809523808},"alg/148_Sort_List.html":{"ref":"alg/148_Sort_List.html","tf":0.023529411764705882}},",":{"docs":{"alg/206_Reverse_Linked_List.html":{"ref":"alg/206_Reverse_Linked_List.html","tf":0.014705882352941176}}},";":{"docs":{"alg/206_Reverse_Linked_List.html":{"ref":"alg/206_Reverse_Linked_List.html","tf":0.029411764705882353},"alg/234_Palindrome_Linked_List.html":{"ref":"alg/234_Palindrome_Linked_List.html","tf":0.011764705882352941}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"alg/82_Remove_Duplicates_from_Sorted_List_II.html":{"ref":"alg/82_Remove_Duplicates_from_Sorted_List_II.html","tf":0.015384615384615385},"alg/148_Sort_List.html":{"ref":"alg/148_Sort_List.html","tf":0.011764705882352941}},";":{"docs":{"alg/82_Remove_Duplicates_from_Sorted_List_II.html":{"ref":"alg/82_Remove_Duplicates_from_Sorted_List_II.html","tf":0.015384615384615385},"alg/234_Palindrome_Linked_List.html":{"ref":"alg/234_Palindrome_Linked_List.html","tf":0.011764705882352941}}},".":{"docs":{},"v":{"docs":{"alg/147_Insertion_Sort_List.html":{"ref":"alg/147_Insertion_Sort_List.html","tf":0.023809523809523808}}}}}}}}},"v":{"docs":{},"_":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.006493506493506494}},"e":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.003246753246753247}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"alg/144_Binary_Tree_Preorder_Traversal.html":{"ref":"alg/144_Binary_Tree_Preorder_Traversal.html","tf":2.0093457943925235}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"alg/144_Binary_Tree_Preorder_Traversal.html":{"ref":"alg/144_Binary_Tree_Preorder_Traversal.html","tf":0.018691588785046728}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.003246753246753247}}}}}}}},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{"alg/86_Partition_List.html":{"ref":"alg/86_Partition_List.html","tf":3.3438596491228068}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},":":{"docs":{"1_linkedlist.html":{"ref":"1_linkedlist.html","tf":0.02564102564102564}}},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"alg/86_Partition_List.html":{"ref":"alg/86_Partition_List.html","tf":0.021052631578947368}},"e":{"docs":{},"[":{"docs":{},"]":{"docs":{"alg/23_Merge_k_Sorted_Lists.html":{"ref":"alg/23_Merge_k_Sorted_Lists.html","tf":0.006944444444444444}}}}}}}},"s":{"docs":{},",":{"docs":{"alg/23_Merge_k_Sorted_Lists.html":{"ref":"alg/23_Merge_k_Sorted_Lists.html","tf":0.020833333333333332}}}}}}}}}}}}}}}},"i":{"docs":{},"r":{"docs":{"alg/24_Swap_Nodes_in_Pairs.html":{"ref":"alg/24_Swap_Nodes_in_Pairs.html","tf":2.5113636363636362}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{"alg/234_Palindrome_Linked_List.html":{"ref":"alg/234_Palindrome_Linked_List.html","tf":2.511764705882353}}}}}}}}},"t":{"docs":{},"h":{"docs":{"alg/112_Path_Sum.html":{"ref":"alg/112_Path_Sum.html","tf":3.3619047619047615}}}}},";":{"docs":{"alg/21_Merge_Two_Sorted_Lists.html":{"ref":"alg/21_Merge_Two_Sorted_Lists.html","tf":0.017857142857142856}}}},"r":{"docs":{"alg/15_3Sum.html":{"ref":"alg/15_3Sum.html","tf":0.015384615384615385},"alg/18_4Sum.html":{"ref":"alg/18_4Sum.html","tf":0.013157894736842105},"alg/69_Sqrtx.html":{"ref":"alg/69_Sqrtx.html","tf":0.020202020202020204},"alg/704_Binary_Search.html":{"ref":"alg/704_Binary_Search.html","tf":0.05090909090909091},"alg/86_Partition_List.html":{"ref":"alg/86_Partition_List.html","tf":0.021052631578947368},"alg/148_Sort_List.html":{"ref":"alg/148_Sort_List.html","tf":0.023529411764705882}},"e":{"docs":{"alg/15_3Sum.html":{"ref":"alg/15_3Sum.html","tf":0.015384615384615385},"alg/18_4Sum.html":{"ref":"alg/18_4Sum.html","tf":0.013157894736842105},"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.010101010101010102},"alg/19_Remove_Nth_Node_From_End_of_List.html":{"ref":"alg/19_Remove_Nth_Node_From_End_of_List.html","tf":0.009433962264150943},"alg/144_Binary_Tree_Preorder_Traversal.html":{"ref":"alg/144_Binary_Tree_Preorder_Traversal.html","tf":0.018691588785046728},"alg/94_Binary_Tree_Inorder_Traversal.html":{"ref":"alg/94_Binary_Tree_Inorder_Traversal.html","tf":0.017543859649122806},"alg/145_Binary_Tree_Postorder_Traversal.html":{"ref":"alg/145_Binary_Tree_Postorder_Traversal.html","tf":0.014705882352941176},"alg/102_Binary_Tree_Level_Order_Traversal.html":{"ref":"alg/102_Binary_Tree_Level_Order_Traversal.html","tf":0.043478260869565216}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"alg/1_2Sum.html":{"ref":"alg/1_2Sum.html","tf":0.03571428571428571},"alg/69_Sqrtx.html":{"ref":"alg/69_Sqrtx.html","tf":0.06060606060606061},"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.017857142857142856},"alg/169_Majority_Element.html":{"ref":"alg/169_Majority_Element.html","tf":0.03418803418803419},"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.045454545454545456},"alg/215_Kth_Largest_Element_in_an_Array.html":{"ref":"alg/215_Kth_Largest_Element_in_an_Array.html","tf":0.020202020202020204},"alg/704_Binary_Search.html":{"ref":"alg/704_Binary_Search.html","tf":0.05818181818181818},"alg/206_Reverse_Linked_List.html":{"ref":"alg/206_Reverse_Linked_List.html","tf":0.058823529411764705},"alg/24_Swap_Nodes_in_Pairs.html":{"ref":"alg/24_Swap_Nodes_in_Pairs.html","tf":0.03409090909090909},"alg/876_Middle_of_the_Linked_List.html":{"ref":"alg/876_Middle_of_the_Linked_List.html","tf":0.02857142857142857},"alg/141_Linked_List_Cycle.html":{"ref":"alg/141_Linked_List_Cycle.html","tf":0.0425531914893617},"alg/142_Linked_List_Cycle_II.html":{"ref":"alg/142_Linked_List_Cycle_II.html","tf":0.03508771929824561},"alg/160_Intersection_of_Two_Linked_Lists.html":{"ref":"alg/160_Intersection_of_Two_Linked_Lists.html","tf":0.03636363636363636},"alg/203_Remove_Linked_List_Elements.html":{"ref":"alg/203_Remove_Linked_List_Elements.html","tf":0.02857142857142857},"alg/83_Remove_Duplicates_from_Sorted_List.html":{"ref":"alg/83_Remove_Duplicates_from_Sorted_List.html","tf":0.04477611940298507},"alg/82_Remove_Duplicates_from_Sorted_List_II.html":{"ref":"alg/82_Remove_Duplicates_from_Sorted_List_II.html","tf":0.015384615384615385},"alg/234_Palindrome_Linked_List.html":{"ref":"alg/234_Palindrome_Linked_List.html","tf":0.023529411764705882},"alg/328_Odd_Even_Linked_List.html":{"ref":"alg/328_Odd_Even_Linked_List.html","tf":0.03636363636363636},"alg/148_Sort_List.html":{"ref":"alg/148_Sort_List.html","tf":0.023529411764705882},"alg/21_Merge_Two_Sorted_Lists.html":{"ref":"alg/21_Merge_Two_Sorted_Lists.html","tf":0.017857142857142856},"alg/23_Merge_k_Sorted_Lists.html":{"ref":"alg/23_Merge_k_Sorted_Lists.html","tf":0.05555555555555555},"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.01948051948051948},"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.02575107296137339},"alg/19_Remove_Nth_Node_From_End_of_List.html":{"ref":"alg/19_Remove_Nth_Node_From_End_of_List.html","tf":0.018867924528301886},"alg/144_Binary_Tree_Preorder_Traversal.html":{"ref":"alg/144_Binary_Tree_Preorder_Traversal.html","tf":0.018691588785046728},"alg/94_Binary_Tree_Inorder_Traversal.html":{"ref":"alg/94_Binary_Tree_Inorder_Traversal.html","tf":0.017543859649122806},"alg/145_Binary_Tree_Postorder_Traversal.html":{"ref":"alg/145_Binary_Tree_Postorder_Traversal.html","tf":0.014705882352941176},"alg/102_Binary_Tree_Level_Order_Traversal.html":{"ref":"alg/102_Binary_Tree_Level_Order_Traversal.html","tf":0.03260869565217391},"alg/100_Same_Tree.html":{"ref":"alg/100_Same_Tree.html","tf":0.06818181818181818},"alg/101_Symmetric_Tree.html":{"ref":"alg/101_Symmetric_Tree.html","tf":0.0847457627118644},"alg/226_Invert_Binary_Tree.html":{"ref":"alg/226_Invert_Binary_Tree.html","tf":0.06382978723404255},"alg/617_Merge_Two_Binary_Trees.html":{"ref":"alg/617_Merge_Two_Binary_Trees.html","tf":0.045454545454545456},"alg/872_Leaf-Similar_Trees.html":{"ref":"alg/872_Leaf-Similar_Trees.html","tf":0.019230769230769232},"alg/104_Maximum_Depth_of_Binary_Tree.html":{"ref":"alg/104_Maximum_Depth_of_Binary_Tree.html","tf":0.05405405405405406},"alg/111_Minimum_Depth_of_Binary_Tree.html":{"ref":"alg/111_Minimum_Depth_of_Binary_Tree.html","tf":0.07017543859649122},"alg/112_Path_Sum.html":{"ref":"alg/112_Path_Sum.html","tf":0.08571428571428572},"alg/222_Count_Complete_Tree_Nodes.html":{"ref":"alg/222_Count_Complete_Tree_Nodes.html","tf":0.07608695652173914}},";":{"docs":{"alg/143_Reorder_List.html":{"ref":"alg/143_Reorder_List.html","tf":0.007462686567164179},"alg/144_Binary_Tree_Preorder_Traversal.html":{"ref":"alg/144_Binary_Tree_Preorder_Traversal.html","tf":0.037383177570093455},"alg/94_Binary_Tree_Inorder_Traversal.html":{"ref":"alg/94_Binary_Tree_Inorder_Traversal.html","tf":0.03508771929824561},"alg/145_Binary_Tree_Postorder_Traversal.html":{"ref":"alg/145_Binary_Tree_Postorder_Traversal.html","tf":0.058823529411764705},"alg/872_Leaf-Similar_Trees.html":{"ref":"alg/872_Leaf-Similar_Trees.html","tf":0.019230769230769232}}}}}}},"f":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714},"alg/169_Majority_Element.html":{"ref":"alg/169_Majority_Element.html","tf":0.008547008547008548}}},"s":{"1":{"docs":{"alg/872_Leaf-Similar_Trees.html":{"ref":"alg/872_Leaf-Similar_Trees.html","tf":0.019230769230769232}},")":{"docs":{},";":{"docs":{"alg/872_Leaf-Similar_Trees.html":{"ref":"alg/872_Leaf-Similar_Trees.html","tf":0.019230769230769232}}}},".":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"2":{"docs":{},")":{"docs":{},";":{"docs":{"alg/872_Leaf-Similar_Trees.html":{"ref":"alg/872_Leaf-Similar_Trees.html","tf":0.019230769230769232}}}}},"docs":{}}}}}}}}}}}}},"2":{"docs":{"alg/872_Leaf-Similar_Trees.html":{"ref":"alg/872_Leaf-Similar_Trees.html","tf":0.019230769230769232}},")":{"docs":{},";":{"docs":{"alg/872_Leaf-Similar_Trees.html":{"ref":"alg/872_Leaf-Similar_Trees.html","tf":0.019230769230769232}}}}},"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714}}}}},")":{"docs":{"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.015151515151515152},"alg/144_Binary_Tree_Preorder_Traversal.html":{"ref":"alg/144_Binary_Tree_Preorder_Traversal.html","tf":0.018691588785046728},"alg/94_Binary_Tree_Inorder_Traversal.html":{"ref":"alg/94_Binary_Tree_Inorder_Traversal.html","tf":0.02631578947368421},"alg/145_Binary_Tree_Postorder_Traversal.html":{"ref":"alg/145_Binary_Tree_Postorder_Traversal.html","tf":0.04411764705882353},"alg/872_Leaf-Similar_Trees.html":{"ref":"alg/872_Leaf-Similar_Trees.html","tf":0.019230769230769232}},":":{"docs":{"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.005050505050505051}}},";":{"docs":{"alg/144_Binary_Tree_Preorder_Traversal.html":{"ref":"alg/144_Binary_Tree_Preorder_Traversal.html","tf":0.04672897196261682},"alg/94_Binary_Tree_Inorder_Traversal.html":{"ref":"alg/94_Binary_Tree_Inorder_Traversal.html","tf":0.03508771929824561},"alg/145_Binary_Tree_Postorder_Traversal.html":{"ref":"alg/145_Binary_Tree_Postorder_Traversal.html","tf":0.058823529411764705},"alg/872_Leaf-Similar_Trees.html":{"ref":"alg/872_Leaf-Similar_Trees.html","tf":0.038461538461538464}}}},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.005050505050505051}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"alg/102_Binary_Tree_Level_Order_Traversal.html":{"ref":"alg/102_Binary_Tree_Level_Order_Traversal.html","tf":0.010869565217391304}}}}}}}}}}}},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"alg/144_Binary_Tree_Preorder_Traversal.html":{"ref":"alg/144_Binary_Tree_Preorder_Traversal.html","tf":0.009345794392523364},"alg/94_Binary_Tree_Inorder_Traversal.html":{"ref":"alg/94_Binary_Tree_Inorder_Traversal.html","tf":0.008771929824561403}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"alg/144_Binary_Tree_Preorder_Traversal.html":{"ref":"alg/144_Binary_Tree_Preorder_Traversal.html","tf":0.009345794392523364},"alg/94_Binary_Tree_Inorder_Traversal.html":{"ref":"alg/94_Binary_Tree_Inorder_Traversal.html","tf":0.008771929824561403},"alg/145_Binary_Tree_Postorder_Traversal.html":{"ref":"alg/145_Binary_Tree_Postorder_Traversal.html","tf":0.014705882352941176}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"alg/144_Binary_Tree_Preorder_Traversal.html":{"ref":"alg/144_Binary_Tree_Preorder_Traversal.html","tf":0.009345794392523364},"alg/94_Binary_Tree_Inorder_Traversal.html":{"ref":"alg/94_Binary_Tree_Inorder_Traversal.html","tf":0.008771929824561403},"alg/145_Binary_Tree_Postorder_Traversal.html":{"ref":"alg/145_Binary_Tree_Postorder_Traversal.html","tf":0.014705882352941176}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"alg/144_Binary_Tree_Preorder_Traversal.html":{"ref":"alg/144_Binary_Tree_Preorder_Traversal.html","tf":0.018691588785046728},"alg/94_Binary_Tree_Inorder_Traversal.html":{"ref":"alg/94_Binary_Tree_Inorder_Traversal.html","tf":0.017543859649122806},"alg/145_Binary_Tree_Postorder_Traversal.html":{"ref":"alg/145_Binary_Tree_Postorder_Traversal.html","tf":0.029411764705882353},"alg/872_Leaf-Similar_Trees.html":{"ref":"alg/872_Leaf-Similar_Trees.html","tf":0.019230769230769232}}}}}}}}}}}}}}}}},";":{"docs":{"alg/144_Binary_Tree_Preorder_Traversal.html":{"ref":"alg/144_Binary_Tree_Preorder_Traversal.html","tf":0.018691588785046728},"alg/94_Binary_Tree_Inorder_Traversal.html":{"ref":"alg/94_Binary_Tree_Inorder_Traversal.html","tf":0.017543859649122806},"alg/145_Binary_Tree_Postorder_Traversal.html":{"ref":"alg/145_Binary_Tree_Postorder_Traversal.html","tf":0.014705882352941176},"alg/102_Binary_Tree_Level_Order_Traversal.html":{"ref":"alg/102_Binary_Tree_Level_Order_Traversal.html","tf":0.010869565217391304}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"alg/206_Reverse_Linked_List.html":{"ref":"alg/206_Reverse_Linked_List.html","tf":2.514705882352941},"alg/24_Swap_Nodes_in_Pairs.html":{"ref":"alg/24_Swap_Nodes_in_Pairs.html","tf":0.011363636363636364},"alg/234_Palindrome_Linked_List.html":{"ref":"alg/234_Palindrome_Linked_List.html","tf":0.011764705882352941},"alg/143_Reorder_List.html":{"ref":"alg/143_Reorder_List.html","tf":0.007462686567164179}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},":":{"docs":{"1_linkedlist.html":{"ref":"1_linkedlist.html","tf":0.02564102564102564}}}}}},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"alg/206_Reverse_Linked_List.html":{"ref":"alg/206_Reverse_Linked_List.html","tf":0.014705882352941176}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},",":{"docs":{"alg/206_Reverse_Linked_List.html":{"ref":"alg/206_Reverse_Linked_List.html","tf":0.014705882352941176}}}}}}}}}}}}}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{"alg/203_Remove_Linked_List_Elements.html":{"ref":"alg/203_Remove_Linked_List_Elements.html","tf":0.007142857142857143}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},":":{"docs":{"alg/83_Remove_Duplicates_from_Sorted_List.html":{"ref":"alg/83_Remove_Duplicates_from_Sorted_List.html","tf":0.014925373134328358},"alg/21_Merge_Two_Sorted_Lists.html":{"ref":"alg/21_Merge_Two_Sorted_Lists.html","tf":0.017857142857142856}}}}}}}},"s":{"docs":{"alg/23_Merge_k_Sorted_Lists.html":{"ref":"alg/23_Merge_k_Sorted_Lists.html","tf":0.006944444444444444}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"alg/203_Remove_Linked_List_Elements.html":{"ref":"alg/203_Remove_Linked_List_Elements.html","tf":2.0214285714285714},"alg/83_Remove_Duplicates_from_Sorted_List.html":{"ref":"alg/83_Remove_Duplicates_from_Sorted_List.html","tf":2.014925373134328},"alg/82_Remove_Duplicates_from_Sorted_List_II.html":{"ref":"alg/82_Remove_Duplicates_from_Sorted_List_II.html","tf":1.6820512820512818},"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.012987012987012988},"alg/19_Remove_Nth_Node_From_End_of_List.html":{"ref":"alg/19_Remove_Nth_Node_From_End_of_List.html","tf":1.6761006289308176}},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},",":{"docs":{"alg/203_Remove_Linked_List_Elements.html":{"ref":"alg/203_Remove_Linked_List_Elements.html","tf":0.007142857142857143}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"alg/203_Remove_Linked_List_Elements.html":{"ref":"alg/203_Remove_Linked_List_Elements.html","tf":0.02142857142857143}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.003246753246753247}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"alg/19_Remove_Nth_Node_From_End_of_List.html":{"ref":"alg/19_Remove_Nth_Node_From_End_of_List.html","tf":0.009433962264150943}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},",":{"docs":{"alg/19_Remove_Nth_Node_From_End_of_List.html":{"ref":"alg/19_Remove_Nth_Node_From_End_of_List.html","tf":0.009433962264150943}}}}}}}}}}}}}}}}}}}}}},"l":{"2":{"docs":{"alg/143_Reorder_List.html":{"ref":"alg/143_Reorder_List.html","tf":0.029850746268656716}},";":{"docs":{"alg/143_Reorder_List.html":{"ref":"alg/143_Reorder_List.html","tf":0.014925373134328358}}}},"docs":{}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"alg/143_Reorder_List.html":{"ref":"alg/143_Reorder_List.html","tf":3.3407960199004973}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"alg/143_Reorder_List.html":{"ref":"alg/143_Reorder_List.html","tf":0.007462686567164179}}}}}}}}}}}}}}}}}}}},"移":{"docs":{},"动":{"docs":{},"的":{"docs":{},"区":{"docs":{},"域":{"docs":{},"。":{"docs":{"alg/15_3Sum.html":{"ref":"alg/15_3Sum.html","tf":0.015384615384615385}}}}}}}},"o":{"docs":{},"o":{"docs":{},"t":{"1":{"docs":{},",":{"docs":{"alg/872_Leaf-Similar_Trees.html":{"ref":"alg/872_Leaf-Similar_Trees.html","tf":0.019230769230769232}}}},"2":{"docs":{},")":{"docs":{"alg/872_Leaf-Similar_Trees.html":{"ref":"alg/872_Leaf-Similar_Trees.html","tf":0.019230769230769232}}}},"docs":{"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.025252525252525252},"alg/226_Invert_Binary_Tree.html":{"ref":"alg/226_Invert_Binary_Tree.html","tf":0.010638297872340425}},")":{"docs":{"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.005050505050505051},"alg/144_Binary_Tree_Preorder_Traversal.html":{"ref":"alg/144_Binary_Tree_Preorder_Traversal.html","tf":0.018691588785046728},"alg/94_Binary_Tree_Inorder_Traversal.html":{"ref":"alg/94_Binary_Tree_Inorder_Traversal.html","tf":0.017543859649122806},"alg/145_Binary_Tree_Postorder_Traversal.html":{"ref":"alg/145_Binary_Tree_Postorder_Traversal.html","tf":0.014705882352941176},"alg/102_Binary_Tree_Level_Order_Traversal.html":{"ref":"alg/102_Binary_Tree_Level_Order_Traversal.html","tf":0.010869565217391304},"alg/101_Symmetric_Tree.html":{"ref":"alg/101_Symmetric_Tree.html","tf":0.01694915254237288},"alg/226_Invert_Binary_Tree.html":{"ref":"alg/226_Invert_Binary_Tree.html","tf":0.02127659574468085},"alg/104_Maximum_Depth_of_Binary_Tree.html":{"ref":"alg/104_Maximum_Depth_of_Binary_Tree.html","tf":0.02702702702702703},"alg/111_Minimum_Depth_of_Binary_Tree.html":{"ref":"alg/111_Minimum_Depth_of_Binary_Tree.html","tf":0.017543859649122806},"alg/222_Count_Complete_Tree_Nodes.html":{"ref":"alg/222_Count_Complete_Tree_Nodes.html","tf":0.03260869565217391}},":":{"docs":{"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.010101010101010102},"alg/102_Binary_Tree_Level_Order_Traversal.html":{"ref":"alg/102_Binary_Tree_Level_Order_Traversal.html","tf":0.010869565217391304},"alg/226_Invert_Binary_Tree.html":{"ref":"alg/226_Invert_Binary_Tree.html","tf":0.010638297872340425}}}},",":{"docs":{"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.005050505050505051},"alg/144_Binary_Tree_Preorder_Traversal.html":{"ref":"alg/144_Binary_Tree_Preorder_Traversal.html","tf":0.018691588785046728},"alg/94_Binary_Tree_Inorder_Traversal.html":{"ref":"alg/94_Binary_Tree_Inorder_Traversal.html","tf":0.017543859649122806},"alg/145_Binary_Tree_Postorder_Traversal.html":{"ref":"alg/145_Binary_Tree_Postorder_Traversal.html","tf":0.029411764705882353},"alg/872_Leaf-Similar_Trees.html":{"ref":"alg/872_Leaf-Similar_Trees.html","tf":0.019230769230769232},"alg/112_Path_Sum.html":{"ref":"alg/112_Path_Sum.html","tf":0.02857142857142857}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"alg/226_Invert_Binary_Tree.html":{"ref":"alg/226_Invert_Binary_Tree.html","tf":0.02127659574468085}},";":{"docs":{"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.005050505050505051},"alg/226_Invert_Binary_Tree.html":{"ref":"alg/226_Invert_Binary_Tree.html","tf":0.010638297872340425}}},",":{"docs":{"alg/226_Invert_Binary_Tree.html":{"ref":"alg/226_Invert_Binary_Tree.html","tf":0.010638297872340425}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"alg/226_Invert_Binary_Tree.html":{"ref":"alg/226_Invert_Binary_Tree.html","tf":0.02127659574468085},"alg/872_Leaf-Similar_Trees.html":{"ref":"alg/872_Leaf-Similar_Trees.html","tf":0.019230769230769232},"alg/112_Path_Sum.html":{"ref":"alg/112_Path_Sum.html","tf":0.02857142857142857}},")":{"docs":{},";":{"docs":{"alg/101_Symmetric_Tree.html":{"ref":"alg/101_Symmetric_Tree.html","tf":0.01694915254237288}}}},",":{"docs":{"alg/226_Invert_Binary_Tree.html":{"ref":"alg/226_Invert_Binary_Tree.html","tf":0.010638297872340425}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"alg/112_Path_Sum.html":{"ref":"alg/112_Path_Sum.html","tf":0.02857142857142857}},";":{"docs":{"alg/112_Path_Sum.html":{"ref":"alg/112_Path_Sum.html","tf":0.02857142857142857}}}},";":{"docs":{"alg/112_Path_Sum.html":{"ref":"alg/112_Path_Sum.html","tf":0.02857142857142857}}}}}}},":":{"docs":{"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.010101010101010102},"alg/102_Binary_Tree_Level_Order_Traversal.html":{"ref":"alg/102_Binary_Tree_Level_Order_Traversal.html","tf":0.021739130434782608},"alg/226_Invert_Binary_Tree.html":{"ref":"alg/226_Invert_Binary_Tree.html","tf":0.02127659574468085}}},";":{"docs":{"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.010101010101010102},"alg/94_Binary_Tree_Inorder_Traversal.html":{"ref":"alg/94_Binary_Tree_Inorder_Traversal.html","tf":0.008771929824561403},"alg/226_Invert_Binary_Tree.html":{"ref":"alg/226_Invert_Binary_Tree.html","tf":0.02127659574468085}}}}}},")":{"docs":{"alg/704_Binary_Search.html":{"ref":"alg/704_Binary_Search.html","tf":0.007272727272727273},"alg/148_Sort_List.html":{"ref":"alg/148_Sort_List.html","tf":0.011764705882352941},"alg/23_Merge_k_Sorted_Lists.html":{"ref":"alg/23_Merge_k_Sorted_Lists.html","tf":0.013888888888888888}},";":{"docs":{"alg/148_Sort_List.html":{"ref":"alg/148_Sort_List.html","tf":0.011764705882352941},"alg/23_Merge_k_Sorted_Lists.html":{"ref":"alg/23_Merge_k_Sorted_Lists.html","tf":0.006944444444444444}}}},",":{"docs":{"alg/704_Binary_Search.html":{"ref":"alg/704_Binary_Search.html","tf":0.02181818181818182}}},";":{"docs":{"alg/86_Partition_List.html":{"ref":"alg/86_Partition_List.html","tf":0.021052631578947368}}},"h":{"docs":{"alg/86_Partition_List.html":{"ref":"alg/86_Partition_List.html","tf":0.021052631578947368}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},";":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"其":{"docs":{},"实":{"docs":{},"会":{"docs":{},"同":{"docs":{},"时":{"docs":{},"改":{"docs":{},"变":{"docs":{},"l":{"docs":{},"和":{"docs":{},"r":{"docs":{},"h":{"docs":{},"，":{"docs":{},"结":{"docs":{},"果":{"docs":{},"就":{"docs":{},"变":{"docs":{},"成":{"1":{"docs":{"alg/86_Partition_List.html":{"ref":"alg/86_Partition_List.html","tf":0.010526315789473684}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.008583690987124463}},")":{"docs":{},":":{"docs":{"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.004291845493562232}}}}}}}}},"n":{"docs":{"alg/19_Remove_Nth_Node_From_End_of_List.html":{"ref":"alg/19_Remove_Nth_Node_From_End_of_List.html","tf":0.009433962264150943}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{},")":{"docs":{},":":{"docs":{"alg/102_Binary_Tree_Level_Order_Traversal.html":{"ref":"alg/102_Binary_Tree_Level_Order_Traversal.html","tf":0.010869565217391304}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"alg/100_Same_Tree.html":{"ref":"alg/100_Same_Tree.html","tf":0.045454545454545456},"alg/101_Symmetric_Tree.html":{"ref":"alg/101_Symmetric_Tree.html","tf":0.03389830508474576},"alg/111_Minimum_Depth_of_Binary_Tree.html":{"ref":"alg/111_Minimum_Depth_of_Binary_Tree.html","tf":0.08771929824561403}},")":{"docs":{"alg/100_Same_Tree.html":{"ref":"alg/100_Same_Tree.html","tf":0.022727272727272728},"alg/101_Symmetric_Tree.html":{"ref":"alg/101_Symmetric_Tree.html","tf":0.01694915254237288},"alg/111_Minimum_Depth_of_Binary_Tree.html":{"ref":"alg/111_Minimum_Depth_of_Binary_Tree.html","tf":0.017543859649122806}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{"alg/100_Same_Tree.html":{"ref":"alg/100_Same_Tree.html","tf":0.022727272727272728}},";":{"docs":{"alg/101_Symmetric_Tree.html":{"ref":"alg/101_Symmetric_Tree.html","tf":0.01694915254237288}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{"alg/101_Symmetric_Tree.html":{"ref":"alg/101_Symmetric_Tree.html","tf":0.01694915254237288}},";":{"docs":{"alg/100_Same_Tree.html":{"ref":"alg/100_Same_Tree.html","tf":0.022727272727272728}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"alg/100_Same_Tree.html":{"ref":"alg/100_Same_Tree.html","tf":0.022727272727272728}},")":{"docs":{"alg/101_Symmetric_Tree.html":{"ref":"alg/101_Symmetric_Tree.html","tf":0.01694915254237288}}}}}}},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{"alg/222_Count_Complete_Tree_Nodes.html":{"ref":"alg/222_Count_Complete_Tree_Nodes.html","tf":0.010869565217391304}},")":{"docs":{"alg/222_Count_Complete_Tree_Nodes.html":{"ref":"alg/222_Count_Complete_Tree_Nodes.html","tf":0.010869565217391304}},")":{"docs":{},";":{"docs":{"alg/222_Count_Complete_Tree_Nodes.html":{"ref":"alg/222_Count_Complete_Tree_Nodes.html","tf":0.010869565217391304}}}}}}}}}}}}}}},"t":{"1":{"docs":{},",":{"docs":{"alg/617_Merge_Two_Binary_Trees.html":{"ref":"alg/617_Merge_Two_Binary_Trees.html","tf":0.022727272727272728}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"alg/617_Merge_Two_Binary_Trees.html":{"ref":"alg/617_Merge_Two_Binary_Trees.html","tf":0.022727272727272728}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"alg/617_Merge_Two_Binary_Trees.html":{"ref":"alg/617_Merge_Two_Binary_Trees.html","tf":0.022727272727272728}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"alg/617_Merge_Two_Binary_Trees.html":{"ref":"alg/617_Merge_Two_Binary_Trees.html","tf":0.022727272727272728}}}}}},";":{"docs":{"alg/617_Merge_Two_Binary_Trees.html":{"ref":"alg/617_Merge_Two_Binary_Trees.html","tf":0.045454545454545456}}}},"2":{"docs":{"alg/617_Merge_Two_Binary_Trees.html":{"ref":"alg/617_Merge_Two_Binary_Trees.html","tf":0.045454545454545456}},")":{"docs":{"alg/617_Merge_Two_Binary_Trees.html":{"ref":"alg/617_Merge_Two_Binary_Trees.html","tf":0.022727272727272728}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"alg/617_Merge_Two_Binary_Trees.html":{"ref":"alg/617_Merge_Two_Binary_Trees.html","tf":0.022727272727272728}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"alg/617_Merge_Two_Binary_Trees.html":{"ref":"alg/617_Merge_Two_Binary_Trees.html","tf":0.022727272727272728}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},";":{"docs":{"alg/617_Merge_Two_Binary_Trees.html":{"ref":"alg/617_Merge_Two_Binary_Trees.html","tf":0.022727272727272728}}}}}}}},"docs":{},"a":{"docs":{},"r":{"docs":{"alg/18_4Sum.html":{"ref":"alg/18_4Sum.html","tf":0.013157894736842105}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"alg/15_3Sum.html":{"ref":"alg/15_3Sum.html","tf":0.015384615384615385},"alg/18_4Sum.html":{"ref":"alg/18_4Sum.html","tf":0.013157894736842105}},")":{"docs":{"alg/1_2Sum.html":{"ref":"alg/1_2Sum.html","tf":0.03571428571428571},"alg/18_4Sum.html":{"ref":"alg/18_4Sum.html","tf":0.013157894736842105},"alg/704_Binary_Search.html":{"ref":"alg/704_Binary_Search.html","tf":0.02909090909090909}},":":{"docs":{"alg/704_Binary_Search.html":{"ref":"alg/704_Binary_Search.html","tf":0.01090909090909091}}},";":{"docs":{"alg/704_Binary_Search.html":{"ref":"alg/704_Binary_Search.html","tf":0.02181818181818182}}}},":":{"docs":{"alg/704_Binary_Search.html":{"ref":"alg/704_Binary_Search.html","tf":0.014545454545454545}}}}}},")":{"docs":{},":":{"docs":{"alg/704_Binary_Search.html":{"ref":"alg/704_Binary_Search.html","tf":0.01090909090909091}}}},":":{"docs":{"alg/704_Binary_Search.html":{"ref":"alg/704_Binary_Search.html","tf":0.01090909090909091}}}}},"w":{"docs":{},"o":{"docs":{"alg/160_Intersection_of_Two_Linked_Lists.html":{"ref":"alg/160_Intersection_of_Two_Linked_Lists.html","tf":2.018181818181818},"alg/21_Merge_Two_Sorted_Lists.html":{"ref":"alg/21_Merge_Two_Sorted_Lists.html","tf":2.017857142857143},"alg/617_Merge_Two_Binary_Trees.html":{"ref":"alg/617_Merge_Two_Binary_Trees.html","tf":2.022727272727273}},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"alg/1_2Sum.html":{"ref":"alg/1_2Sum.html","tf":0.03571428571428571}}}}}}}}}}}}},"h":{"docs":{"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.012875536480686695}},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"alg/15_3Sum.html":{"ref":"alg/15_3Sum.html","tf":0.015384615384615385}}}}}}}}}}}}}},"i":{"docs":{},"r":{"docs":{},"d":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714}}}},"s":{"docs":{},")":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714}}},".":{"docs":{},"i":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714}}},"x":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.010101010101010102}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},";":{"docs":{"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.005050505050505051}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.003246753246753247}}}}}}}}}}},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.005050505050505051},"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.003246753246753247},"alg/102_Binary_Tree_Level_Order_Traversal.html":{"ref":"alg/102_Binary_Tree_Level_Order_Traversal.html","tf":0.010869565217391304}},";":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714},"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.005050505050505051},"alg/141_Linked_List_Cycle.html":{"ref":"alg/141_Linked_List_Cycle.html","tf":0.02127659574468085},"alg/234_Palindrome_Linked_List.html":{"ref":"alg/234_Palindrome_Linked_List.html","tf":0.011764705882352941},"alg/100_Same_Tree.html":{"ref":"alg/100_Same_Tree.html","tf":0.022727272727272728},"alg/101_Symmetric_Tree.html":{"ref":"alg/101_Symmetric_Tree.html","tf":0.03389830508474576}}},")":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.003246753246753247}}}}},"e":{"docs":{},"e":{"docs":{"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":2.005050505050505},"2_tree.html":{"ref":"2_tree.html","tf":10},"alg/144_Binary_Tree_Preorder_Traversal.html":{"ref":"alg/144_Binary_Tree_Preorder_Traversal.html","tf":2.0093457943925235},"alg/94_Binary_Tree_Inorder_Traversal.html":{"ref":"alg/94_Binary_Tree_Inorder_Traversal.html","tf":2.008771929824561},"alg/145_Binary_Tree_Postorder_Traversal.html":{"ref":"alg/145_Binary_Tree_Postorder_Traversal.html","tf":2.014705882352941},"alg/102_Binary_Tree_Level_Order_Traversal.html":{"ref":"alg/102_Binary_Tree_Level_Order_Traversal.html","tf":1.6775362318840579},"alg/100_Same_Tree.html":{"ref":"alg/100_Same_Tree.html","tf":3.356060606060606},"alg/101_Symmetric_Tree.html":{"ref":"alg/101_Symmetric_Tree.html","tf":3.350282485875706},"alg/226_Invert_Binary_Tree.html":{"ref":"alg/226_Invert_Binary_Tree.html","tf":2.5106382978723403},"alg/617_Merge_Two_Binary_Trees.html":{"ref":"alg/617_Merge_Two_Binary_Trees.html","tf":2.022727272727273},"alg/872_Leaf-Similar_Trees.html":{"ref":"alg/872_Leaf-Similar_Trees.html","tf":2.519230769230769},"alg/104_Maximum_Depth_of_Binary_Tree.html":{"ref":"alg/104_Maximum_Depth_of_Binary_Tree.html","tf":2.027027027027027},"alg/111_Minimum_Depth_of_Binary_Tree.html":{"ref":"alg/111_Minimum_Depth_of_Binary_Tree.html","tf":2.017543859649123},"alg/222_Count_Complete_Tree_Nodes.html":{"ref":"alg/222_Count_Complete_Tree_Nodes.html","tf":2.010869565217391}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.015151515151515152},"alg/144_Binary_Tree_Preorder_Traversal.html":{"ref":"alg/144_Binary_Tree_Preorder_Traversal.html","tf":0.009345794392523364},"alg/94_Binary_Tree_Inorder_Traversal.html":{"ref":"alg/94_Binary_Tree_Inorder_Traversal.html","tf":0.008771929824561403},"alg/102_Binary_Tree_Level_Order_Traversal.html":{"ref":"alg/102_Binary_Tree_Level_Order_Traversal.html","tf":0.010869565217391304},"alg/100_Same_Tree.html":{"ref":"alg/100_Same_Tree.html","tf":0.022727272727272728},"alg/101_Symmetric_Tree.html":{"ref":"alg/101_Symmetric_Tree.html","tf":0.01694915254237288},"alg/226_Invert_Binary_Tree.html":{"ref":"alg/226_Invert_Binary_Tree.html","tf":0.07446808510638298},"alg/617_Merge_Two_Binary_Trees.html":{"ref":"alg/617_Merge_Two_Binary_Trees.html","tf":0.045454545454545456},"alg/872_Leaf-Similar_Trees.html":{"ref":"alg/872_Leaf-Similar_Trees.html","tf":0.019230769230769232}}}}},"很":{"docs":{},"像":{"docs":{},"，":{"docs":{},"把":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"弄":{"docs":{},"成":{"docs":{},"了":{"docs":{},"两":{"docs":{},"个":{"docs":{},"点":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"左":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"相":{"docs":{},"反":{"docs":{},"。":{"docs":{"alg/101_Symmetric_Tree.html":{"ref":"alg/101_Symmetric_Tree.html","tf":0.01694915254237288}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"alg/144_Binary_Tree_Preorder_Traversal.html":{"ref":"alg/144_Binary_Tree_Preorder_Traversal.html","tf":2.0093457943925235},"alg/94_Binary_Tree_Inorder_Traversal.html":{"ref":"alg/94_Binary_Tree_Inorder_Traversal.html","tf":2.008771929824561},"alg/145_Binary_Tree_Postorder_Traversal.html":{"ref":"alg/145_Binary_Tree_Postorder_Traversal.html","tf":2.014705882352941},"alg/102_Binary_Tree_Level_Order_Traversal.html":{"ref":"alg/102_Binary_Tree_Level_Order_Traversal.html","tf":1.6775362318840579}}}}}}}},"m":{"docs":{},"p":{"docs":{"alg/234_Palindrome_Linked_List.html":{"ref":"alg/234_Palindrome_Linked_List.html","tf":0.011764705882352941},"alg/143_Reorder_List.html":{"ref":"alg/143_Reorder_List.html","tf":0.014925373134328358},"alg/147_Insertion_Sort_List.html":{"ref":"alg/147_Insertion_Sort_List.html","tf":0.023809523809523808},"alg/226_Invert_Binary_Tree.html":{"ref":"alg/226_Invert_Binary_Tree.html","tf":0.02127659574468085}},";":{"docs":{"alg/234_Palindrome_Linked_List.html":{"ref":"alg/234_Palindrome_Linked_List.html","tf":0.011764705882352941},"alg/143_Reorder_List.html":{"ref":"alg/143_Reorder_List.html","tf":0.014925373134328358},"alg/226_Invert_Binary_Tree.html":{"ref":"alg/226_Invert_Binary_Tree.html","tf":0.010638297872340425}}}}}},"{":{"3":{"docs":{},",":{"2":{"docs":{},",":{"1":{"docs":{},",":{"5":{"docs":{},",":{"6":{"docs":{},",":{"4":{"docs":{},"}":{"docs":{},",":{"docs":{"alg/215_Kth_Largest_Element_in_an_Array.html":{"ref":"alg/215_Kth_Largest_Element_in_an_Array.html","tf":0.010101010101010102}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"alg/1_2Sum.html":{"ref":"alg/1_2Sum.html","tf":0.03571428571428571},"alg/15_3Sum.html":{"ref":"alg/15_3Sum.html","tf":0.015384615384615385},"alg/18_4Sum.html":{"ref":"alg/18_4Sum.html","tf":0.013157894736842105},"alg/69_Sqrtx.html":{"ref":"alg/69_Sqrtx.html","tf":0.06060606060606061},"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.026785714285714284},"alg/169_Majority_Element.html":{"ref":"alg/169_Majority_Element.html","tf":0.09401709401709402},"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.045454545454545456},"alg/215_Kth_Largest_Element_in_an_Array.html":{"ref":"alg/215_Kth_Largest_Element_in_an_Array.html","tf":0.030303030303030304},"alg/704_Binary_Search.html":{"ref":"alg/704_Binary_Search.html","tf":0.03636363636363636},"alg/206_Reverse_Linked_List.html":{"ref":"alg/206_Reverse_Linked_List.html","tf":0.029411764705882353},"alg/24_Swap_Nodes_in_Pairs.html":{"ref":"alg/24_Swap_Nodes_in_Pairs.html","tf":0.045454545454545456},"alg/876_Middle_of_the_Linked_List.html":{"ref":"alg/876_Middle_of_the_Linked_List.html","tf":0.05714285714285714},"alg/141_Linked_List_Cycle.html":{"ref":"alg/141_Linked_List_Cycle.html","tf":0.06382978723404255},"alg/142_Linked_List_Cycle_II.html":{"ref":"alg/142_Linked_List_Cycle_II.html","tf":0.07017543859649122},"alg/160_Intersection_of_Two_Linked_Lists.html":{"ref":"alg/160_Intersection_of_Two_Linked_Lists.html","tf":0.03636363636363636},"alg/237_Delete_Node_in_a_Linked_List.html":{"ref":"alg/237_Delete_Node_in_a_Linked_List.html","tf":0.05555555555555555},"alg/203_Remove_Linked_List_Elements.html":{"ref":"alg/203_Remove_Linked_List_Elements.html","tf":0.05714285714285714},"alg/83_Remove_Duplicates_from_Sorted_List.html":{"ref":"alg/83_Remove_Duplicates_from_Sorted_List.html","tf":0.05970149253731343},"alg/82_Remove_Duplicates_from_Sorted_List_II.html":{"ref":"alg/82_Remove_Duplicates_from_Sorted_List_II.html","tf":0.07692307692307693},"alg/86_Partition_List.html":{"ref":"alg/86_Partition_List.html","tf":0.042105263157894736},"alg/234_Palindrome_Linked_List.html":{"ref":"alg/234_Palindrome_Linked_List.html","tf":0.058823529411764705},"alg/143_Reorder_List.html":{"ref":"alg/143_Reorder_List.html","tf":0.029850746268656716},"alg/147_Insertion_Sort_List.html":{"ref":"alg/147_Insertion_Sort_List.html","tf":0.047619047619047616},"alg/328_Odd_Even_Linked_List.html":{"ref":"alg/328_Odd_Even_Linked_List.html","tf":0.03636363636363636},"alg/148_Sort_List.html":{"ref":"alg/148_Sort_List.html","tf":0.047058823529411764},"alg/21_Merge_Two_Sorted_Lists.html":{"ref":"alg/21_Merge_Two_Sorted_Lists.html","tf":0.05357142857142857},"alg/23_Merge_k_Sorted_Lists.html":{"ref":"alg/23_Merge_k_Sorted_Lists.html","tf":0.05555555555555555},"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.01948051948051948},"alg/817_Linked_List_Components.html":{"ref":"alg/817_Linked_List_Components.html","tf":0.05},"alg/19_Remove_Nth_Node_From_End_of_List.html":{"ref":"alg/19_Remove_Nth_Node_From_End_of_List.html","tf":0.018867924528301886},"alg/144_Binary_Tree_Preorder_Traversal.html":{"ref":"alg/144_Binary_Tree_Preorder_Traversal.html","tf":0.04672897196261682},"alg/94_Binary_Tree_Inorder_Traversal.html":{"ref":"alg/94_Binary_Tree_Inorder_Traversal.html","tf":0.05263157894736842},"alg/145_Binary_Tree_Postorder_Traversal.html":{"ref":"alg/145_Binary_Tree_Postorder_Traversal.html","tf":0.04411764705882353},"alg/102_Binary_Tree_Level_Order_Traversal.html":{"ref":"alg/102_Binary_Tree_Level_Order_Traversal.html","tf":0.021739130434782608},"alg/100_Same_Tree.html":{"ref":"alg/100_Same_Tree.html","tf":0.06818181818181818},"alg/101_Symmetric_Tree.html":{"ref":"alg/101_Symmetric_Tree.html","tf":0.06779661016949153},"alg/226_Invert_Binary_Tree.html":{"ref":"alg/226_Invert_Binary_Tree.html","tf":0.031914893617021274},"alg/617_Merge_Two_Binary_Trees.html":{"ref":"alg/617_Merge_Two_Binary_Trees.html","tf":0.045454545454545456},"alg/872_Leaf-Similar_Trees.html":{"ref":"alg/872_Leaf-Similar_Trees.html","tf":0.038461538461538464},"alg/104_Maximum_Depth_of_Binary_Tree.html":{"ref":"alg/104_Maximum_Depth_of_Binary_Tree.html","tf":0.02702702702702703},"alg/111_Minimum_Depth_of_Binary_Tree.html":{"ref":"alg/111_Minimum_Depth_of_Binary_Tree.html","tf":0.017543859649122806},"alg/112_Path_Sum.html":{"ref":"alg/112_Path_Sum.html","tf":0.02857142857142857},"alg/222_Count_Complete_Tree_Nodes.html":{"ref":"alg/222_Count_Complete_Tree_Nodes.html","tf":0.05434782608695652}},"(":{"0":{"docs":{},",":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.008928571428571428}}}},"1":{"docs":{},",":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.017857142857142856}}}},"docs":{}},"}":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.003246753246753247}}}},"}":{"docs":{"alg/1_2Sum.html":{"ref":"alg/1_2Sum.html","tf":0.10714285714285714},"alg/69_Sqrtx.html":{"ref":"alg/69_Sqrtx.html","tf":0.08080808080808081},"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.017857142857142856},"alg/169_Majority_Element.html":{"ref":"alg/169_Majority_Element.html","tf":0.09401709401709402},"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.045454545454545456},"alg/215_Kth_Largest_Element_in_an_Array.html":{"ref":"alg/215_Kth_Largest_Element_in_an_Array.html","tf":0.030303030303030304},"alg/704_Binary_Search.html":{"ref":"alg/704_Binary_Search.html","tf":0.03636363636363636},"alg/206_Reverse_Linked_List.html":{"ref":"alg/206_Reverse_Linked_List.html","tf":0.029411764705882353},"alg/24_Swap_Nodes_in_Pairs.html":{"ref":"alg/24_Swap_Nodes_in_Pairs.html","tf":0.045454545454545456},"alg/876_Middle_of_the_Linked_List.html":{"ref":"alg/876_Middle_of_the_Linked_List.html","tf":0.05714285714285714},"alg/141_Linked_List_Cycle.html":{"ref":"alg/141_Linked_List_Cycle.html","tf":0.06382978723404255},"alg/142_Linked_List_Cycle_II.html":{"ref":"alg/142_Linked_List_Cycle_II.html","tf":0.07017543859649122},"alg/160_Intersection_of_Two_Linked_Lists.html":{"ref":"alg/160_Intersection_of_Two_Linked_Lists.html","tf":0.03636363636363636},"alg/237_Delete_Node_in_a_Linked_List.html":{"ref":"alg/237_Delete_Node_in_a_Linked_List.html","tf":0.05555555555555555},"alg/203_Remove_Linked_List_Elements.html":{"ref":"alg/203_Remove_Linked_List_Elements.html","tf":0.05714285714285714},"alg/83_Remove_Duplicates_from_Sorted_List.html":{"ref":"alg/83_Remove_Duplicates_from_Sorted_List.html","tf":0.05970149253731343},"alg/82_Remove_Duplicates_from_Sorted_List_II.html":{"ref":"alg/82_Remove_Duplicates_from_Sorted_List_II.html","tf":0.07692307692307693},"alg/234_Palindrome_Linked_List.html":{"ref":"alg/234_Palindrome_Linked_List.html","tf":0.058823529411764705},"alg/143_Reorder_List.html":{"ref":"alg/143_Reorder_List.html","tf":0.029850746268656716},"alg/328_Odd_Even_Linked_List.html":{"ref":"alg/328_Odd_Even_Linked_List.html","tf":0.03636363636363636},"alg/148_Sort_List.html":{"ref":"alg/148_Sort_List.html","tf":0.023529411764705882},"alg/23_Merge_k_Sorted_Lists.html":{"ref":"alg/23_Merge_k_Sorted_Lists.html","tf":0.034722222222222224},"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.016233766233766232},"alg/19_Remove_Nth_Node_From_End_of_List.html":{"ref":"alg/19_Remove_Nth_Node_From_End_of_List.html","tf":0.009433962264150943},"alg/144_Binary_Tree_Preorder_Traversal.html":{"ref":"alg/144_Binary_Tree_Preorder_Traversal.html","tf":0.04672897196261682},"alg/94_Binary_Tree_Inorder_Traversal.html":{"ref":"alg/94_Binary_Tree_Inorder_Traversal.html","tf":0.05263157894736842},"alg/145_Binary_Tree_Postorder_Traversal.html":{"ref":"alg/145_Binary_Tree_Postorder_Traversal.html","tf":0.04411764705882353},"alg/100_Same_Tree.html":{"ref":"alg/100_Same_Tree.html","tf":0.06818181818181818},"alg/101_Symmetric_Tree.html":{"ref":"alg/101_Symmetric_Tree.html","tf":0.06779661016949153},"alg/226_Invert_Binary_Tree.html":{"ref":"alg/226_Invert_Binary_Tree.html","tf":0.031914893617021274},"alg/617_Merge_Two_Binary_Trees.html":{"ref":"alg/617_Merge_Two_Binary_Trees.html","tf":0.045454545454545456},"alg/872_Leaf-Similar_Trees.html":{"ref":"alg/872_Leaf-Similar_Trees.html","tf":0.038461538461538464},"alg/104_Maximum_Depth_of_Binary_Tree.html":{"ref":"alg/104_Maximum_Depth_of_Binary_Tree.html","tf":0.02702702702702703},"alg/111_Minimum_Depth_of_Binary_Tree.html":{"ref":"alg/111_Minimum_Depth_of_Binary_Tree.html","tf":0.017543859649122806},"alg/112_Path_Sum.html":{"ref":"alg/112_Path_Sum.html","tf":0.02857142857142857},"alg/222_Count_Complete_Tree_Nodes.html":{"ref":"alg/222_Count_Complete_Tree_Nodes.html","tf":0.05434782608695652}},";":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.003246753246753247}}}},"字":{"docs":{},"典":{"docs":{},"法":{"docs":{},"，":{"docs":{},"将":{"docs":{},"原":{"docs":{},"字":{"docs":{},"典":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"和":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"转":{"docs":{},"换":{"docs":{},"，":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"一":{"docs":{},"次":{"docs":{},"数":{"docs":{},"组":{"docs":{},"并":{"docs":{},"返":{"docs":{},"回":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"和":{"docs":{},"当":{"docs":{},"前":{"docs":{},"数":{"docs":{},"字":{"docs":{},"的":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"。":{"docs":{"alg/1_2Sum.html":{"ref":"alg/1_2Sum.html","tf":0.03571428571428571}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"!":{"docs":{},"!":{"docs":{},"!":{"docs":{"alg/15_3Sum.html":{"ref":"alg/15_3Sum.html","tf":0.015384615384615385}}}},"=":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714},"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.015151515151515152},"alg/24_Swap_Nodes_in_Pairs.html":{"ref":"alg/24_Swap_Nodes_in_Pairs.html","tf":0.022727272727272728},"alg/876_Middle_of_the_Linked_List.html":{"ref":"alg/876_Middle_of_the_Linked_List.html","tf":0.05714285714285714},"alg/141_Linked_List_Cycle.html":{"ref":"alg/141_Linked_List_Cycle.html","tf":0.0425531914893617},"alg/142_Linked_List_Cycle_II.html":{"ref":"alg/142_Linked_List_Cycle_II.html","tf":0.05263157894736842},"alg/160_Intersection_of_Two_Linked_Lists.html":{"ref":"alg/160_Intersection_of_Two_Linked_Lists.html","tf":0.01818181818181818},"alg/203_Remove_Linked_List_Elements.html":{"ref":"alg/203_Remove_Linked_List_Elements.html","tf":0.04285714285714286},"alg/83_Remove_Duplicates_from_Sorted_List.html":{"ref":"alg/83_Remove_Duplicates_from_Sorted_List.html","tf":0.029850746268656716},"alg/82_Remove_Duplicates_from_Sorted_List_II.html":{"ref":"alg/82_Remove_Duplicates_from_Sorted_List_II.html","tf":0.03076923076923077},"alg/86_Partition_List.html":{"ref":"alg/86_Partition_List.html","tf":0.021052631578947368},"alg/234_Palindrome_Linked_List.html":{"ref":"alg/234_Palindrome_Linked_List.html","tf":0.058823529411764705},"alg/143_Reorder_List.html":{"ref":"alg/143_Reorder_List.html","tf":0.03731343283582089},"alg/147_Insertion_Sort_List.html":{"ref":"alg/147_Insertion_Sort_List.html","tf":0.047619047619047616},"alg/328_Odd_Even_Linked_List.html":{"ref":"alg/328_Odd_Even_Linked_List.html","tf":0.03636363636363636},"alg/148_Sort_List.html":{"ref":"alg/148_Sort_List.html","tf":0.047058823529411764},"alg/21_Merge_Two_Sorted_Lists.html":{"ref":"alg/21_Merge_Two_Sorted_Lists.html","tf":0.05357142857142857},"alg/23_Merge_k_Sorted_Lists.html":{"ref":"alg/23_Merge_k_Sorted_Lists.html","tf":0.006944444444444444},"alg/19_Remove_Nth_Node_From_End_of_List.html":{"ref":"alg/19_Remove_Nth_Node_From_End_of_List.html","tf":0.009433962264150943},"alg/144_Binary_Tree_Preorder_Traversal.html":{"ref":"alg/144_Binary_Tree_Preorder_Traversal.html","tf":0.028037383177570093},"alg/94_Binary_Tree_Inorder_Traversal.html":{"ref":"alg/94_Binary_Tree_Inorder_Traversal.html","tf":0.017543859649122806},"alg/226_Invert_Binary_Tree.html":{"ref":"alg/226_Invert_Binary_Tree.html","tf":0.02127659574468085}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"alg/94_Binary_Tree_Inorder_Traversal.html":{"ref":"alg/94_Binary_Tree_Inorder_Traversal.html","tf":0.008771929824561403}}}}}}}}}}}}}}}}}}},"&":{"docs":{},"&":{"docs":{"alg/15_3Sum.html":{"ref":"alg/15_3Sum.html","tf":0.03076923076923077},"alg/18_4Sum.html":{"ref":"alg/18_4Sum.html","tf":0.02631578947368421},"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714},"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.005050505050505051},"alg/24_Swap_Nodes_in_Pairs.html":{"ref":"alg/24_Swap_Nodes_in_Pairs.html","tf":0.011363636363636364},"alg/876_Middle_of_the_Linked_List.html":{"ref":"alg/876_Middle_of_the_Linked_List.html","tf":0.02857142857142857},"alg/141_Linked_List_Cycle.html":{"ref":"alg/141_Linked_List_Cycle.html","tf":0.02127659574468085},"alg/142_Linked_List_Cycle_II.html":{"ref":"alg/142_Linked_List_Cycle_II.html","tf":0.017543859649122806},"alg/203_Remove_Linked_List_Elements.html":{"ref":"alg/203_Remove_Linked_List_Elements.html","tf":0.02142857142857143},"alg/83_Remove_Duplicates_from_Sorted_List.html":{"ref":"alg/83_Remove_Duplicates_from_Sorted_List.html","tf":0.014925373134328358},"alg/82_Remove_Duplicates_from_Sorted_List_II.html":{"ref":"alg/82_Remove_Duplicates_from_Sorted_List_II.html","tf":0.015384615384615385},"alg/234_Palindrome_Linked_List.html":{"ref":"alg/234_Palindrome_Linked_List.html","tf":0.011764705882352941},"alg/143_Reorder_List.html":{"ref":"alg/143_Reorder_List.html","tf":0.014925373134328358},"alg/147_Insertion_Sort_List.html":{"ref":"alg/147_Insertion_Sort_List.html","tf":0.023809523809523808},"alg/328_Odd_Even_Linked_List.html":{"ref":"alg/328_Odd_Even_Linked_List.html","tf":0.01818181818181818},"alg/148_Sort_List.html":{"ref":"alg/148_Sort_List.html","tf":0.023529411764705882},"alg/21_Merge_Two_Sorted_Lists.html":{"ref":"alg/21_Merge_Two_Sorted_Lists.html","tf":0.017857142857142856},"alg/100_Same_Tree.html":{"ref":"alg/100_Same_Tree.html","tf":0.06818181818181818},"alg/101_Symmetric_Tree.html":{"ref":"alg/101_Symmetric_Tree.html","tf":0.05084745762711865},"alg/872_Leaf-Similar_Trees.html":{"ref":"alg/872_Leaf-Similar_Trees.html","tf":0.019230769230769232},"alg/112_Path_Sum.html":{"ref":"alg/112_Path_Sum.html","tf":0.02857142857142857}}}},"+":{"1":{"docs":{"alg/104_Maximum_Depth_of_Binary_Tree.html":{"ref":"alg/104_Maximum_Depth_of_Binary_Tree.html","tf":0.05405405405405406}}},"docs":{"alg/15_3Sum.html":{"ref":"alg/15_3Sum.html","tf":0.015384615384615385},"alg/18_4Sum.html":{"ref":"alg/18_4Sum.html","tf":0.039473684210526314},"alg/69_Sqrtx.html":{"ref":"alg/69_Sqrtx.html","tf":0.020202020202020204},"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.017857142857142856},"alg/169_Majority_Element.html":{"ref":"alg/169_Majority_Element.html","tf":0.03418803418803419},"alg/704_Binary_Search.html":{"ref":"alg/704_Binary_Search.html","tf":0.014545454545454545},"alg/23_Merge_k_Sorted_Lists.html":{"ref":"alg/23_Merge_k_Sorted_Lists.html","tf":0.006944444444444444},"alg/19_Remove_Nth_Node_From_End_of_List.html":{"ref":"alg/19_Remove_Nth_Node_From_End_of_List.html","tf":0.009433962264150943},"alg/104_Maximum_Depth_of_Binary_Tree.html":{"ref":"alg/104_Maximum_Depth_of_Binary_Tree.html","tf":0.05405405405405406},"alg/111_Minimum_Depth_of_Binary_Tree.html":{"ref":"alg/111_Minimum_Depth_of_Binary_Tree.html","tf":0.08771929824561403},"alg/222_Count_Complete_Tree_Nodes.html":{"ref":"alg/222_Count_Complete_Tree_Nodes.html","tf":0.05434782608695652}},"=":{"docs":{"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.004291845493562232},"alg/617_Merge_Two_Binary_Trees.html":{"ref":"alg/617_Merge_Two_Binary_Trees.html","tf":0.022727272727272728}}}},"/":{"docs":{"alg/69_Sqrtx.html":{"ref":"alg/69_Sqrtx.html","tf":0.04040404040404041},"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714},"alg/169_Majority_Element.html":{"ref":"alg/169_Majority_Element.html","tf":0.017094017094017096},"alg/704_Binary_Search.html":{"ref":"alg/704_Binary_Search.html","tf":0.007272727272727273},"alg/104_Maximum_Depth_of_Binary_Tree.html":{"ref":"alg/104_Maximum_Depth_of_Binary_Tree.html","tf":0.05405405405405406}},"/":{"docs":{"alg/15_3Sum.html":{"ref":"alg/15_3Sum.html","tf":0.03076923076923077},"alg/18_4Sum.html":{"ref":"alg/18_4Sum.html","tf":0.039473684210526314},"alg/141_Linked_List_Cycle.html":{"ref":"alg/141_Linked_List_Cycle.html","tf":0.02127659574468085},"alg/203_Remove_Linked_List_Elements.html":{"ref":"alg/203_Remove_Linked_List_Elements.html","tf":0.02142857142857143},"alg/234_Palindrome_Linked_List.html":{"ref":"alg/234_Palindrome_Linked_List.html","tf":0.03529411764705882},"alg/143_Reorder_List.html":{"ref":"alg/143_Reorder_List.html","tf":0.03731343283582089},"alg/147_Insertion_Sort_List.html":{"ref":"alg/147_Insertion_Sort_List.html","tf":0.023809523809523808},"alg/328_Odd_Even_Linked_List.html":{"ref":"alg/328_Odd_Even_Linked_List.html","tf":0.01818181818181818},"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.00974025974025974},"alg/19_Remove_Nth_Node_From_End_of_List.html":{"ref":"alg/19_Remove_Nth_Node_From_End_of_List.html","tf":0.018867924528301886},"alg/144_Binary_Tree_Preorder_Traversal.html":{"ref":"alg/144_Binary_Tree_Preorder_Traversal.html","tf":0.018691588785046728},"alg/94_Binary_Tree_Inorder_Traversal.html":{"ref":"alg/94_Binary_Tree_Inorder_Traversal.html","tf":0.017543859649122806},"alg/145_Binary_Tree_Postorder_Traversal.html":{"ref":"alg/145_Binary_Tree_Postorder_Traversal.html","tf":0.029411764705882353}}},"*":{"docs":{},"*":{"docs":{"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.010101010101010102}}}}},">":{"2":{"docs":{"alg/86_Partition_List.html":{"ref":"alg/86_Partition_List.html","tf":0.05263157894736842},"alg/143_Reorder_List.html":{"ref":"alg/143_Reorder_List.html","tf":0.014925373134328358}},",":{"docs":{"alg/86_Partition_List.html":{"ref":"alg/86_Partition_List.html","tf":0.010526315789473684}},"而":{"docs":{},"r":{"docs":{},"h":{"docs":{},"=":{"4":{"docs":{"alg/86_Partition_List.html":{"ref":"alg/86_Partition_List.html","tf":0.010526315789473684}}},"docs":{}}}}}},".":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"的":{"docs":{},"无":{"docs":{},"限":{"docs":{},"循":{"docs":{},"环":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"需":{"docs":{},"要":{"docs":{},"删":{"docs":{},"除":{"docs":{},"r":{"docs":{},"h":{"docs":{},"最":{"docs":{},"后":{"docs":{},"这":{"docs":{},"个":{"2":{"docs":{},"。":{"docs":{},"（":{"docs":{},"为":{"docs":{},"什":{"docs":{},"么":{"docs":{},"会":{"docs":{},"有":{"docs":{},"这":{"docs":{},"个":{"2":{"docs":{},"呢":{"docs":{},"是":{"docs":{},"因":{"docs":{},"为":{"docs":{},"在":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"次":{"docs":{},"加":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"没":{"docs":{},"有":{"docs":{},"新":{"docs":{},"的":{"docs":{},"值":{"docs":{},"了":{"docs":{},"，":{"docs":{},"s":{"docs":{},"o":{"docs":{},"这":{"docs":{},"个":{"2":{"docs":{},"没":{"docs":{},"有":{"docs":{},"被":{"docs":{},"覆":{"docs":{},"盖":{"docs":{},"。":{"docs":{"alg/86_Partition_List.html":{"ref":"alg/86_Partition_List.html","tf":0.010526315789473684}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}},"。":{"docs":{},"r":{"docs":{},"h":{"docs":{},"最":{"docs":{},"后":{"docs":{},"这":{"docs":{},"个":{"2":{"docs":{},"和":{"docs":{},"l":{"docs":{},"h":{"docs":{},"最":{"docs":{},"后":{"docs":{},"这":{"docs":{},"个":{"2":{"docs":{},"是":{"docs":{},"一":{"docs":{},"样":{"docs":{},"的":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"在":{"docs":{},"运":{"docs":{},"行":{"docs":{},"l":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"alg/86_Partition_List.html":{"ref":"alg/86_Partition_List.html","tf":0.010526315789473684}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}},"docs":{}}}}}}}}},"3":{"docs":{"alg/86_Partition_List.html":{"ref":"alg/86_Partition_List.html","tf":0.042105263157894736},"alg/143_Reorder_List.html":{"ref":"alg/143_Reorder_List.html","tf":0.014925373134328358}}},"4":{"docs":{"alg/86_Partition_List.html":{"ref":"alg/86_Partition_List.html","tf":0.031578947368421054}},";":{"docs":{"alg/143_Reorder_List.html":{"ref":"alg/143_Reorder_List.html","tf":0.014925373134328358}}}},"5":{"docs":{"alg/86_Partition_List.html":{"ref":"alg/86_Partition_List.html","tf":0.042105263157894736}}},"6":{"docs":{"alg/143_Reorder_List.html":{"ref":"alg/143_Reorder_List.html","tf":0.014925373134328358}}},"7":{"docs":{"alg/143_Reorder_List.html":{"ref":"alg/143_Reorder_List.html","tf":0.007462686567164179}}},"docs":{"alg/15_3Sum.html":{"ref":"alg/15_3Sum.html","tf":0.015384615384615385},"alg/69_Sqrtx.html":{"ref":"alg/69_Sqrtx.html","tf":0.020202020202020204},"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714},"alg/169_Majority_Element.html":{"ref":"alg/169_Majority_Element.html","tf":0.008547008547008548},"alg/215_Kth_Largest_Element_in_an_Array.html":{"ref":"alg/215_Kth_Largest_Element_in_an_Array.html","tf":0.010101010101010102},"alg/704_Binary_Search.html":{"ref":"alg/704_Binary_Search.html","tf":0.01090909090909091},"alg/143_Reorder_List.html":{"ref":"alg/143_Reorder_List.html","tf":0.029850746268656716},"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.00974025974025974}},">":{"docs":{"alg/69_Sqrtx.html":{"ref":"alg/69_Sqrtx.html","tf":0.04040404040404041},"alg/23_Merge_k_Sorted_Lists.html":{"ref":"alg/23_Merge_k_Sorted_Lists.html","tf":0.006944444444444444}}},"=":{"docs":{"alg/704_Binary_Search.html":{"ref":"alg/704_Binary_Search.html","tf":0.0036363636363636364},"alg/23_Merge_k_Sorted_Lists.html":{"ref":"alg/23_Merge_k_Sorted_Lists.html","tf":0.006944444444444444}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"alg/215_Kth_Largest_Element_in_an_Array.html":{"ref":"alg/215_Kth_Largest_Element_in_an_Array.html","tf":2.01010101010101}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"alg/15_3Sum.html":{"ref":"alg/15_3Sum.html","tf":0.015384615384615385},"alg/18_4Sum.html":{"ref":"alg/18_4Sum.html","tf":0.013157894736842105},"alg/144_Binary_Tree_Preorder_Traversal.html":{"ref":"alg/144_Binary_Tree_Preorder_Traversal.html","tf":0.018691588785046728},"alg/94_Binary_Tree_Inorder_Traversal.html":{"ref":"alg/94_Binary_Tree_Inorder_Traversal.html","tf":0.008771929824561403},"alg/145_Binary_Tree_Postorder_Traversal.html":{"ref":"alg/145_Binary_Tree_Postorder_Traversal.html","tf":0.014705882352941176},"alg/872_Leaf-Similar_Trees.html":{"ref":"alg/872_Leaf-Similar_Trees.html","tf":0.019230769230769232}}},",":{"docs":{"alg/872_Leaf-Similar_Trees.html":{"ref":"alg/872_Leaf-Similar_Trees.html","tf":0.019230769230769232}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"alg/23_Merge_k_Sorted_Lists.html":{"ref":"alg/23_Merge_k_Sorted_Lists.html","tf":0.006944444444444444}}}}}}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"alg/94_Binary_Tree_Inorder_Traversal.html":{"ref":"alg/94_Binary_Tree_Inorder_Traversal.html","tf":0.008771929824561403}}}}}}}}},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"alg/15_3Sum.html":{"ref":"alg/15_3Sum.html","tf":0.015384615384615385},"alg/18_4Sum.html":{"ref":"alg/18_4Sum.html","tf":0.013157894736842105},"alg/169_Majority_Element.html":{"ref":"alg/169_Majority_Element.html","tf":0.008547008547008548}}}}}}}}}}}}}}}}}}},",":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714}}},";":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714}}},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{"alg/169_Majority_Element.html":{"ref":"alg/169_Majority_Element.html","tf":0.017094017094017096}}}}}}}}}},"[":{"docs":{},"m":{"docs":{},"]":{"docs":{"alg/704_Binary_Search.html":{"ref":"alg/704_Binary_Search.html","tf":0.0036363636363636364}}}}},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.003246753246753247}}}}}}},"d":{"docs":{},"d":{"docs":{"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.008583690987124463}},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},",":{"docs":{"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.004291845493562232}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},",":{"docs":{"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.004291845493562232}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},",":{"docs":{"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.004291845493562232}}}}}}}}}}}}}}}},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.008583690987124463}}}}}}}},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"alg/15_3Sum.html":{"ref":"alg/15_3Sum.html","tf":0.015384615384615385},"alg/18_4Sum.html":{"ref":"alg/18_4Sum.html","tf":0.013157894736842105},"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":2.005050505050505},"alg/704_Binary_Search.html":{"ref":"alg/704_Binary_Search.html","tf":3.3369696969696965},"alg/144_Binary_Tree_Preorder_Traversal.html":{"ref":"alg/144_Binary_Tree_Preorder_Traversal.html","tf":2.0093457943925235},"alg/94_Binary_Tree_Inorder_Traversal.html":{"ref":"alg/94_Binary_Tree_Inorder_Traversal.html","tf":2.008771929824561},"alg/145_Binary_Tree_Postorder_Traversal.html":{"ref":"alg/145_Binary_Tree_Postorder_Traversal.html","tf":2.014705882352941},"alg/102_Binary_Tree_Level_Order_Traversal.html":{"ref":"alg/102_Binary_Tree_Level_Order_Traversal.html","tf":1.6775362318840579},"alg/226_Invert_Binary_Tree.html":{"ref":"alg/226_Invert_Binary_Tree.html","tf":2.5106382978723403},"alg/617_Merge_Two_Binary_Trees.html":{"ref":"alg/617_Merge_Two_Binary_Trees.html","tf":2.022727272727273},"alg/104_Maximum_Depth_of_Binary_Tree.html":{"ref":"alg/104_Maximum_Depth_of_Binary_Tree.html","tf":2.027027027027027},"alg/111_Minimum_Depth_of_Binary_Tree.html":{"ref":"alg/111_Minimum_Depth_of_Binary_Tree.html","tf":2.017543859649123}}}}}}},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"。":{"docs":{"alg/69_Sqrtx.html":{"ref":"alg/69_Sqrtx.html","tf":0.010101010101010102}}},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"alg/704_Binary_Search.html":{"ref":"alg/704_Binary_Search.html","tf":0.0036363636363636364}}}}}}}},"o":{"docs":{},"l":{"docs":{"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.005050505050505051}},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714},"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.005050505050505051},"alg/141_Linked_List_Cycle.html":{"ref":"alg/141_Linked_List_Cycle.html","tf":0.02127659574468085},"alg/234_Palindrome_Linked_List.html":{"ref":"alg/234_Palindrome_Linked_List.html","tf":0.011764705882352941},"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.003246753246753247},"alg/100_Same_Tree.html":{"ref":"alg/100_Same_Tree.html","tf":0.022727272727272728},"alg/101_Symmetric_Tree.html":{"ref":"alg/101_Symmetric_Tree.html","tf":0.03389830508474576},"alg/872_Leaf-Similar_Trees.html":{"ref":"alg/872_Leaf-Similar_Trees.html","tf":0.019230769230769232},"alg/112_Path_Sum.html":{"ref":"alg/112_Path_Sum.html","tf":0.02857142857142857}}}}}}}},")":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714}}},";":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714}}},"s":{"1":{"docs":{},"(":{"docs":{},"a":{"docs":{},",":{"docs":{"alg/704_Binary_Search.html":{"ref":"alg/704_Binary_Search.html","tf":0.0036363636363636364}}}}}},"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.005050505050505051}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},")":{"docs":{},":":{"docs":{"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.005050505050505051}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.005050505050505051}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"a":{"docs":{},",":{"docs":{"alg/704_Binary_Search.html":{"ref":"alg/704_Binary_Search.html","tf":0.0036363636363636364}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"alg/704_Binary_Search.html":{"ref":"alg/704_Binary_Search.html","tf":0.01090909090909091}}}}}}}}},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"alg/215_Kth_Largest_Element_in_an_Array.html":{"ref":"alg/215_Kth_Largest_Element_in_an_Array.html","tf":0.06060606060606061},"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.008583690987124463}}}}}},"f":{"docs":{},"s":{"docs":{},":":{"docs":{"alg/226_Invert_Binary_Tree.html":{"ref":"alg/226_Invert_Binary_Tree.html","tf":0.010638297872340425}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{},"e":{"docs":{},";":{"docs":{"alg/15_3Sum.html":{"ref":"alg/15_3Sum.html","tf":0.03076923076923077},"alg/18_4Sum.html":{"ref":"alg/18_4Sum.html","tf":0.02631578947368421}}}}}}}},"c":{"docs":{},"i":{"docs":{},"s":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714}}}},"a":{"docs":{},"t":{"docs":{"alg/328_Odd_Even_Linked_List.html":{"ref":"alg/328_Odd_Even_Linked_List.html","tf":0.01818181818181818}}}}}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"alg/169_Majority_Element.html":{"ref":"alg/169_Majority_Element.html","tf":0.017094017094017096},"alg/222_Count_Complete_Tree_Nodes.html":{"ref":"alg/222_Count_Complete_Tree_Nodes.html","tf":2.010869565217391}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"alg/169_Majority_Element.html":{"ref":"alg/169_Majority_Element.html","tf":0.017094017094017096}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{"alg/222_Count_Complete_Tree_Nodes.html":{"ref":"alg/222_Count_Complete_Tree_Nodes.html","tf":0.010869565217391304}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"alg/222_Count_Complete_Tree_Nodes.html":{"ref":"alg/222_Count_Complete_Tree_Nodes.html","tf":0.010869565217391304}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"alg/222_Count_Complete_Tree_Nodes.html":{"ref":"alg/222_Count_Complete_Tree_Nodes.html","tf":0.021739130434782608}}}}}}}}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.003246753246753247}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"alg/215_Kth_Largest_Element_in_an_Array.html":{"ref":"alg/215_Kth_Largest_Element_in_an_Array.html","tf":0.010101010101010102}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"alg/234_Palindrome_Linked_List.html":{"ref":"alg/234_Palindrome_Linked_List.html","tf":0.011764705882352941}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"alg/23_Merge_k_Sorted_Lists.html":{"ref":"alg/23_Merge_k_Sorted_Lists.html","tf":0.006944444444444444}}}}}}}},"e":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"alg/23_Merge_k_Sorted_Lists.html":{"ref":"alg/23_Merge_k_Sorted_Lists.html","tf":0.006944444444444444}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{"alg/817_Linked_List_Components.html":{"ref":"alg/817_Linked_List_Components.html","tf":2.55}}}},"u":{"docs":{},"t":{"docs":{"alg/19_Remove_Nth_Node_From_End_of_List.html":{"ref":"alg/19_Remove_Nth_Node_From_End_of_List.html","tf":0.009433962264150943}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"alg/222_Count_Complete_Tree_Nodes.html":{"ref":"alg/222_Count_Complete_Tree_Nodes.html","tf":2.010869565217391}}}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.008928571428571428},"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.010101010101010102},"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.012987012987012988},"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.008583690987124463}}}}}},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"alg/704_Binary_Search.html":{"ref":"alg/704_Binary_Search.html","tf":0.0036363636363636364}}}}}},"y":{"docs":{},"c":{"docs":{},"l":{"docs":{"alg/141_Linked_List_Cycle.html":{"ref":"alg/141_Linked_List_Cycle.html","tf":2.5425531914893615},"alg/142_Linked_List_Cycle_II.html":{"ref":"alg/142_Linked_List_Cycle_II.html","tf":2.017543859649123}},"e":{"docs":{},":":{"docs":{"1_linkedlist.html":{"ref":"1_linkedlist.html","tf":0.02564102564102564}}}}}}},"u":{"docs":{},"r":{"docs":{"alg/203_Remove_Linked_List_Elements.html":{"ref":"alg/203_Remove_Linked_List_Elements.html","tf":0.014285714285714285},"alg/82_Remove_Duplicates_from_Sorted_List_II.html":{"ref":"alg/82_Remove_Duplicates_from_Sorted_List_II.html","tf":0.046153846153846156},"alg/143_Reorder_List.html":{"ref":"alg/143_Reorder_List.html","tf":0.014925373134328358},"alg/147_Insertion_Sort_List.html":{"ref":"alg/147_Insertion_Sort_List.html","tf":0.023809523809523808}},")":{"docs":{"alg/206_Reverse_Linked_List.html":{"ref":"alg/206_Reverse_Linked_List.html","tf":0.014705882352941176},"alg/82_Remove_Duplicates_from_Sorted_List_II.html":{"ref":"alg/82_Remove_Duplicates_from_Sorted_List_II.html","tf":0.015384615384615385}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"alg/206_Reverse_Linked_List.html":{"ref":"alg/206_Reverse_Linked_List.html","tf":0.014705882352941176},"alg/203_Remove_Linked_List_Elements.html":{"ref":"alg/203_Remove_Linked_List_Elements.html","tf":0.014285714285714285},"alg/143_Reorder_List.html":{"ref":"alg/143_Reorder_List.html","tf":0.007462686567164179}},";":{"docs":{"alg/206_Reverse_Linked_List.html":{"ref":"alg/206_Reverse_Linked_List.html","tf":0.014705882352941176},"alg/82_Remove_Duplicates_from_Sorted_List_II.html":{"ref":"alg/82_Remove_Duplicates_from_Sorted_List_II.html","tf":0.046153846153846156},"alg/143_Reorder_List.html":{"ref":"alg/143_Reorder_List.html","tf":0.007462686567164179},"alg/147_Insertion_Sort_List.html":{"ref":"alg/147_Insertion_Sort_List.html","tf":0.023809523809523808}}},".":{"docs":{},"v":{"docs":{"alg/82_Remove_Duplicates_from_Sorted_List_II.html":{"ref":"alg/82_Remove_Duplicates_from_Sorted_List_II.html","tf":0.015384615384615385}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"alg/82_Remove_Duplicates_from_Sorted_List_II.html":{"ref":"alg/82_Remove_Duplicates_from_Sorted_List_II.html","tf":0.015384615384615385}}}}}}},";":{"docs":{"alg/143_Reorder_List.html":{"ref":"alg/143_Reorder_List.html","tf":0.007462686567164179}}},"r":{"docs":{"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.02575107296137339}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.030042918454935622}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.004291845493562232}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.004291845493562232}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{"alg/141_Linked_List_Cycle.html":{"ref":"alg/141_Linked_List_Cycle.html","tf":0.02127659574468085},"alg/203_Remove_Linked_List_Elements.html":{"ref":"alg/203_Remove_Linked_List_Elements.html","tf":0.007142857142857143}}}},"c":{"docs":{},"h":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":3.3365800865800863}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.006493506493506494}},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},")":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.006493506493506494}},":":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.006493506493506494}}}},":":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.006493506493506494}}},";":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.00974025974025974}}}}}}}}}}},"j":{"docs":{"alg/18_4Sum.html":{"ref":"alg/18_4Sum.html","tf":0.05263157894736842}},",":{"docs":{"alg/15_3Sum.html":{"ref":"alg/15_3Sum.html","tf":0.015384615384615385}}},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.008928571428571428},"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.003246753246753247}},"用":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"做":{"docs":{},"，":{"docs":{},"注":{"docs":{},"意":{"docs":{},"判":{"docs":{},"空":{"docs":{},"不":{"docs":{},"要":{"docs":{},"直":{"docs":{},"接":{"docs":{},"像":{"docs":{},"p":{"docs":{},"y":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"n":{"docs":{},"一":{"docs":{},"样":{"docs":{},"和":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"比":{"docs":{},"较":{"docs":{},"。":{"docs":{},"。":{"docs":{"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.005050505050505051}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"k":{"docs":{"alg/23_Merge_k_Sorted_Lists.html":{"ref":"alg/23_Merge_k_Sorted_Lists.html","tf":2.0069444444444446}},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"判":{"docs":{},"断":{"docs":{},"，":{"docs":{},"i":{"docs":{},",":{"docs":{"alg/15_3Sum.html":{"ref":"alg/15_3Sum.html","tf":0.015384615384615385}}}}}}}}}},")":{"docs":{"alg/215_Kth_Largest_Element_in_an_Array.html":{"ref":"alg/215_Kth_Largest_Element_in_an_Array.html","tf":0.020202020202020204}}},"t":{"docs":{},"h":{"docs":{"alg/215_Kth_Largest_Element_in_an_Array.html":{"ref":"alg/215_Kth_Largest_Element_in_an_Array.html","tf":2.01010101010101}}}},"e":{"docs":{},"y":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.016233766233766232}},")":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.003246753246753247}},":":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.006493506493506494}}}},",":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.012987012987012988}}},":":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.012987012987012988}}}}}},"l":{"1":{"docs":{"alg/143_Reorder_List.html":{"ref":"alg/143_Reorder_List.html","tf":0.014925373134328358},"alg/21_Merge_Two_Sorted_Lists.html":{"ref":"alg/21_Merge_Two_Sorted_Lists.html","tf":0.017857142857142856},"alg/23_Merge_k_Sorted_Lists.html":{"ref":"alg/23_Merge_k_Sorted_Lists.html","tf":0.013888888888888888},"alg/19_Remove_Nth_Node_From_End_of_List.html":{"ref":"alg/19_Remove_Nth_Node_From_End_of_List.html","tf":0.018867924528301886}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"alg/143_Reorder_List.html":{"ref":"alg/143_Reorder_List.html","tf":0.007462686567164179}},";":{"docs":{"alg/143_Reorder_List.html":{"ref":"alg/143_Reorder_List.html","tf":0.014925373134328358},"alg/19_Remove_Nth_Node_From_End_of_List.html":{"ref":"alg/19_Remove_Nth_Node_From_End_of_List.html","tf":0.009433962264150943}}}}}}}},",":{"docs":{"alg/21_Merge_Two_Sorted_Lists.html":{"ref":"alg/21_Merge_Two_Sorted_Lists.html","tf":0.03571428571428571},"alg/23_Merge_k_Sorted_Lists.html":{"ref":"alg/23_Merge_k_Sorted_Lists.html","tf":0.013888888888888888}}}},"2":{"docs":{"alg/143_Reorder_List.html":{"ref":"alg/143_Reorder_List.html","tf":0.014925373134328358},"alg/21_Merge_Two_Sorted_Lists.html":{"ref":"alg/21_Merge_Two_Sorted_Lists.html","tf":0.03571428571428571},"alg/23_Merge_k_Sorted_Lists.html":{"ref":"alg/23_Merge_k_Sorted_Lists.html","tf":0.013888888888888888}},";":{"docs":{"alg/143_Reorder_List.html":{"ref":"alg/143_Reorder_List.html","tf":0.007462686567164179},"alg/21_Merge_Two_Sorted_Lists.html":{"ref":"alg/21_Merge_Two_Sorted_Lists.html","tf":0.017857142857142856},"alg/23_Merge_k_Sorted_Lists.html":{"ref":"alg/23_Merge_k_Sorted_Lists.html","tf":0.006944444444444444}}},")":{"docs":{"alg/21_Merge_Two_Sorted_Lists.html":{"ref":"alg/21_Merge_Two_Sorted_Lists.html","tf":0.03571428571428571},"alg/23_Merge_k_Sorted_Lists.html":{"ref":"alg/23_Merge_k_Sorted_Lists.html","tf":0.013888888888888888}},";":{"docs":{"alg/23_Merge_k_Sorted_Lists.html":{"ref":"alg/23_Merge_k_Sorted_Lists.html","tf":0.006944444444444444}}}}},"docs":{"alg/15_3Sum.html":{"ref":"alg/15_3Sum.html","tf":0.015384615384615385},"alg/18_4Sum.html":{"ref":"alg/18_4Sum.html","tf":0.013157894736842105},"alg/69_Sqrtx.html":{"ref":"alg/69_Sqrtx.html","tf":0.04040404040404041},"alg/704_Binary_Search.html":{"ref":"alg/704_Binary_Search.html","tf":0.04727272727272727},"alg/86_Partition_List.html":{"ref":"alg/86_Partition_List.html","tf":0.021052631578947368},"alg/148_Sort_List.html":{"ref":"alg/148_Sort_List.html","tf":0.011764705882352941}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"alg/15_3Sum.html":{"ref":"alg/15_3Sum.html","tf":0.015384615384615385},"alg/18_4Sum.html":{"ref":"alg/18_4Sum.html","tf":0.013157894736842105},"1_linkedlist.html":{"ref":"1_linkedlist.html","tf":5},"alg/206_Reverse_Linked_List.html":{"ref":"alg/206_Reverse_Linked_List.html","tf":2.514705882352941},"alg/876_Middle_of_the_Linked_List.html":{"ref":"alg/876_Middle_of_the_Linked_List.html","tf":2.5285714285714285},"alg/141_Linked_List_Cycle.html":{"ref":"alg/141_Linked_List_Cycle.html","tf":2.5425531914893615},"alg/142_Linked_List_Cycle_II.html":{"ref":"alg/142_Linked_List_Cycle_II.html","tf":2.017543859649123},"alg/160_Intersection_of_Two_Linked_Lists.html":{"ref":"alg/160_Intersection_of_Two_Linked_Lists.html","tf":2.018181818181818},"alg/237_Delete_Node_in_a_Linked_List.html":{"ref":"alg/237_Delete_Node_in_a_Linked_List.html","tf":2.0555555555555554},"alg/203_Remove_Linked_List_Elements.html":{"ref":"alg/203_Remove_Linked_List_Elements.html","tf":2.0142857142857142},"alg/83_Remove_Duplicates_from_Sorted_List.html":{"ref":"alg/83_Remove_Duplicates_from_Sorted_List.html","tf":2.014925373134328},"alg/82_Remove_Duplicates_from_Sorted_List_II.html":{"ref":"alg/82_Remove_Duplicates_from_Sorted_List_II.html","tf":1.6820512820512818},"alg/86_Partition_List.html":{"ref":"alg/86_Partition_List.html","tf":3.3438596491228068},"alg/234_Palindrome_Linked_List.html":{"ref":"alg/234_Palindrome_Linked_List.html","tf":2.511764705882353},"alg/143_Reorder_List.html":{"ref":"alg/143_Reorder_List.html","tf":3.3407960199004973},"alg/147_Insertion_Sort_List.html":{"ref":"alg/147_Insertion_Sort_List.html","tf":2.5238095238095237},"alg/328_Odd_Even_Linked_List.html":{"ref":"alg/328_Odd_Even_Linked_List.html","tf":2.018181818181818},"alg/148_Sort_List.html":{"ref":"alg/148_Sort_List.html","tf":3.345098039215686},"alg/21_Merge_Two_Sorted_Lists.html":{"ref":"alg/21_Merge_Two_Sorted_Lists.html","tf":2.017857142857143},"alg/23_Merge_k_Sorted_Lists.html":{"ref":"alg/23_Merge_k_Sorted_Lists.html","tf":2.0208333333333335},"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.006493506493506494},"alg/817_Linked_List_Components.html":{"ref":"alg/817_Linked_List_Components.html","tf":2.55},"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":2.504291845493562},"alg/19_Remove_Nth_Node_From_End_of_List.html":{"ref":"alg/19_Remove_Nth_Node_From_End_of_List.html","tf":1.6761006289308176},"alg/144_Binary_Tree_Preorder_Traversal.html":{"ref":"alg/144_Binary_Tree_Preorder_Traversal.html","tf":0.056074766355140186},"alg/94_Binary_Tree_Inorder_Traversal.html":{"ref":"alg/94_Binary_Tree_Inorder_Traversal.html","tf":0.05263157894736842},"alg/145_Binary_Tree_Postorder_Traversal.html":{"ref":"alg/145_Binary_Tree_Postorder_Traversal.html","tf":0.058823529411764705},"alg/102_Binary_Tree_Level_Order_Traversal.html":{"ref":"alg/102_Binary_Tree_Level_Order_Traversal.html","tf":0.010869565217391304},"alg/872_Leaf-Similar_Trees.html":{"ref":"alg/872_Leaf-Similar_Trees.html","tf":0.038461538461538464}},">":{"docs":{"alg/15_3Sum.html":{"ref":"alg/15_3Sum.html","tf":0.03076923076923077},"alg/18_4Sum.html":{"ref":"alg/18_4Sum.html","tf":0.02631578947368421},"alg/102_Binary_Tree_Level_Order_Traversal.html":{"ref":"alg/102_Binary_Tree_Level_Order_Traversal.html","tf":0.021739130434782608}}},"[":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"]":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.008928571428571428}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"[":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"]":{"docs":{},"]":{"docs":{"alg/102_Binary_Tree_Level_Order_Traversal.html":{"ref":"alg/102_Binary_Tree_Level_Order_Traversal.html","tf":0.010869565217391304}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"alg/206_Reverse_Linked_List.html":{"ref":"alg/206_Reverse_Linked_List.html","tf":0.08823529411764706},"alg/24_Swap_Nodes_in_Pairs.html":{"ref":"alg/24_Swap_Nodes_in_Pairs.html","tf":0.07954545454545454},"alg/876_Middle_of_the_Linked_List.html":{"ref":"alg/876_Middle_of_the_Linked_List.html","tf":0.05714285714285714},"alg/141_Linked_List_Cycle.html":{"ref":"alg/141_Linked_List_Cycle.html","tf":0.02127659574468085},"alg/142_Linked_List_Cycle_II.html":{"ref":"alg/142_Linked_List_Cycle_II.html","tf":0.03508771929824561},"alg/160_Intersection_of_Two_Linked_Lists.html":{"ref":"alg/160_Intersection_of_Two_Linked_Lists.html","tf":0.05454545454545454},"alg/203_Remove_Linked_List_Elements.html":{"ref":"alg/203_Remove_Linked_List_Elements.html","tf":0.04285714285714286},"alg/83_Remove_Duplicates_from_Sorted_List.html":{"ref":"alg/83_Remove_Duplicates_from_Sorted_List.html","tf":0.04477611940298507},"alg/82_Remove_Duplicates_from_Sorted_List_II.html":{"ref":"alg/82_Remove_Duplicates_from_Sorted_List_II.html","tf":0.06153846153846154},"alg/86_Partition_List.html":{"ref":"alg/86_Partition_List.html","tf":0.07368421052631578},"alg/234_Palindrome_Linked_List.html":{"ref":"alg/234_Palindrome_Linked_List.html","tf":0.047058823529411764},"alg/143_Reorder_List.html":{"ref":"alg/143_Reorder_List.html","tf":0.04477611940298507},"alg/147_Insertion_Sort_List.html":{"ref":"alg/147_Insertion_Sort_List.html","tf":0.09523809523809523},"alg/328_Odd_Even_Linked_List.html":{"ref":"alg/328_Odd_Even_Linked_List.html","tf":0.03636363636363636},"alg/148_Sort_List.html":{"ref":"alg/148_Sort_List.html","tf":0.08235294117647059},"alg/21_Merge_Two_Sorted_Lists.html":{"ref":"alg/21_Merge_Two_Sorted_Lists.html","tf":0.10714285714285714},"alg/23_Merge_k_Sorted_Lists.html":{"ref":"alg/23_Merge_k_Sorted_Lists.html","tf":0.06944444444444445},"alg/19_Remove_Nth_Node_From_End_of_List.html":{"ref":"alg/19_Remove_Nth_Node_From_End_of_List.html","tf":0.05660377358490566}},"e":{"docs":{},"(":{"0":{"docs":{},")":{"docs":{"alg/19_Remove_Nth_Node_From_End_of_List.html":{"ref":"alg/19_Remove_Nth_Node_From_End_of_List.html","tf":0.009433962264150943}},";":{"docs":{"alg/24_Swap_Nodes_in_Pairs.html":{"ref":"alg/24_Swap_Nodes_in_Pairs.html","tf":0.011363636363636364},"alg/203_Remove_Linked_List_Elements.html":{"ref":"alg/203_Remove_Linked_List_Elements.html","tf":0.007142857142857143},"alg/82_Remove_Duplicates_from_Sorted_List_II.html":{"ref":"alg/82_Remove_Duplicates_from_Sorted_List_II.html","tf":0.015384615384615385},"alg/86_Partition_List.html":{"ref":"alg/86_Partition_List.html","tf":0.021052631578947368},"alg/147_Insertion_Sort_List.html":{"ref":"alg/147_Insertion_Sort_List.html","tf":0.023809523809523808},"alg/148_Sort_List.html":{"ref":"alg/148_Sort_List.html","tf":0.011764705882352941},"alg/21_Merge_Two_Sorted_Lists.html":{"ref":"alg/21_Merge_Two_Sorted_Lists.html","tf":0.017857142857142856},"alg/19_Remove_Nth_Node_From_End_of_List.html":{"ref":"alg/19_Remove_Nth_Node_From_End_of_List.html","tf":0.009433962264150943}}},",":{"docs":{"alg/86_Partition_List.html":{"ref":"alg/86_Partition_List.html","tf":0.021052631578947368}}}}},"docs":{}}}}}},"升":{"docs":{},"级":{"docs":{},"版":{"docs":{"alg/24_Swap_Nodes_in_Pairs.html":{"ref":"alg/24_Swap_Nodes_in_Pairs.html","tf":0.011363636363636364}}}}},")":{"docs":{},";":{"docs":{"alg/23_Merge_k_Sorted_Lists.html":{"ref":"alg/23_Merge_k_Sorted_Lists.html","tf":0.006944444444444444}}}},"s":{"docs":{},")":{"docs":{"alg/23_Merge_k_Sorted_Lists.html":{"ref":"alg/23_Merge_k_Sorted_Lists.html","tf":0.020833333333333332}}},",":{"docs":{"alg/23_Merge_k_Sorted_Lists.html":{"ref":"alg/23_Merge_k_Sorted_Lists.html","tf":0.006944444444444444}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"alg/23_Merge_k_Sorted_Lists.html":{"ref":"alg/23_Merge_k_Sorted_Lists.html","tf":0.006944444444444444}}}}}}}}},"[":{"docs":{},"l":{"docs":{},"]":{"docs":{},";":{"docs":{"alg/23_Merge_k_Sorted_Lists.html":{"ref":"alg/23_Merge_k_Sorted_Lists.html","tf":0.006944444444444444}}}}}}},",":{"docs":{"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.008583690987124463}}},".":{"docs":{"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.02575107296137339}}}}},"n":{"docs":{},"e":{"docs":{"alg/18_4Sum.html":{"ref":"alg/18_4Sum.html","tf":0.013157894736842105},"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":2.5044642857142856}},"/":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"u":{"docs":{},"s":{"docs":{},"s":{"docs":{},"/":{"4":{"7":{"1":{"1":{"3":{"docs":{},"/":{"docs":{},"a":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714}}}}},"docs":{}},"docs":{}},"2":{"6":{"8":{"docs":{},"/":{"docs":{},"t":{"docs":{},"w":{"docs":{},"o":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}},"k":{"docs":{"1_linkedlist.html":{"ref":"1_linkedlist.html","tf":5},"alg/206_Reverse_Linked_List.html":{"ref":"alg/206_Reverse_Linked_List.html","tf":2.514705882352941},"alg/24_Swap_Nodes_in_Pairs.html":{"ref":"alg/24_Swap_Nodes_in_Pairs.html","tf":0.011363636363636364},"alg/876_Middle_of_the_Linked_List.html":{"ref":"alg/876_Middle_of_the_Linked_List.html","tf":2.5285714285714285},"alg/141_Linked_List_Cycle.html":{"ref":"alg/141_Linked_List_Cycle.html","tf":2.5425531914893615},"alg/142_Linked_List_Cycle_II.html":{"ref":"alg/142_Linked_List_Cycle_II.html","tf":2.017543859649123},"alg/160_Intersection_of_Two_Linked_Lists.html":{"ref":"alg/160_Intersection_of_Two_Linked_Lists.html","tf":2.018181818181818},"alg/237_Delete_Node_in_a_Linked_List.html":{"ref":"alg/237_Delete_Node_in_a_Linked_List.html","tf":2.0555555555555554},"alg/203_Remove_Linked_List_Elements.html":{"ref":"alg/203_Remove_Linked_List_Elements.html","tf":2.007142857142857},"alg/234_Palindrome_Linked_List.html":{"ref":"alg/234_Palindrome_Linked_List.html","tf":2.511764705882353},"alg/328_Odd_Even_Linked_List.html":{"ref":"alg/328_Odd_Even_Linked_List.html","tf":2.018181818181818},"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.006493506493506494},"alg/817_Linked_List_Components.html":{"ref":"alg/817_Linked_List_Components.html","tf":2.55},"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":2.53862660944206}},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.005050505050505051},"alg/144_Binary_Tree_Preorder_Traversal.html":{"ref":"alg/144_Binary_Tree_Preorder_Traversal.html","tf":0.009345794392523364},"alg/94_Binary_Tree_Inorder_Traversal.html":{"ref":"alg/94_Binary_Tree_Inorder_Traversal.html","tf":0.008771929824561403}},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.005050505050505051},"alg/144_Binary_Tree_Preorder_Traversal.html":{"ref":"alg/144_Binary_Tree_Preorder_Traversal.html","tf":0.009345794392523364},"alg/102_Binary_Tree_Level_Order_Traversal.html":{"ref":"alg/102_Binary_Tree_Level_Order_Traversal.html","tf":0.03260869565217391},"alg/226_Invert_Binary_Tree.html":{"ref":"alg/226_Invert_Binary_Tree.html","tf":0.010638297872340425}}}}}}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"alg/94_Binary_Tree_Inorder_Traversal.html":{"ref":"alg/94_Binary_Tree_Inorder_Traversal.html","tf":0.008771929824561403}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},",":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.003246753246753247}}}}}}}}}}}}}},"直":{"docs":{},"接":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"注":{"docs":{},"意":{"docs":{},"参":{"docs":{},"数":{"docs":{},"和":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"的":{"docs":{},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"配":{"docs":{},"置":{"docs":{},"在":{"docs":{},"t":{"docs":{},"i":{"docs":{},"j":{"docs":{},"中":{"docs":{},"也":{"docs":{},"提":{"docs":{},"到":{"docs":{},"过":{"docs":{},"，":{"docs":{},"没":{"docs":{},"有":{"docs":{},"被":{"docs":{},"访":{"docs":{},"问":{"docs":{},"过":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"会":{"docs":{},"在":{"docs":{},"列":{"docs":{},"表":{"docs":{},"的":{"docs":{},"最":{"docs":{},"前":{"docs":{},"面":{"docs":{},"。":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.003246753246753247}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"不":{"docs":{},"能":{"docs":{},"和":{"docs":{},"它":{"docs":{},"前":{"docs":{},"面":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"相":{"docs":{},"等":{"docs":{},"，":{"docs":{},"l":{"docs":{},"不":{"docs":{},"和":{"docs":{},"它":{"docs":{},"后":{"docs":{},"面":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"相":{"docs":{},"等":{"docs":{},"。":{"docs":{},"题":{"docs":{},"目":{"docs":{},"要":{"docs":{},"求":{"docs":{},"不":{"docs":{},"能":{"docs":{},"有":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{"alg/15_3Sum.html":{"ref":"alg/15_3Sum.html","tf":0.015384615384615385}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},")":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.008928571428571428}}}}}}}}},"a":{"docs":{},")":{"docs":{"alg/704_Binary_Search.html":{"ref":"alg/704_Binary_Search.html","tf":0.01090909090909091}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},")":{"docs":{"alg/704_Binary_Search.html":{"ref":"alg/704_Binary_Search.html","tf":0.01090909090909091}}}}}}}},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.004291845493562232},"alg/19_Remove_Nth_Node_From_End_of_List.html":{"ref":"alg/19_Remove_Nth_Node_From_End_of_List.html","tf":0.02830188679245283}},",":{"docs":{"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.004291845493562232}}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"alg/19_Remove_Nth_Node_From_End_of_List.html":{"ref":"alg/19_Remove_Nth_Node_From_End_of_List.html","tf":0.009433962264150943}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"alg/102_Binary_Tree_Level_Order_Traversal.html":{"ref":"alg/102_Binary_Tree_Level_Order_Traversal.html","tf":1.6775362318840579}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"alg/102_Binary_Tree_Level_Order_Traversal.html":{"ref":"alg/102_Binary_Tree_Level_Order_Traversal.html","tf":0.010869565217391304}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"alg/102_Binary_Tree_Level_Order_Traversal.html":{"ref":"alg/102_Binary_Tree_Level_Order_Traversal.html","tf":0.010869565217391304}}}}}}}}}}}}}}}}}},"f":{"docs":{},"t":{"docs":{"alg/111_Minimum_Depth_of_Binary_Tree.html":{"ref":"alg/111_Minimum_Depth_of_Binary_Tree.html","tf":0.05263157894736842}},",":{"docs":{"alg/100_Same_Tree.html":{"ref":"alg/100_Same_Tree.html","tf":0.022727272727272728},"alg/101_Symmetric_Tree.html":{"ref":"alg/101_Symmetric_Tree.html","tf":0.01694915254237288}}},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"alg/100_Same_Tree.html":{"ref":"alg/100_Same_Tree.html","tf":0.022727272727272728}}}}}},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{"alg/222_Count_Complete_Tree_Nodes.html":{"ref":"alg/222_Count_Complete_Tree_Nodes.html","tf":0.010869565217391304}},")":{"docs":{},")":{"docs":{},";":{"docs":{"alg/222_Count_Complete_Tree_Nodes.html":{"ref":"alg/222_Count_Complete_Tree_Nodes.html","tf":0.010869565217391304}}}}}}}}}}}},"a":{"docs":{},"f":{"docs":{"alg/872_Leaf-Similar_Trees.html":{"ref":"alg/872_Leaf-Similar_Trees.html","tf":2.519230769230769}},"s":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"alg/872_Leaf-Similar_Trees.html":{"ref":"alg/872_Leaf-Similar_Trees.html","tf":0.019230769230769232}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"alg/215_Kth_Largest_Element_in_an_Array.html":{"ref":"alg/215_Kth_Largest_Element_in_an_Array.html","tf":2.01010101010101}}}},"r":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.003246753246753247}}}}}},"s":{"docs":{},"t":{"docs":{"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.004291845493562232}},"_":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.006493506493506494}},"e":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.003246753246753247}}}}}}}}}}}}}}},")":{"docs":{"alg/704_Binary_Search.html":{"ref":"alg/704_Binary_Search.html","tf":0.007272727272727273}}},",":{"docs":{"alg/704_Binary_Search.html":{"ref":"alg/704_Binary_Search.html","tf":0.04363636363636364},"alg/86_Partition_List.html":{"ref":"alg/86_Partition_List.html","tf":0.021052631578947368},"alg/148_Sort_List.html":{"ref":"alg/148_Sort_List.html","tf":0.011764705882352941},"alg/23_Merge_k_Sorted_Lists.html":{"ref":"alg/23_Merge_k_Sorted_Lists.html","tf":0.013888888888888888}}},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"a":{"docs":{},",":{"docs":{"alg/704_Binary_Search.html":{"ref":"alg/704_Binary_Search.html","tf":0.0036363636363636364}}}}}}}}}}}}}}},"和":{"docs":{},"r":{"docs":{},"=":{"docs":{},"m":{"docs":{},"同":{"docs":{},"时":{"docs":{},"写":{"docs":{},"会":{"docs":{},"造":{"docs":{},"成":{"docs":{},"死":{"docs":{},"循":{"docs":{},"环":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"b":{"docs":{},"s":{"docs":{},"(":{"docs":{},"[":{"3":{"docs":{},",":{"4":{"docs":{},",":{"7":{"docs":{},",":{"9":{"docs":{},",":{"1":{"0":{"docs":{},",":{"1":{"1":{"docs":{},"]":{"docs":{},",":{"6":{"docs":{},")":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"要":{"docs":{},"在":{"docs":{},"l":{"docs":{},"=":{"docs":{},"r":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"跳":{"docs":{},"出":{"docs":{},"循":{"docs":{},"环":{"docs":{},"进":{"docs":{},"行":{"docs":{},"边":{"docs":{},"界":{"docs":{},"检":{"docs":{},"查":{"docs":{},"。":{"docs":{},"这":{"docs":{},"个":{"docs":{},"程":{"docs":{},"序":{"docs":{},"会":{"docs":{},"错":{"docs":{},"的":{"docs":{},"原":{"docs":{},"因":{"docs":{},"是":{"docs":{},"返":{"docs":{},"回":{"docs":{},"时":{"docs":{},"没":{"docs":{},"有":{"docs":{},"进":{"docs":{},"行":{"docs":{},"检":{"docs":{},"查":{"docs":{},"。":{"docs":{"alg/704_Binary_Search.html":{"ref":"alg/704_Binary_Search.html","tf":0.0036363636363636364}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}}},"没":{"docs":{},"有":{"docs":{},"对":{"docs":{},"边":{"docs":{},"界":{"docs":{},"进":{"docs":{},"行":{"docs":{},"检":{"docs":{},"查":{"docs":{},"。":{"docs":{},"如":{"docs":{},"b":{"docs":{},"s":{"1":{"docs":{},"(":{"docs":{},"[":{"3":{"docs":{},",":{"4":{"docs":{},",":{"7":{"docs":{},",":{"9":{"docs":{},",":{"1":{"0":{"docs":{},",":{"1":{"1":{"docs":{},"]":{"docs":{},",":{"1":{"1":{"docs":{},")":{"docs":{},"返":{"docs":{},"回":{"docs":{"alg/704_Binary_Search.html":{"ref":"alg/704_Binary_Search.html","tf":0.0036363636363636364}}}}}},"docs":{}},"docs":{}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}},"docs":{}}}}}}}}}}}}}},"h":{"docs":{"alg/86_Partition_List.html":{"ref":"alg/86_Partition_List.html","tf":0.021052631578947368}}},"r":{"docs":{},"u":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":3.3365800865800863}},"c":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"2":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.003246753246753247}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.003246753246753247}}}}}}},"docs":{},"(":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},")":{"docs":{},":":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.003246753246753247}}}}}}}}}}},":":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.003246753246753247}}}}}}}}}}},"s":{"1":{"docs":{"alg/24_Swap_Nodes_in_Pairs.html":{"ref":"alg/24_Swap_Nodes_in_Pairs.html","tf":0.011363636363636364}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"alg/24_Swap_Nodes_in_Pairs.html":{"ref":"alg/24_Swap_Nodes_in_Pairs.html","tf":0.011363636363636364}}}}}}},";":{"docs":{"alg/24_Swap_Nodes_in_Pairs.html":{"ref":"alg/24_Swap_Nodes_in_Pairs.html","tf":0.022727272727272728}}}},"2":{"docs":{"alg/24_Swap_Nodes_in_Pairs.html":{"ref":"alg/24_Swap_Nodes_in_Pairs.html","tf":0.011363636363636364}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"alg/24_Swap_Nodes_in_Pairs.html":{"ref":"alg/24_Swap_Nodes_in_Pairs.html","tf":0.011363636363636364}},";":{"docs":{"alg/24_Swap_Nodes_in_Pairs.html":{"ref":"alg/24_Swap_Nodes_in_Pairs.html","tf":0.011363636363636364}}}}}}}},";":{"docs":{"alg/24_Swap_Nodes_in_Pairs.html":{"ref":"alg/24_Swap_Nodes_in_Pairs.html","tf":0.011363636363636364}}}},"docs":{"alg/144_Binary_Tree_Preorder_Traversal.html":{"ref":"alg/144_Binary_Tree_Preorder_Traversal.html","tf":0.009345794392523364}},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{"alg/15_3Sum.html":{"ref":"alg/15_3Sum.html","tf":0.015384615384615385},"alg/18_4Sum.html":{"ref":"alg/18_4Sum.html","tf":0.013157894736842105},"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":2.005050505050505},"alg/704_Binary_Search.html":{"ref":"alg/704_Binary_Search.html","tf":3.3369696969696965}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"alg/704_Binary_Search.html":{"ref":"alg/704_Binary_Search.html","tf":0.007272727272727273}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714}}}}}},"l":{"docs":{},"f":{"docs":{},".":{"docs":{},"d":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.006493506493506494}},"f":{"docs":{},"s":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},",":{"docs":{"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.005050505050505051}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.005050505050505051}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},",":{"docs":{"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.005050505050505051}}}}}}}}}}}}}}}},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.006493506493506494}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"(":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"=":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},")":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.003246753246753247}}}}}}}}}}}}}}}}}}}}}},":":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.012987012987012988}}},"[":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"]":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.01948051948051948}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},".":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"]":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.003246753246753247}}}}}}}}}}}}}}}}}}}},"p":{"docs":{"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.020202020202020204}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.010101010101010102}}}}}}},":":{"docs":{"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.020202020202020204}}},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.003246753246753247}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.015151515151515152}},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},".":{"docs":{},"p":{"docs":{},")":{"docs":{"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.010101010101010102}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.005050505050505051}}}}}}}}}}}},"i":{"docs":{},"z":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.003246753246753247},"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.012875536480686695}},"e":{"docs":{},":":{"docs":{"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.012875536480686695}}}}}}},"_":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"_":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},")":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.003246753246753247}}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},")":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.003246753246753247}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},")":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.003246753246753247}}},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},")":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.006493506493506494}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.00974025974025974}},"a":{"docs":{},"c":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.00974025974025974}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.003246753246753247},"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.034334763948497854}},",":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.003246753246753247}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.006493506493506494}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.003246753246753247}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.003246753246753247},"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.004291845493562232}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.00974025974025974}},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.00974025974025974}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.004291845493562232}},"u":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.003246753246753247}}}}}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"(":{"0":{"docs":{},",":{"docs":{"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.004291845493562232}}}},"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},",":{"docs":{"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.004291845493562232}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{"alg/226_Invert_Binary_Tree.html":{"ref":"alg/226_Invert_Binary_Tree.html","tf":0.010638297872340425}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{"alg/226_Invert_Binary_Tree.html":{"ref":"alg/226_Invert_Binary_Tree.html","tf":0.010638297872340425}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{"alg/817_Linked_List_Components.html":{"ref":"alg/817_Linked_List_Components.html","tf":0.1}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"alg/15_3Sum.html":{"ref":"alg/15_3Sum.html","tf":0.015384615384615385},"alg/18_4Sum.html":{"ref":"alg/18_4Sum.html","tf":0.013157894736842105},"alg/83_Remove_Duplicates_from_Sorted_List.html":{"ref":"alg/83_Remove_Duplicates_from_Sorted_List.html","tf":2.014925373134328},"alg/82_Remove_Duplicates_from_Sorted_List_II.html":{"ref":"alg/82_Remove_Duplicates_from_Sorted_List_II.html","tf":1.6820512820512818},"alg/147_Insertion_Sort_List.html":{"ref":"alg/147_Insertion_Sort_List.html","tf":2.5238095238095237},"alg/148_Sort_List.html":{"ref":"alg/148_Sort_List.html","tf":3.345098039215686},"alg/21_Merge_Two_Sorted_Lists.html":{"ref":"alg/21_Merge_Two_Sorted_Lists.html","tf":2.017857142857143},"alg/23_Merge_k_Sorted_Lists.html":{"ref":"alg/23_Merge_k_Sorted_Lists.html","tf":2.0069444444444446}},":":{"docs":{"1_linkedlist.html":{"ref":"1_linkedlist.html","tf":0.02564102564102564}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},")":{"docs":{},",":{"docs":{"alg/148_Sort_List.html":{"ref":"alg/148_Sort_List.html","tf":0.011764705882352941}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"alg/148_Sort_List.html":{"ref":"alg/148_Sort_List.html","tf":0.011764705882352941}}}}}}}}},"s":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},")":{"docs":{},";":{"docs":{"alg/148_Sort_List.html":{"ref":"alg/148_Sort_List.html","tf":0.011764705882352941}}}}}}}}}}}}}}},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.013392857142857142}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"alg/15_3Sum.html":{"ref":"alg/15_3Sum.html","tf":0.015384615384615385},"alg/18_4Sum.html":{"ref":"alg/18_4Sum.html","tf":0.013157894736842105}}}},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"alg/169_Majority_Element.html":{"ref":"alg/169_Majority_Element.html","tf":0.008547008547008548}}}}},"c":{"docs":{},"k":{"docs":{"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.005050505050505051},"alg/94_Binary_Tree_Inorder_Traversal.html":{"ref":"alg/94_Binary_Tree_Inorder_Traversal.html","tf":0.008771929824561403}},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.005050505050505051},"alg/94_Binary_Tree_Inorder_Traversal.html":{"ref":"alg/94_Binary_Tree_Inorder_Traversal.html","tf":0.008771929824561403}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.005050505050505051}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.005050505050505051}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"alg/94_Binary_Tree_Inorder_Traversal.html":{"ref":"alg/94_Binary_Tree_Inorder_Traversal.html","tf":0.008771929824561403}}}}}}}}}}}}}},";":{"docs":{"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.005050505050505051}}}}}},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{"alg/147_Insertion_Sort_List.html":{"ref":"alg/147_Insertion_Sort_List.html","tf":0.023809523809523808}}}}},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.004291845493562232}}}}}}}},"e":{"docs":{},"p":{"docs":{"alg/19_Remove_Nth_Node_From_End_of_List.html":{"ref":"alg/19_Remove_Nth_Node_From_End_of_List.html","tf":0.018867924528301886}}}}},"q":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"x":{"docs":{},")":{"docs":{"alg/69_Sqrtx.html":{"ref":"alg/69_Sqrtx.html","tf":5.01010101010101}}}}}}}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714}},"(":{"docs":{},")":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.003246753246753247}}}}}},"m":{"docs":{},"i":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"alg/872_Leaf-Similar_Trees.html":{"ref":"alg/872_Leaf-Similar_Trees.html","tf":2.519230769230769}}}}}}}},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.020202020202020204}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"p":{"docs":{"alg/24_Swap_Nodes_in_Pairs.html":{"ref":"alg/24_Swap_Nodes_in_Pairs.html","tf":2.5113636363636362}},"p":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"alg/24_Swap_Nodes_in_Pairs.html":{"ref":"alg/24_Swap_Nodes_in_Pairs.html","tf":0.011363636363636364}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"alg/24_Swap_Nodes_in_Pairs.html":{"ref":"alg/24_Swap_Nodes_in_Pairs.html","tf":0.022727272727272728}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"alg/876_Middle_of_the_Linked_List.html":{"ref":"alg/876_Middle_of_the_Linked_List.html","tf":0.05714285714285714},"alg/141_Linked_List_Cycle.html":{"ref":"alg/141_Linked_List_Cycle.html","tf":0.0425531914893617},"alg/142_Linked_List_Cycle_II.html":{"ref":"alg/142_Linked_List_Cycle_II.html","tf":0.05263157894736842},"alg/234_Palindrome_Linked_List.html":{"ref":"alg/234_Palindrome_Linked_List.html","tf":0.023529411764705882},"alg/143_Reorder_List.html":{"ref":"alg/143_Reorder_List.html","tf":0.014925373134328358},"alg/148_Sort_List.html":{"ref":"alg/148_Sort_List.html","tf":0.023529411764705882},"alg/19_Remove_Nth_Node_From_End_of_List.html":{"ref":"alg/19_Remove_Nth_Node_From_End_of_List.html","tf":0.018867924528301886}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"alg/143_Reorder_List.html":{"ref":"alg/143_Reorder_List.html","tf":0.007462686567164179},"alg/19_Remove_Nth_Node_From_End_of_List.html":{"ref":"alg/19_Remove_Nth_Node_From_End_of_List.html","tf":0.018867924528301886}},";":{"docs":{"alg/876_Middle_of_the_Linked_List.html":{"ref":"alg/876_Middle_of_the_Linked_List.html","tf":0.02857142857142857},"alg/141_Linked_List_Cycle.html":{"ref":"alg/141_Linked_List_Cycle.html","tf":0.02127659574468085},"alg/142_Linked_List_Cycle_II.html":{"ref":"alg/142_Linked_List_Cycle_II.html","tf":0.03508771929824561},"alg/234_Palindrome_Linked_List.html":{"ref":"alg/234_Palindrome_Linked_List.html","tf":0.011764705882352941},"alg/143_Reorder_List.html":{"ref":"alg/143_Reorder_List.html","tf":0.014925373134328358},"alg/148_Sort_List.html":{"ref":"alg/148_Sort_List.html","tf":0.011764705882352941}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"alg/19_Remove_Nth_Node_From_End_of_List.html":{"ref":"alg/19_Remove_Nth_Node_From_End_of_List.html","tf":0.009433962264150943}}}}}}}}}}}},";":{"docs":{"alg/876_Middle_of_the_Linked_List.html":{"ref":"alg/876_Middle_of_the_Linked_List.html","tf":0.02857142857142857},"alg/234_Palindrome_Linked_List.html":{"ref":"alg/234_Palindrome_Linked_List.html","tf":0.011764705882352941},"alg/148_Sort_List.html":{"ref":"alg/148_Sort_List.html","tf":0.011764705882352941}}},")":{"docs":{"alg/141_Linked_List_Cycle.html":{"ref":"alg/141_Linked_List_Cycle.html","tf":0.02127659574468085},"alg/142_Linked_List_Cycle_II.html":{"ref":"alg/142_Linked_List_Cycle_II.html","tf":0.03508771929824561}}}}}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"alg/203_Remove_Linked_List_Elements.html":{"ref":"alg/203_Remove_Linked_List_Elements.html","tf":0.007142857142857143},"2_tree.html":{"ref":"2_tree.html","tf":0.041666666666666664},"alg/100_Same_Tree.html":{"ref":"alg/100_Same_Tree.html","tf":3.356060606060606}}}}},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{"alg/234_Palindrome_Linked_List.html":{"ref":"alg/234_Palindrome_Linked_List.html","tf":0.011764705882352941},"alg/143_Reorder_List.html":{"ref":"alg/143_Reorder_List.html","tf":0.007462686567164179}}}}}},"y":{"docs":{},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{"2_tree.html":{"ref":"2_tree.html","tf":0.041666666666666664},"alg/101_Symmetric_Tree.html":{"ref":"alg/101_Symmetric_Tree.html","tf":3.350282485875706}}}}}}}},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"alg/144_Binary_Tree_Preorder_Traversal.html":{"ref":"alg/144_Binary_Tree_Preorder_Traversal.html","tf":0.009345794392523364}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"alg/144_Binary_Tree_Preorder_Traversal.html":{"ref":"alg/144_Binary_Tree_Preorder_Traversal.html","tf":0.009345794392523364}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"alg/144_Binary_Tree_Preorder_Traversal.html":{"ref":"alg/144_Binary_Tree_Preorder_Traversal.html","tf":0.009345794392523364}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"alg/144_Binary_Tree_Preorder_Traversal.html":{"ref":"alg/144_Binary_Tree_Preorder_Traversal.html","tf":0.009345794392523364}}}}}}}}}}}}}},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{"alg/102_Binary_Tree_Level_Order_Traversal.html":{"ref":"alg/102_Binary_Tree_Level_Order_Traversal.html","tf":0.010869565217391304}}}},"m":{"docs":{"alg/112_Path_Sum.html":{"ref":"alg/112_Path_Sum.html","tf":3.4476190476190474}},")":{"docs":{"alg/112_Path_Sum.html":{"ref":"alg/112_Path_Sum.html","tf":0.02857142857142857}}}}}},"使":{"docs":{},"用":{"docs":{},"t":{"docs":{},"w":{"docs":{},"o":{"docs":{"alg/15_3Sum.html":{"ref":"alg/15_3Sum.html","tf":0.015384615384615385}}}}},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"重":{"docs":{},"写":{"docs":{},"p":{"docs":{},"y":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"n":{"docs":{},"第":{"docs":{},"二":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"上":{"docs":{},"只":{"docs":{},"要":{"docs":{},"x":{"docs":{},"y":{"docs":{},"相":{"docs":{},"等":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"就":{"docs":{},"算":{"docs":{},"相":{"docs":{},"等":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"重":{"docs":{},"写":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"中":{"docs":{},"的":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"和":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"方":{"docs":{},"法":{"docs":{},"在":{"docs":{},"每":{"docs":{},"次":{"docs":{},"存":{"docs":{},"储":{"docs":{},"或":{"docs":{},"者":{"docs":{},"查":{"docs":{},"找":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"计":{"docs":{},"算":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"存":{"docs":{},"放":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"用":{"docs":{},"来":{"docs":{},"比":{"docs":{},"较":{"docs":{},"两":{"docs":{},"个":{"docs":{},"点":{"docs":{},"的":{"docs":{},"x":{"docs":{},",":{"docs":{},"y":{"docs":{},"是":{"docs":{},"否":{"docs":{},"相":{"docs":{},"等":{"docs":{},"。":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},"或":{"docs":{},"者":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"时":{"docs":{},"会":{"docs":{},"进":{"docs":{},"行":{"docs":{},"排":{"docs":{},"序":{"docs":{},"，":{"docs":{},"这":{"docs":{},"里":{"docs":{},"维":{"docs":{},"护":{"docs":{},"一":{"docs":{},"个":{"docs":{},"小":{"docs":{},"堆":{"docs":{},"。":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"移":{"docs":{},"除":{"docs":{},"优":{"docs":{},"先":{"docs":{},"级":{"docs":{},"最":{"docs":{},"高":{"docs":{},"的":{"docs":{},"点":{"docs":{},"，":{"docs":{},"这":{"docs":{},"里":{"docs":{},"是":{"docs":{},"最":{"docs":{},"小":{"docs":{},"值":{"docs":{"alg/215_Kth_Largest_Element_in_an_Array.html":{"ref":"alg/215_Kth_Largest_Element_in_an_Array.html","tf":0.010101010101010102}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"^":{"2":{"docs":{},")":{"docs":{},"(":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"里":{"docs":{},"面":{"docs":{},"套":{"docs":{},"w":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{},"，":{"docs":{},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"o":{"docs":{},"(":{"docs":{},"k":{"docs":{},")":{"docs":{"alg/15_3Sum.html":{"ref":"alg/15_3Sum.html","tf":0.015384615384615385}}}}}}}}}}}}}}}}}}}}}}}}}}},"3":{"docs":{},")":{"docs":{},"(":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"里":{"docs":{},"面":{"docs":{},"套":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"再":{"docs":{},"w":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{},"，":{"docs":{},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"o":{"docs":{},"(":{"docs":{},"k":{"docs":{},")":{"docs":{"alg/18_4Sum.html":{"ref":"alg/18_4Sum.html","tf":0.013157894736842105}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}},"注":{"docs":{},"意":{"docs":{},"要":{"docs":{},"对":{"docs":{},"数":{"docs":{},"组":{"docs":{},"进":{"docs":{},"行":{"docs":{},"排":{"docs":{},"序":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"要":{"docs":{},"比":{"docs":{},"较":{"docs":{},"大":{"docs":{},"小":{"docs":{},"决":{"docs":{},"定":{"docs":{},"指":{"docs":{},"针":{"docs":{},"移":{"docs":{},"动":{"docs":{},"方":{"docs":{},"向":{"docs":{},"，":{"docs":{},"没":{"docs":{},"有":{"docs":{},"排":{"docs":{},"序":{"docs":{},"会":{"docs":{},"跳":{"docs":{},"过":{"docs":{},"某":{"docs":{},"些":{"docs":{},"数":{"docs":{},"字":{"docs":{},"。":{"docs":{"alg/15_3Sum.html":{"ref":"alg/15_3Sum.html","tf":0.015384615384615385}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"紫":{"docs":{},"色":{"docs":{},"是":{"docs":{},"i":{"docs":{},"经":{"docs":{},"过":{"docs":{},"的":{"docs":{},"区":{"docs":{},"域":{"docs":{},"，":{"docs":{},"绿":{"docs":{},"色":{"docs":{},"是":{"docs":{},"l":{"docs":{},",":{"docs":{"alg/15_3Sum.html":{"ref":"alg/15_3Sum.html","tf":0.015384615384615385}}}}}}}}}}}}}}}}},"这":{"docs":{},"三":{"docs":{},"句":{"docs":{},"是":{"docs":{},"防":{"docs":{},"止":{"docs":{},"i":{"docs":{},",":{"docs":{"alg/15_3Sum.html":{"ref":"alg/15_3Sum.html","tf":0.015384615384615385}}}}}}}}},"里":{"docs":{},"是":{"docs":{},"l":{"docs":{},"=":{"docs":{},"m":{"docs":{},"+":{"1":{"docs":{},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{},"l":{"docs":{},"=":{"docs":{},"m":{"docs":{},"：":{"docs":{},"是":{"docs":{},"因":{"docs":{},"为":{"docs":{},"除":{"docs":{},"法":{"docs":{},"取":{"docs":{},"下":{"docs":{},"界":{"docs":{},"会":{"docs":{},"造":{"docs":{},"成":{"docs":{},"l":{"docs":{},"边":{"docs":{},"界":{"docs":{},"不":{"docs":{},"会":{"docs":{},"改":{"docs":{},"变":{"docs":{},"，":{"docs":{},"从":{"docs":{},"而":{"docs":{},"形":{"docs":{},"成":{"docs":{},"死":{"docs":{},"循":{"docs":{},"环":{"docs":{},"。":{"docs":{"alg/704_Binary_Search.html":{"ref":"alg/704_Binary_Search.html","tf":0.0036363636363636364}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}},"的":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"和":{"docs":{},"o":{"docs":{},"d":{"docs":{},"d":{"docs":{},"指":{"docs":{},"的":{"docs":{},"是":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"。":{"docs":{},"奇":{"docs":{},"数":{"docs":{},"位":{"docs":{},"的":{"docs":{},"连":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"偶":{"docs":{},"数":{"docs":{},"位":{"docs":{},"的":{"docs":{},"连":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"连":{"docs":{},"一":{"docs":{},"连":{"docs":{},"。":{"docs":{"alg/328_Odd_Even_Linked_List.html":{"ref":"alg/328_Odd_Even_Linked_List.html","tf":0.01818181818181818}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"alg/18_4Sum.html":{"ref":"alg/18_4Sum.html","tf":0.013157894736842105}}}}}},"c":{"docs":{},"t":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.006493506493506494}}}}},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},"d":{"docs":{},"i":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714}}}}}}}}}},"f":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.008928571428571428},"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.025252525252525252},"alg/704_Binary_Search.html":{"ref":"alg/704_Binary_Search.html","tf":0.02181818181818182},"alg/206_Reverse_Linked_List.html":{"ref":"alg/206_Reverse_Linked_List.html","tf":0.014705882352941176},"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.02922077922077922},"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.030042918454935622},"alg/19_Remove_Nth_Node_From_End_of_List.html":{"ref":"alg/19_Remove_Nth_Node_From_End_of_List.html","tf":0.009433962264150943},"alg/102_Binary_Tree_Level_Order_Traversal.html":{"ref":"alg/102_Binary_Tree_Level_Order_Traversal.html","tf":0.010869565217391304},"alg/226_Invert_Binary_Tree.html":{"ref":"alg/226_Invert_Binary_Tree.html","tf":0.010638297872340425}}},"l":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.003246753246753247}},"e":{"docs":{},"t":{"docs":{"alg/237_Delete_Node_in_a_Linked_List.html":{"ref":"alg/237_Delete_Node_in_a_Linked_List.html","tf":2.0555555555555554},"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.004291845493562232}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},":":{"docs":{"1_linkedlist.html":{"ref":"1_linkedlist.html","tf":0.02564102564102564}}}}}},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"alg/237_Delete_Node_in_a_Linked_List.html":{"ref":"alg/237_Delete_Node_in_a_Linked_List.html","tf":0.05555555555555555}}}}}}}}}}}}}},"d":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"alg/83_Remove_Duplicates_from_Sorted_List.html":{"ref":"alg/83_Remove_Duplicates_from_Sorted_List.html","tf":0.014925373134328358}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"alg/83_Remove_Duplicates_from_Sorted_List.html":{"ref":"alg/83_Remove_Duplicates_from_Sorted_List.html","tf":0.029850746268656716},"alg/82_Remove_Duplicates_from_Sorted_List_II.html":{"ref":"alg/82_Remove_Duplicates_from_Sorted_List_II.html","tf":0.015384615384615385}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},",":{"docs":{"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.004291845493562232}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"c":{"docs":{},"y":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"alg/142_Linked_List_Cycle_II.html":{"ref":"alg/142_Linked_List_Cycle_II.html","tf":0.017543859649122806}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":2.504291845493562}}}}}},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{"alg/104_Maximum_Depth_of_Binary_Tree.html":{"ref":"alg/104_Maximum_Depth_of_Binary_Tree.html","tf":2.027027027027027},"alg/111_Minimum_Depth_of_Binary_Tree.html":{"ref":"alg/111_Minimum_Depth_of_Binary_Tree.html","tf":2.017543859649123}},":":{"docs":{"2_tree.html":{"ref":"2_tree.html","tf":0.041666666666666664}}}}}}},"x":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.008928571428571428}}},"f":{"docs":{},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},",":{"docs":{"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.005050505050505051}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"alg/704_Binary_Search.html":{"ref":"alg/704_Binary_Search.html","tf":0.007272727272727273}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"alg/704_Binary_Search.html":{"ref":"alg/704_Binary_Search.html","tf":0.02181818181818182}}}}},"l":{"docs":{},"l":{"docs":{},",":{"docs":{"alg/206_Reverse_Linked_List.html":{"ref":"alg/206_Reverse_Linked_List.html","tf":0.014705882352941176}}}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},",":{"docs":{"alg/206_Reverse_Linked_List.html":{"ref":"alg/206_Reverse_Linked_List.html","tf":0.014705882352941176}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"alg/206_Reverse_Linked_List.html":{"ref":"alg/206_Reverse_Linked_List.html","tf":0.014705882352941176}}}}}}}},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{"alg/101_Symmetric_Tree.html":{"ref":"alg/101_Symmetric_Tree.html","tf":0.01694915254237288}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},",":{"docs":{"alg/101_Symmetric_Tree.html":{"ref":"alg/101_Symmetric_Tree.html","tf":0.01694915254237288}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},",":{"docs":{"alg/144_Binary_Tree_Preorder_Traversal.html":{"ref":"alg/144_Binary_Tree_Preorder_Traversal.html","tf":0.009345794392523364},"alg/94_Binary_Tree_Inorder_Traversal.html":{"ref":"alg/94_Binary_Tree_Inorder_Traversal.html","tf":0.008771929824561403},"alg/145_Binary_Tree_Postorder_Traversal.html":{"ref":"alg/145_Binary_Tree_Postorder_Traversal.html","tf":0.014705882352941176}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{"alg/144_Binary_Tree_Preorder_Traversal.html":{"ref":"alg/144_Binary_Tree_Preorder_Traversal.html","tf":0.009345794392523364},"alg/94_Binary_Tree_Inorder_Traversal.html":{"ref":"alg/94_Binary_Tree_Inorder_Traversal.html","tf":0.008771929824561403},"alg/145_Binary_Tree_Postorder_Traversal.html":{"ref":"alg/145_Binary_Tree_Postorder_Traversal.html","tf":0.014705882352941176},"alg/101_Symmetric_Tree.html":{"ref":"alg/101_Symmetric_Tree.html","tf":0.01694915254237288}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},",":{"docs":{"alg/144_Binary_Tree_Preorder_Traversal.html":{"ref":"alg/144_Binary_Tree_Preorder_Traversal.html","tf":0.009345794392523364},"alg/94_Binary_Tree_Inorder_Traversal.html":{"ref":"alg/94_Binary_Tree_Inorder_Traversal.html","tf":0.008771929824561403},"alg/145_Binary_Tree_Postorder_Traversal.html":{"ref":"alg/145_Binary_Tree_Postorder_Traversal.html","tf":0.014705882352941176}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"alg/144_Binary_Tree_Preorder_Traversal.html":{"ref":"alg/144_Binary_Tree_Preorder_Traversal.html","tf":0.018691588785046728},"alg/94_Binary_Tree_Inorder_Traversal.html":{"ref":"alg/94_Binary_Tree_Inorder_Traversal.html","tf":0.017543859649122806},"alg/145_Binary_Tree_Postorder_Traversal.html":{"ref":"alg/145_Binary_Tree_Postorder_Traversal.html","tf":0.029411764705882353},"alg/101_Symmetric_Tree.html":{"ref":"alg/101_Symmetric_Tree.html","tf":0.01694915254237288}}}}}}}}}}}},"u":{"docs":{},"m":{"docs":{},"m":{"docs":{},"i":{"docs":{"alg/24_Swap_Nodes_in_Pairs.html":{"ref":"alg/24_Swap_Nodes_in_Pairs.html","tf":0.011363636363636364},"alg/203_Remove_Linked_List_Elements.html":{"ref":"alg/203_Remove_Linked_List_Elements.html","tf":0.014285714285714285},"alg/82_Remove_Duplicates_from_Sorted_List_II.html":{"ref":"alg/82_Remove_Duplicates_from_Sorted_List_II.html","tf":0.03076923076923077},"alg/147_Insertion_Sort_List.html":{"ref":"alg/147_Insertion_Sort_List.html","tf":0.023809523809523808},"alg/148_Sort_List.html":{"ref":"alg/148_Sort_List.html","tf":0.011764705882352941},"alg/19_Remove_Nth_Node_From_End_of_List.html":{"ref":"alg/19_Remove_Nth_Node_From_End_of_List.html","tf":0.02830188679245283}}},"y":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"alg/24_Swap_Nodes_in_Pairs.html":{"ref":"alg/24_Swap_Nodes_in_Pairs.html","tf":0.011363636363636364},"alg/203_Remove_Linked_List_Elements.html":{"ref":"alg/203_Remove_Linked_List_Elements.html","tf":0.007142857142857143},"alg/82_Remove_Duplicates_from_Sorted_List_II.html":{"ref":"alg/82_Remove_Duplicates_from_Sorted_List_II.html","tf":0.015384615384615385},"alg/19_Remove_Nth_Node_From_End_of_List.html":{"ref":"alg/19_Remove_Nth_Node_From_End_of_List.html","tf":0.02830188679245283}},";":{"docs":{"alg/24_Swap_Nodes_in_Pairs.html":{"ref":"alg/24_Swap_Nodes_in_Pairs.html","tf":0.011363636363636364},"alg/203_Remove_Linked_List_Elements.html":{"ref":"alg/203_Remove_Linked_List_Elements.html","tf":0.007142857142857143},"alg/82_Remove_Duplicates_from_Sorted_List_II.html":{"ref":"alg/82_Remove_Duplicates_from_Sorted_List_II.html","tf":0.015384615384615385}}}}}}}},";":{"docs":{"alg/24_Swap_Nodes_in_Pairs.html":{"ref":"alg/24_Swap_Nodes_in_Pairs.html","tf":0.011363636363636364},"alg/203_Remove_Linked_List_Elements.html":{"ref":"alg/203_Remove_Linked_List_Elements.html","tf":0.007142857142857143},"alg/82_Remove_Duplicates_from_Sorted_List_II.html":{"ref":"alg/82_Remove_Duplicates_from_Sorted_List_II.html","tf":0.015384615384615385},"alg/148_Sort_List.html":{"ref":"alg/148_Sort_List.html","tf":0.011764705882352941},"alg/19_Remove_Nth_Node_From_End_of_List.html":{"ref":"alg/19_Remove_Nth_Node_From_End_of_List.html","tf":0.009433962264150943}}},",":{"docs":{"alg/147_Insertion_Sort_List.html":{"ref":"alg/147_Insertion_Sort_List.html","tf":0.023809523809523808},"alg/19_Remove_Nth_Node_From_End_of_List.html":{"ref":"alg/19_Remove_Nth_Node_From_End_of_List.html","tf":0.009433962264150943}}}}}},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"alg/83_Remove_Duplicates_from_Sorted_List.html":{"ref":"alg/83_Remove_Duplicates_from_Sorted_List.html","tf":2.014925373134328},"alg/82_Remove_Duplicates_from_Sorted_List_II.html":{"ref":"alg/82_Remove_Duplicates_from_Sorted_List_II.html","tf":1.6820512820512818}}}}}}},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.004291845493562232}}}}}},"f":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"alg/18_4Sum.html":{"ref":"alg/18_4Sum.html","tf":0.013157894736842105}}}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"alg/147_Insertion_Sort_List.html":{"ref":"alg/147_Insertion_Sort_List.html","tf":0.023809523809523808}}}}}},"r":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"alg/19_Remove_Nth_Node_From_End_of_List.html":{"ref":"alg/19_Remove_Nth_Node_From_End_of_List.html","tf":0.009433962264150943}}}}}}}},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.005050505050505051},"alg/102_Binary_Tree_Level_Order_Traversal.html":{"ref":"alg/102_Binary_Tree_Level_Order_Traversal.html","tf":0.021739130434782608}},"e":{"docs":{},";":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714},"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.005050505050505051},"alg/141_Linked_List_Cycle.html":{"ref":"alg/141_Linked_List_Cycle.html","tf":0.02127659574468085},"alg/234_Palindrome_Linked_List.html":{"ref":"alg/234_Palindrome_Linked_List.html","tf":0.011764705882352941},"alg/100_Same_Tree.html":{"ref":"alg/100_Same_Tree.html","tf":0.022727272727272728},"alg/101_Symmetric_Tree.html":{"ref":"alg/101_Symmetric_Tree.html","tf":0.01694915254237288},"alg/112_Path_Sum.html":{"ref":"alg/112_Path_Sum.html","tf":0.02857142857142857}}}}}},"s":{"docs":{},"t":{"docs":{"alg/876_Middle_of_the_Linked_List.html":{"ref":"alg/876_Middle_of_the_Linked_List.html","tf":0.05714285714285714},"alg/141_Linked_List_Cycle.html":{"ref":"alg/141_Linked_List_Cycle.html","tf":0.0425531914893617},"alg/142_Linked_List_Cycle_II.html":{"ref":"alg/142_Linked_List_Cycle_II.html","tf":0.03508771929824561},"alg/234_Palindrome_Linked_List.html":{"ref":"alg/234_Palindrome_Linked_List.html","tf":0.023529411764705882},"alg/143_Reorder_List.html":{"ref":"alg/143_Reorder_List.html","tf":0.014925373134328358},"alg/148_Sort_List.html":{"ref":"alg/148_Sort_List.html","tf":0.023529411764705882},"alg/19_Remove_Nth_Node_From_End_of_List.html":{"ref":"alg/19_Remove_Nth_Node_From_End_of_List.html","tf":0.018867924528301886}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"alg/876_Middle_of_the_Linked_List.html":{"ref":"alg/876_Middle_of_the_Linked_List.html","tf":0.02857142857142857},"alg/141_Linked_List_Cycle.html":{"ref":"alg/141_Linked_List_Cycle.html","tf":0.02127659574468085},"alg/142_Linked_List_Cycle_II.html":{"ref":"alg/142_Linked_List_Cycle_II.html","tf":0.017543859649122806},"alg/234_Palindrome_Linked_List.html":{"ref":"alg/234_Palindrome_Linked_List.html","tf":0.011764705882352941},"alg/143_Reorder_List.html":{"ref":"alg/143_Reorder_List.html","tf":0.007462686567164179},"alg/148_Sort_List.html":{"ref":"alg/148_Sort_List.html","tf":0.011764705882352941},"alg/19_Remove_Nth_Node_From_End_of_List.html":{"ref":"alg/19_Remove_Nth_Node_From_End_of_List.html","tf":0.018867924528301886}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},";":{"docs":{"alg/876_Middle_of_the_Linked_List.html":{"ref":"alg/876_Middle_of_the_Linked_List.html","tf":0.02857142857142857},"alg/141_Linked_List_Cycle.html":{"ref":"alg/141_Linked_List_Cycle.html","tf":0.02127659574468085},"alg/142_Linked_List_Cycle_II.html":{"ref":"alg/142_Linked_List_Cycle_II.html","tf":0.017543859649122806},"alg/234_Palindrome_Linked_List.html":{"ref":"alg/234_Palindrome_Linked_List.html","tf":0.011764705882352941},"alg/143_Reorder_List.html":{"ref":"alg/143_Reorder_List.html","tf":0.007462686567164179},"alg/148_Sort_List.html":{"ref":"alg/148_Sort_List.html","tf":0.011764705882352941}}}}}}}}}}}}},",":{"docs":{"alg/19_Remove_Nth_Node_From_End_of_List.html":{"ref":"alg/19_Remove_Nth_Node_From_End_of_List.html","tf":0.009433962264150943}}},":":{"docs":{"alg/19_Remove_Nth_Node_From_End_of_List.html":{"ref":"alg/19_Remove_Nth_Node_From_End_of_List.html","tf":0.009433962264150943}}}}},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"会":{"docs":{},"减":{"docs":{},"少":{"docs":{},"空":{"docs":{},"间":{"docs":{},"开":{"docs":{},"销":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"会":{"docs":{},"增":{"docs":{},"加":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"，":{"docs":{},"从":{"docs":{},"而":{"docs":{},"增":{"docs":{},"加":{"docs":{},"了":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"和":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"开":{"docs":{},"销":{"docs":{},"。":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.003246753246753247}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"用":{"docs":{},"于":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"的":{"docs":{},"自":{"docs":{},"动":{"docs":{},"扩":{"docs":{},"容":{"docs":{},"。":{"docs":{},"比":{"docs":{},"如":{"docs":{},"说":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"有":{"1":{"6":{"docs":{},"个":{"docs":{},"b":{"docs":{},"u":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"，":{"docs":{},"当":{"1":{"2":{"docs":{},"(":{"1":{"6":{"docs":{},"*":{"0":{"docs":{},".":{"7":{"5":{"docs":{},")":{"docs":{},"个":{"docs":{},"b":{"docs":{},"u":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"装":{"docs":{},"满":{"docs":{},"后":{"docs":{},"，":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"会":{"docs":{},"自":{"docs":{},"动":{"docs":{},"增":{"docs":{},"加":{"docs":{},"到":{"3":{"2":{"docs":{},"个":{"docs":{},"b":{"docs":{},"u":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"。":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.003246753246753247}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714},"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.008583690987124463}}}}},"n":{"docs":{},"d":{"docs":{"alg/169_Majority_Element.html":{"ref":"alg/169_Majority_Element.html","tf":0.008547008547008548},"1_linkedlist.html":{"ref":"1_linkedlist.html","tf":0.02564102564102564}},"k":{"docs":{},"t":{"docs":{},"h":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"alg/215_Kth_Largest_Element_in_an_Array.html":{"ref":"alg/215_Kth_Largest_Element_in_an_Array.html","tf":0.010101010101010102}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"f":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"1":{"docs":{},",":{"docs":{"alg/872_Leaf-Similar_Trees.html":{"ref":"alg/872_Leaf-Similar_Trees.html","tf":0.019230769230769232}}}},"2":{"docs":{},",":{"docs":{"alg/872_Leaf-Similar_Trees.html":{"ref":"alg/872_Leaf-Similar_Trees.html","tf":0.019230769230769232}}}},"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{"alg/872_Leaf-Similar_Trees.html":{"ref":"alg/872_Leaf-Similar_Trees.html","tf":0.019230769230769232}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},",":{"docs":{"alg/872_Leaf-Similar_Trees.html":{"ref":"alg/872_Leaf-Similar_Trees.html","tf":0.019230769230769232}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"alg/872_Leaf-Similar_Trees.html":{"ref":"alg/872_Leaf-Similar_Trees.html","tf":0.019230769230769232}}}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"g":{"docs":{"alg/102_Binary_Tree_Level_Order_Traversal.html":{"ref":"alg/102_Binary_Tree_Level_Order_Traversal.html","tf":0.03260869565217391}},":":{"docs":{"alg/102_Binary_Tree_Level_Order_Traversal.html":{"ref":"alg/102_Binary_Tree_Level_Order_Traversal.html","tf":0.010869565217391304}}}}}}},"外":{"docs":{},"部":{"docs":{},"增":{"docs":{},"加":{"docs":{},"循":{"docs":{},"环":{"docs":{},"，":{"docs":{},"判":{"docs":{},"断":{"docs":{},"重":{"docs":{},"复":{"docs":{},"，":{"docs":{},"内":{"docs":{},"部":{"docs":{},"修":{"docs":{},"改":{"docs":{},"起":{"docs":{},"始":{"docs":{},"值":{"docs":{},"。":{"docs":{"alg/18_4Sum.html":{"ref":"alg/18_4Sum.html","tf":0.013157894736842105}}}}}}}}}}}}}}}}}}}}}},"x":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.008928571428571428},"alg/86_Partition_List.html":{"ref":"alg/86_Partition_List.html","tf":0.010526315789473684}},")":{"docs":{"alg/69_Sqrtx.html":{"ref":"alg/69_Sqrtx.html","tf":0.04040404040404041},"alg/86_Partition_List.html":{"ref":"alg/86_Partition_List.html","tf":0.021052631578947368}}},";":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714}}}},"二":{"docs":{},"分":{"docs":{},"法":{"docs":{},"的":{"docs":{},"扩":{"docs":{},"展":{"docs":{},"，":{"docs":{},"条":{"docs":{},"件":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"的":{"docs":{},"平":{"docs":{},"方":{"docs":{},"大":{"docs":{},"于":{"docs":{},"x":{"docs":{},"。":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"乘":{"docs":{},"法":{"docs":{},"或":{"docs":{},"者":{"docs":{},"除":{"docs":{},"法":{"docs":{},"进":{"docs":{},"行":{"docs":{},"比":{"docs":{},"较":{"docs":{},"，":{"docs":{},"除":{"docs":{},"法":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"要":{"docs":{},"注":{"docs":{},"意":{"docs":{},"l":{"docs":{},"=":{"1":{"docs":{},"，":{"docs":{},"不":{"docs":{},"然":{"docs":{},"的":{"docs":{},"话":{"docs":{},"m":{"docs":{},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"等":{"docs":{},"于":{"docs":{},"零":{"docs":{},"出":{"docs":{},"错":{"docs":{},"。":{"docs":{},"加":{"docs":{},"上":{"docs":{},"二":{"docs":{},"分":{"docs":{},"法":{"docs":{},"最":{"docs":{},"基":{"docs":{},"本":{"docs":{},"的":{"docs":{},"两":{"docs":{},"种":{"docs":{},"写":{"docs":{},"法":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"可":{"docs":{},"以":{"docs":{},"有":{"docs":{},"四":{"docs":{},"种":{"docs":{},"写":{"docs":{},"法":{"docs":{},"。":{"docs":{},"返":{"docs":{},"回":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{"alg/69_Sqrtx.html":{"ref":"alg/69_Sqrtx.html","tf":0.010101010101010102}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"边":{"docs":{},"界":{"docs":{},"问":{"docs":{},"题":{"docs":{},"还":{"docs":{},"是":{"docs":{},"有":{"docs":{},"一":{"docs":{},"点":{"docs":{},"点":{"docs":{},"搞":{"docs":{},"的":{"docs":{},"，":{"docs":{},"特":{"docs":{},"别":{"docs":{},"是":{"docs":{},"题":{"docs":{},"目":{"docs":{},"变":{"docs":{},"形":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"会":{"docs":{},"发":{"docs":{},"现":{"docs":{},"其":{"docs":{},"实":{"docs":{},"是":{"docs":{},"在":{"docs":{},"猜":{"docs":{},"边":{"docs":{},"界":{"docs":{},"写":{"docs":{},"题":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"这":{"docs":{},"样":{"docs":{},"其":{"docs":{},"实":{"docs":{},"很":{"docs":{},"不":{"docs":{},"好":{"docs":{},"，":{"docs":{},"我":{"docs":{},"觉":{"docs":{},"得":{"docs":{},"这":{"docs":{},"个":{"docs":{},"边":{"docs":{},"界":{"docs":{},"问":{"docs":{},"题":{"docs":{},"其":{"docs":{},"实":{"docs":{},"就":{"docs":{},"是":{"docs":{},"除":{"docs":{},"法":{"docs":{},"取":{"docs":{},"下":{"docs":{},"界":{"docs":{},"的":{"docs":{},"锅":{"docs":{},"。":{"docs":{},"给":{"docs":{},"出":{"docs":{},"两":{"docs":{},"种":{"docs":{},"错":{"docs":{},"掉":{"docs":{},"的":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"写":{"docs":{},"法":{"docs":{},"：":{"docs":{"alg/704_Binary_Search.html":{"ref":"alg/704_Binary_Search.html","tf":0.0036363636363636364}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"叉":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{},"的":{"docs":{},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"，":{"docs":{},"定":{"docs":{},"义":{"docs":{},"一":{"docs":{},"个":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},".":{"docs":{},"p":{"docs":{},"指":{"docs":{},"针":{"docs":{},"，":{"docs":{},"永":{"docs":{},"远":{"docs":{},"指":{"docs":{},"向":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{},"思":{"docs":{},"路":{"docs":{},"是":{"docs":{},"左":{"docs":{},"边":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"全":{"docs":{},"部":{"docs":{},"一":{"docs":{},"次":{"docs":{},"性":{"docs":{},"进":{"docs":{},"栈":{"docs":{},"，":{"docs":{},"完":{"docs":{},"成":{"docs":{},"后":{"docs":{},"，":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"最":{"docs":{},"上":{"docs":{},"面":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"a":{"docs":{},"，":{"docs":{},"检":{"docs":{},"查":{"docs":{},"它":{"docs":{},"是":{"docs":{},"否":{"docs":{},"有":{"docs":{},"右":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"有":{"docs":{},"的":{"docs":{},"话":{"docs":{},"就":{"docs":{},"作":{"docs":{},"为":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"的":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"此":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"值":{"docs":{},"大":{"docs":{},"于":{"docs":{},"a":{"docs":{},"小":{"docs":{},"于":{"docs":{},"a":{"docs":{},"的":{"docs":{},"父":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"a":{"docs":{},"没":{"docs":{},"有":{"docs":{},"右":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"说":{"docs":{},"明":{"docs":{},"没":{"docs":{},"有":{"docs":{},"值":{"docs":{},"在":{"docs":{},"a":{"docs":{},"和":{"docs":{},"a":{"docs":{},"的":{"docs":{},"父":{"docs":{},"节":{"docs":{},"点":{"docs":{},"之":{"docs":{},"间":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"直":{"docs":{},"接":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"a":{"docs":{},"的":{"docs":{},"父":{"docs":{},"节":{"docs":{},"点":{"docs":{},"作":{"docs":{},"为":{"docs":{},"答":{"docs":{},"案":{"docs":{},"。":{"docs":{"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.005050505050505051}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"树":{"docs":{},"的":{"docs":{},"性":{"docs":{},"质":{"docs":{},":":{"docs":{"2_tree.html":{"ref":"2_tree.html","tf":0.041666666666666664}}}}}}}}},"\"":{"docs":{},"\"":{"docs":{},"\"":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.017857142857142856},"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.030303030303030304},"alg/206_Reverse_Linked_List.html":{"ref":"alg/206_Reverse_Linked_List.html","tf":0.029411764705882353},"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.03896103896103896},"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.05150214592274678},"alg/19_Remove_Nth_Node_From_End_of_List.html":{"ref":"alg/19_Remove_Nth_Node_From_End_of_List.html","tf":0.018867924528301886},"alg/102_Binary_Tree_Level_Order_Traversal.html":{"ref":"alg/102_Binary_Tree_Level_Order_Traversal.html","tf":0.021739130434782608},"alg/226_Invert_Binary_Tree.html":{"ref":"alg/226_Invert_Binary_Tree.html","tf":0.02127659574468085}}}}},"#":{"1":{"docs":{"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.005050505050505051}}},"2":{"docs":{"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.005050505050505051}}},"3":{"docs":{"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.005050505050505051}}},"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.017857142857142856},"alg/704_Binary_Search.html":{"ref":"alg/704_Binary_Search.html","tf":0.01090909090909091},"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.012987012987012988}},"#":{"docs":{},"#":{"docs":{},"#":{"docs":{},"#":{"docs":{},"#":{"docs":{"alg/704_Binary_Search.html":{"ref":"alg/704_Binary_Search.html","tf":0.0036363636363636364}}}}}}}},"'":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"'":{"docs":{},"d":{"docs":{},"y":{"docs":{},"前":{"docs":{},"面":{"docs":{},"加":{"docs":{},"上":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"浮":{"docs":{},"点":{"docs":{},"数":{"docs":{},"精":{"docs":{},"度":{"docs":{},"可":{"docs":{},"能":{"docs":{},"出":{"docs":{},"现":{"docs":{},"问":{"docs":{},"题":{"docs":{},"导":{"docs":{},"致":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"点":{"docs":{},"算":{"docs":{},"出":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"斜":{"docs":{},"率":{"docs":{},"。":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"*":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.017857142857142856},"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.010101010101010102}},"/":{"docs":{"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.010101010101010102}}}},".":{"docs":{},".":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714}}}},":":{"docs":{"alg/169_Majority_Element.html":{"ref":"alg/169_Majority_Element.html","tf":0.008547008547008548},"alg/215_Kth_Largest_Element_in_an_Array.html":{"ref":"alg/215_Kth_Largest_Element_in_an_Array.html","tf":0.010101010101010102},"alg/160_Intersection_of_Two_Linked_Lists.html":{"ref":"alg/160_Intersection_of_Two_Linked_Lists.html","tf":0.03636363636363636},"alg/203_Remove_Linked_List_Elements.html":{"ref":"alg/203_Remove_Linked_List_Elements.html","tf":0.007142857142857143},"alg/83_Remove_Duplicates_from_Sorted_List.html":{"ref":"alg/83_Remove_Duplicates_from_Sorted_List.html","tf":0.014925373134328358},"alg/21_Merge_Two_Sorted_Lists.html":{"ref":"alg/21_Merge_Two_Sorted_Lists.html","tf":0.017857142857142856},"alg/23_Merge_k_Sorted_Lists.html":{"ref":"alg/23_Merge_k_Sorted_Lists.html","tf":0.006944444444444444},"alg/617_Merge_Two_Binary_Trees.html":{"ref":"alg/617_Merge_Two_Binary_Trees.html","tf":0.022727272727272728}},"r":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},":":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.008928571428571428},"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.010101010101010102},"alg/206_Reverse_Linked_List.html":{"ref":"alg/206_Reverse_Linked_List.html","tf":0.014705882352941176},"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.012987012987012988},"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.02145922746781116},"alg/19_Remove_Nth_Node_From_End_of_List.html":{"ref":"alg/19_Remove_Nth_Node_From_End_of_List.html","tf":0.009433962264150943},"alg/102_Binary_Tree_Level_Order_Traversal.html":{"ref":"alg/102_Binary_Tree_Level_Order_Traversal.html","tf":0.010869565217391304},"alg/226_Invert_Binary_Tree.html":{"ref":"alg/226_Invert_Binary_Tree.html","tf":0.010638297872340425}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.008928571428571428},"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.005050505050505051},"alg/206_Reverse_Linked_List.html":{"ref":"alg/206_Reverse_Linked_List.html","tf":0.014705882352941176},"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.025974025974025976},"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.02575107296137339},"alg/19_Remove_Nth_Node_From_End_of_List.html":{"ref":"alg/19_Remove_Nth_Node_From_End_of_List.html","tf":0.018867924528301886},"alg/102_Binary_Tree_Level_Order_Traversal.html":{"ref":"alg/102_Binary_Tree_Level_Order_Traversal.html","tf":0.010869565217391304},"alg/226_Invert_Binary_Tree.html":{"ref":"alg/226_Invert_Binary_Tree.html","tf":0.010638297872340425}}}}}}},"@":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.020202020202020204}}}}}}}}},"[":{"1":{"docs":{},",":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.008928571428571428},"alg/215_Kth_Largest_Element_in_an_Array.html":{"ref":"alg/215_Kth_Largest_Element_in_an_Array.html","tf":0.030303030303030304}}}},"2":{"docs":{},",":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714},"alg/215_Kth_Largest_Element_in_an_Array.html":{"ref":"alg/215_Kth_Largest_Element_in_an_Array.html","tf":0.04040404040404041}}}},"3":{"docs":{},",":{"docs":{"alg/215_Kth_Largest_Element_in_an_Array.html":{"ref":"alg/215_Kth_Largest_Element_in_an_Array.html","tf":0.020202020202020204}}},"]":{"docs":{"alg/215_Kth_Largest_Element_in_an_Array.html":{"ref":"alg/215_Kth_Largest_Element_in_an_Array.html","tf":0.020202020202020204}}}},"4":{"docs":{},",":{"docs":{"alg/215_Kth_Largest_Element_in_an_Array.html":{"ref":"alg/215_Kth_Largest_Element_in_an_Array.html","tf":0.010101010101010102}}}},"docs":{},"[":{"0":{"docs":{},",":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714}}}},"docs":{}},"]":{"docs":{"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.010101010101010102},"alg/102_Binary_Tree_Level_Order_Traversal.html":{"ref":"alg/102_Binary_Tree_Level_Order_Traversal.html","tf":0.021739130434782608}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"]":{"docs":{"alg/102_Binary_Tree_Level_Order_Traversal.html":{"ref":"alg/102_Binary_Tree_Level_Order_Traversal.html","tf":0.010869565217391304}}}}}}}},"^":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714}}},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.004291845493562232}},"s":{"docs":{},"(":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"alg/169_Majority_Element.html":{"ref":"alg/169_Majority_Element.html","tf":3.3418803418803416},"alg/215_Kth_Largest_Element_in_an_Array.html":{"ref":"alg/215_Kth_Largest_Element_in_an_Array.html","tf":2.01010101010101},"alg/203_Remove_Linked_List_Elements.html":{"ref":"alg/203_Remove_Linked_List_Elements.html","tf":2.0142857142857142},"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.003246753246753247},"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.008583690987124463}}}}}}},"s":{"docs":{},"e":{"docs":{},":":{"docs":{"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.005050505050505051},"alg/704_Binary_Search.html":{"ref":"alg/704_Binary_Search.html","tf":0.0036363636363636364},"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.012987012987012988},"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.008583690987124463},"alg/102_Binary_Tree_Level_Order_Traversal.html":{"ref":"alg/102_Binary_Tree_Level_Order_Traversal.html","tf":0.010869565217391304}}}}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.003246753246753247}},")":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.003246753246753247}}}}}}}},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"alg/142_Linked_List_Cycle_II.html":{"ref":"alg/142_Linked_List_Cycle_II.html","tf":0.03508771929824561}}},"y":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},";":{"docs":{"alg/142_Linked_List_Cycle_II.html":{"ref":"alg/142_Linked_List_Cycle_II.html","tf":0.017543859649122806}}}}}}}},";":{"docs":{"alg/142_Linked_List_Cycle_II.html":{"ref":"alg/142_Linked_List_Cycle_II.html","tf":0.017543859649122806}}}}}},"d":{"docs":{"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.004291845493562232},"alg/19_Remove_Nth_Node_From_End_of_List.html":{"ref":"alg/19_Remove_Nth_Node_From_End_of_List.html","tf":1.6761006289308176}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{"alg/328_Odd_Even_Linked_List.html":{"ref":"alg/328_Odd_Even_Linked_List.html","tf":2.0545454545454547}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"alg/328_Odd_Even_Linked_List.html":{"ref":"alg/328_Odd_Even_Linked_List.html","tf":0.03636363636363636}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},";":{"docs":{"alg/328_Odd_Even_Linked_List.html":{"ref":"alg/328_Odd_Even_Linked_List.html","tf":0.01818181818181818}}}}}}}},";":{"docs":{"alg/328_Odd_Even_Linked_List.html":{"ref":"alg/328_Odd_Even_Linked_List.html","tf":0.01818181818181818}}}}}}}},";":{"docs":{"alg/328_Odd_Even_Linked_List.html":{"ref":"alg/328_Odd_Even_Linked_List.html","tf":0.01818181818181818}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"alg/328_Odd_Even_Linked_List.html":{"ref":"alg/328_Odd_Even_Linked_List.html","tf":0.01818181818181818}},";":{"docs":{"alg/328_Odd_Even_Linked_List.html":{"ref":"alg/328_Odd_Even_Linked_List.html","tf":0.01818181818181818}}}}}}}}}}},"g":{"docs":{},"c":{"docs":{},"d":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714}}}},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"alg/160_Intersection_of_Two_Linked_Lists.html":{"ref":"alg/160_Intersection_of_Two_Linked_Lists.html","tf":0.01818181818181818}}}}}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.003246753246753247}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},",":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.006493506493506494},"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.004291845493562232}}}}}}}},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"alg/222_Count_Complete_Tree_Nodes.html":{"ref":"alg/222_Count_Complete_Tree_Nodes.html","tf":0.021739130434782608}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"alg/222_Count_Complete_Tree_Nodes.html":{"ref":"alg/222_Count_Complete_Tree_Nodes.html","tf":0.010869565217391304}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"alg/222_Count_Complete_Tree_Nodes.html":{"ref":"alg/222_Count_Complete_Tree_Nodes.html","tf":0.010869565217391304}}}}}}}}}}}}}}}}},")":{"docs":{"alg/817_Linked_List_Components.html":{"ref":"alg/817_Linked_List_Components.html","tf":0.05}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.004291845493562232}}}}}}}}},"o":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.022321428571428572}},".":{"docs":{},"x":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714}}},"y":{"docs":{},";":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714}}},";":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714}}}}}}},"(":{"1":{"docs":{},")":{"docs":{"alg/169_Majority_Element.html":{"ref":"alg/169_Majority_Element.html","tf":0.008547008547008548}}}},"docs":{},"n":{"docs":{},")":{"docs":{"alg/169_Majority_Element.html":{"ref":"alg/169_Majority_Element.html","tf":0.02564102564102564}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{"alg/169_Majority_Element.html":{"ref":"alg/169_Majority_Element.html","tf":0.008547008547008548}}}}}}}}},"d":{"docs":{},"d":{"docs":{"alg/328_Odd_Even_Linked_List.html":{"ref":"alg/328_Odd_Even_Linked_List.html","tf":2.0545454545454547}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"alg/328_Odd_Even_Linked_List.html":{"ref":"alg/328_Odd_Even_Linked_List.html","tf":0.03636363636363636}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},";":{"docs":{"alg/328_Odd_Even_Linked_List.html":{"ref":"alg/328_Odd_Even_Linked_List.html","tf":0.01818181818181818}}}}}}}},";":{"docs":{"alg/328_Odd_Even_Linked_List.html":{"ref":"alg/328_Odd_Even_Linked_List.html","tf":0.01818181818181818}}}}}}}},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"alg/328_Odd_Even_Linked_List.html":{"ref":"alg/328_Odd_Even_Linked_List.html","tf":0.01818181818181818}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.003246753246753247},"alg/102_Binary_Tree_Level_Order_Traversal.html":{"ref":"alg/102_Binary_Tree_Level_Order_Traversal.html","tf":1.6775362318840579}},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.003246753246753247}},"(":{"docs":{},")":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.003246753246753247}}}}}}}}}}}}}}},"y":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.008928571428571428}},";":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714}}},"的":{"docs":{},"g":{"docs":{},"c":{"docs":{},"d":{"docs":{},"来":{"docs":{},"同":{"docs":{},"时":{"docs":{},"缩":{"docs":{},"小":{"docs":{},"x":{"docs":{},"，":{"docs":{},"y":{"docs":{},"的":{"docs":{},"范":{"docs":{},"围":{"docs":{},"避":{"docs":{},"免":{"docs":{},"浮":{"docs":{},"点":{"docs":{},"数":{"docs":{},"的":{"docs":{},"精":{"docs":{},"度":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"如":{"docs":{},"果":{"docs":{},"使":{"docs":{},"用":{"docs":{},"这":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"话":{"docs":{},"需":{"docs":{},"要":{"docs":{},"在":{"docs":{},"s":{"docs":{},"l":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714}}}}}}}}}}}}}}}}}},"其":{"docs":{},"叶":{"docs":{},"结":{"docs":{},"点":{"docs":{},"数":{"docs":{},"为":{"docs":{},"n":{"0":{"docs":{},",":{"docs":{"alg/222_Count_Complete_Tree_Nodes.html":{"ref":"alg/222_Count_Complete_Tree_Nodes.html","tf":0.010869565217391304}}}},"docs":{}}}}}}}}}},"思":{"docs":{},"路":{"docs":{},"是":{"docs":{},"两":{"docs":{},"个":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"循":{"docs":{},"环":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"比":{"docs":{},"较":{"docs":{},"(":{"docs":{},"n":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714}}}}}}}}}}}}}}}}}}},"第":{"docs":{},"二":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"使":{"docs":{},"用":{"docs":{},"求":{"docs":{},"x":{"docs":{},",":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714}}}}}}}}}}}},"计":{"docs":{},"算":{"docs":{},"一":{"docs":{},"个":{"docs":{},"列":{"docs":{},"表":{"docs":{},"中":{"docs":{},"最":{"docs":{},"多":{"docs":{},"能":{"docs":{},"有":{"docs":{},"几":{"docs":{},"个":{"docs":{},"点":{"docs":{},"在":{"docs":{},"一":{"docs":{},"条":{"docs":{},"线":{"docs":{},"上":{"docs":{},"。":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714}}}}}}}}}}}}}}}}}}}}}},"运":{"docs":{},"行":{"docs":{},"例":{"docs":{},"子":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714}}}}}},"返":{"docs":{},"回":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"3":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714}}},"docs":{}}}}}},"还":{"docs":{},"有":{"docs":{},"一":{"docs":{},"种":{"docs":{},"比":{"docs":{},"较":{"docs":{},"快":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"没":{"docs":{},"有":{"docs":{},"看":{"docs":{},"，":{"docs":{},"好":{"docs":{},"像":{"docs":{},"是":{"docs":{},"直":{"docs":{},"接":{"docs":{},"比":{"docs":{},"较":{"docs":{},"乘":{"docs":{},"法":{"docs":{},"。":{"docs":{"alg/149_Max_Points_on_a_Line.html":{"ref":"alg/149_Max_Points_on_a_Line.html","tf":0.004464285714285714}}}}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"alg/169_Majority_Element.html":{"ref":"alg/169_Majority_Element.html","tf":0.008547008547008548}}},"v":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{"alg/169_Majority_Element.html":{"ref":"alg/169_Majority_Element.html","tf":0.017094017094017096}}}},"i":{"docs":{},"d":{"docs":{"alg/237_Delete_Node_in_a_Linked_List.html":{"ref":"alg/237_Delete_Node_in_a_Linked_List.html","tf":0.05555555555555555},"alg/143_Reorder_List.html":{"ref":"alg/143_Reorder_List.html","tf":0.007462686567164179},"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.00974025974025974},"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.017167381974248927},"alg/144_Binary_Tree_Preorder_Traversal.html":{"ref":"alg/144_Binary_Tree_Preorder_Traversal.html","tf":0.018691588785046728},"alg/94_Binary_Tree_Inorder_Traversal.html":{"ref":"alg/94_Binary_Tree_Inorder_Traversal.html","tf":0.017543859649122806},"alg/145_Binary_Tree_Postorder_Traversal.html":{"ref":"alg/145_Binary_Tree_Postorder_Traversal.html","tf":0.029411764705882353},"alg/872_Leaf-Similar_Trees.html":{"ref":"alg/872_Leaf-Similar_Trees.html","tf":0.019230769230769232}}}}},"a":{"docs":{},"l":{"docs":{"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.017167381974248927},"alg/102_Binary_Tree_Level_Order_Traversal.html":{"ref":"alg/102_Binary_Tree_Level_Order_Traversal.html","tf":0.010869565217391304}},")":{"docs":{"alg/203_Remove_Linked_List_Elements.html":{"ref":"alg/203_Remove_Linked_List_Elements.html","tf":0.05},"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.008583690987124463}},";":{"docs":{"alg/203_Remove_Linked_List_Elements.html":{"ref":"alg/203_Remove_Linked_List_Elements.html","tf":0.007142857142857143}}},":":{"docs":{"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.017167381974248927}}}},"u":{"docs":{"alg/147_Insertion_Sort_List.html":{"ref":"alg/147_Insertion_Sort_List.html","tf":0.023809523809523808},"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.01948051948051948},"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.017167381974248927}},"e":{"docs":{},")":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.006493506493506494}},":":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.00974025974025974}}},";":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.003246753246753247}}}},":":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.006493506493506494}}}}},":":{"docs":{"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.012875536480686695}}},"i":{"docs":{},"d":{"docs":{},".":{"docs":{"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.004291845493562232}}}}},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"alg/102_Binary_Tree_Level_Order_Traversal.html":{"ref":"alg/102_Binary_Tree_Level_Order_Traversal.html","tf":0.010869565217391304}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"alg/102_Binary_Tree_Level_Order_Traversal.html":{"ref":"alg/102_Binary_Tree_Level_Order_Traversal.html","tf":0.010869565217391304}}}}}}}}}}}}}}},"大":{"docs":{},"概":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{},"?":{"docs":{"alg/169_Majority_Element.html":{"ref":"alg/169_Majority_Element.html","tf":0.008547008547008548}}}}}}}}}}}}},"粉":{"docs":{},"色":{"docs":{},"格":{"docs":{},"子":{"docs":{},"为":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"=":{"0":{"docs":{},"时":{"docs":{},"换":{"docs":{},"主":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"绿":{"docs":{},"色":{"docs":{},"格":{"docs":{},"子":{"docs":{"alg/169_Majority_Element.html":{"ref":"alg/169_Majority_Element.html","tf":0.008547008547008548}}}}}}}}}}}}},"docs":{}}}}}}}}}}}},"_":{"docs":{"alg/102_Binary_Tree_Level_Order_Traversal.html":{"ref":"alg/102_Binary_Tree_Level_Order_Traversal.html","tf":0.010869565217391304}},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"_":{"docs":{},"_":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},",":{"docs":{"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.005050505050505051},"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.00974025974025974},"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.004291845493562232}}},")":{"docs":{},":":{"docs":{"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.004291845493562232}}}}}}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},",":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.003246753246753247}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},",":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.003246753246753247}}}}}}}}}}}}}}},"w":{"docs":{},"h":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.010101010101010102}}}}}}}}},"|":{"docs":{},"|":{"docs":{"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.005050505050505051},"alg/24_Swap_Nodes_in_Pairs.html":{"ref":"alg/24_Swap_Nodes_in_Pairs.html","tf":0.011363636363636364},"alg/160_Intersection_of_Two_Linked_Lists.html":{"ref":"alg/160_Intersection_of_Two_Linked_Lists.html","tf":0.01818181818181818},"alg/83_Remove_Duplicates_from_Sorted_List.html":{"ref":"alg/83_Remove_Duplicates_from_Sorted_List.html","tf":0.014925373134328358},"alg/143_Reorder_List.html":{"ref":"alg/143_Reorder_List.html","tf":0.007462686567164179},"alg/148_Sort_List.html":{"ref":"alg/148_Sort_List.html","tf":0.011764705882352941},"alg/21_Merge_Two_Sorted_Lists.html":{"ref":"alg/21_Merge_Two_Sorted_Lists.html","tf":0.017857142857142856},"alg/23_Merge_k_Sorted_Lists.html":{"ref":"alg/23_Merge_k_Sorted_Lists.html","tf":0.006944444444444444},"2_tree.html":{"ref":"2_tree.html","tf":0.125},"alg/94_Binary_Tree_Inorder_Traversal.html":{"ref":"alg/94_Binary_Tree_Inorder_Traversal.html","tf":0.008771929824561403},"alg/100_Same_Tree.html":{"ref":"alg/100_Same_Tree.html","tf":0.022727272727272728},"alg/101_Symmetric_Tree.html":{"ref":"alg/101_Symmetric_Tree.html","tf":0.01694915254237288},"alg/617_Merge_Two_Binary_Trees.html":{"ref":"alg/617_Merge_Two_Binary_Trees.html","tf":0.022727272727272728},"alg/111_Minimum_Depth_of_Binary_Tree.html":{"ref":"alg/111_Minimum_Depth_of_Binary_Tree.html","tf":0.03508771929824561},"alg/112_Path_Sum.html":{"ref":"alg/112_Path_Sum.html","tf":0.02857142857142857}}}},"一":{"docs":{},"个":{"docs":{},"例":{"docs":{},"子":{"docs":{"alg/215_Kth_Largest_Element_in_an_Array.html":{"ref":"alg/215_Kth_Largest_Element_in_an_Array.html","tf":0.010101010101010102}},"：":{"docs":{},"检":{"docs":{},"查":{"docs":{},"左":{"docs":{},"边":{"docs":{},"的":{"docs":{},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"后":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},",":{"docs":{},"检":{"docs":{},"查":{"docs":{},"右":{"docs":{},"边":{"docs":{},"的":{"docs":{},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"后":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"3":{"docs":{},")":{"docs":{"alg/173_Binary_Search_Tree_Iterator.html":{"ref":"alg/173_Binary_Search_Tree_Iterator.html","tf":0.005050505050505051}}}},"docs":{}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}},"样":{"docs":{},"的":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"递":{"docs":{},"归":{"docs":{},"写":{"docs":{},"法":{"docs":{},":":{"docs":{"alg/704_Binary_Search.html":{"ref":"alg/704_Binary_Search.html","tf":0.007272727272727273}}}}}}}}}}}}},"开":{"docs":{},"始":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"拼":{"docs":{},"一":{"docs":{},"拼":{"docs":{"alg/23_Merge_k_Sorted_Lists.html":{"ref":"alg/23_Merge_k_Sorted_Lists.html","tf":0.006944444444444444}}}}}}}}}}}},"q":{"docs":{"alg/215_Kth_Largest_Element_in_an_Array.html":{"ref":"alg/215_Kth_Largest_Element_in_an_Array.html","tf":0.020202020202020204},"alg/23_Merge_k_Sorted_Lists.html":{"ref":"alg/23_Merge_k_Sorted_Lists.html","tf":0.006944444444444444},"alg/102_Binary_Tree_Level_Order_Traversal.html":{"ref":"alg/102_Binary_Tree_Level_Order_Traversal.html","tf":0.010869565217391304},"alg/226_Invert_Binary_Tree.html":{"ref":"alg/226_Invert_Binary_Tree.html","tf":0.010638297872340425}},".":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},")":{"docs":{},";":{"docs":{"alg/215_Kth_Largest_Element_in_an_Array.html":{"ref":"alg/215_Kth_Largest_Element_in_an_Array.html","tf":0.010101010101010102}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"alg/226_Invert_Binary_Tree.html":{"ref":"alg/226_Invert_Binary_Tree.html","tf":0.010638297872340425}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"alg/226_Invert_Binary_Tree.html":{"ref":"alg/226_Invert_Binary_Tree.html","tf":0.010638297872340425}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"alg/102_Binary_Tree_Level_Order_Traversal.html":{"ref":"alg/102_Binary_Tree_Level_Order_Traversal.html","tf":0.010869565217391304},"alg/226_Invert_Binary_Tree.html":{"ref":"alg/226_Invert_Binary_Tree.html","tf":0.010638297872340425}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"alg/215_Kth_Largest_Element_in_an_Array.html":{"ref":"alg/215_Kth_Largest_Element_in_an_Array.html","tf":0.020202020202020204},"alg/226_Invert_Binary_Tree.html":{"ref":"alg/226_Invert_Binary_Tree.html","tf":0.010638297872340425}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"alg/102_Binary_Tree_Level_Order_Traversal.html":{"ref":"alg/102_Binary_Tree_Level_Order_Traversal.html","tf":0.010869565217391304}}}}}}}}}},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{"alg/102_Binary_Tree_Level_Order_Traversal.html":{"ref":"alg/102_Binary_Tree_Level_Order_Traversal.html","tf":0.021739130434782608},"alg/226_Invert_Binary_Tree.html":{"ref":"alg/226_Invert_Binary_Tree.html","tf":0.010638297872340425}},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{"alg/102_Binary_Tree_Level_Order_Traversal.html":{"ref":"alg/102_Binary_Tree_Level_Order_Traversal.html","tf":0.010869565217391304}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{"alg/102_Binary_Tree_Level_Order_Traversal.html":{"ref":"alg/102_Binary_Tree_Level_Order_Traversal.html","tf":0.010869565217391304}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"0":{"docs":{},")":{"docs":{"alg/102_Binary_Tree_Level_Order_Traversal.html":{"ref":"alg/102_Binary_Tree_Level_Order_Traversal.html","tf":0.010869565217391304}}}},"docs":{}}}}}},":":{"docs":{"alg/102_Binary_Tree_Level_Order_Traversal.html":{"ref":"alg/102_Binary_Tree_Level_Order_Traversal.html","tf":0.010869565217391304}}}}}}}},"最":{"docs":{},"大":{"docs":{},"堆":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},"这":{"docs":{},"个":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"，":{"docs":{},"别":{"docs":{},"的":{"docs":{},"自":{"docs":{},"定":{"docs":{},"义":{"docs":{},"对":{"docs":{},"象":{"docs":{},"需":{"docs":{},"要":{"docs":{},"自":{"docs":{},"己":{"docs":{},"实":{"docs":{},"现":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"alg/215_Kth_Largest_Element_in_an_Array.html":{"ref":"alg/215_Kth_Largest_Element_in_an_Array.html","tf":0.010101010101010102}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"变":{"docs":{},"种":{"docs":{},"写":{"docs":{},"法":{"docs":{},".":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},")":{"docs":{"alg/704_Binary_Search.html":{"ref":"alg/704_Binary_Search.html","tf":0.0036363636363636364}}}}}}}}}}}}}}}}},"正":{"docs":{},"确":{"docs":{},"写":{"docs":{},"法":{"docs":{},"一":{"docs":{},"：":{"docs":{},"小":{"docs":{},"于":{"docs":{},"判":{"docs":{},"断":{"docs":{},"加":{"docs":{},"检":{"docs":{},"查":{"docs":{},"边":{"docs":{},"界":{"docs":{},"后":{"docs":{},"返":{"docs":{},"回":{"docs":{},"(":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},")":{"docs":{},";":{"docs":{"alg/704_Binary_Search.html":{"ref":"alg/704_Binary_Search.html","tf":0.0036363636363636364}}}}}}}}}}}}}}}}}}}}}}}}}},"二":{"docs":{},"：":{"docs":{},"小":{"docs":{},"于":{"docs":{},"等":{"docs":{},"于":{"docs":{},"加":{"docs":{},"直":{"docs":{},"接":{"docs":{},"返":{"docs":{},"回":{"docs":{},"(":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},")":{"docs":{"alg/704_Binary_Search.html":{"ref":"alg/704_Binary_Search.html","tf":0.0036363636363636364}}}}}}}}}}}}}}}}}}}}}}}}}},"求":{"docs":{},"区":{"docs":{},"间":{"docs":{},"中":{"docs":{},"重":{"docs":{},"复":{"docs":{},"数":{"docs":{},"字":{"docs":{},"的":{"docs":{},"上":{"docs":{},"下":{"docs":{},"界":{"docs":{},"长":{"docs":{},"度":{"docs":{},"：":{"docs":{"alg/704_Binary_Search.html":{"ref":"alg/704_Binary_Search.html","tf":0.0036363636363636364}}}}}}}}}}}}}}}}},"溢":{"docs":{},"出":{"docs":{},"的":{"docs":{},"特":{"docs":{},"殊":{"docs":{},"处":{"docs":{},"理":{"docs":{},"就":{"docs":{},"不":{"docs":{},"提":{"docs":{},"了":{"docs":{},"。":{"docs":{"alg/704_Binary_Search.html":{"ref":"alg/704_Binary_Search.html","tf":0.0036363636363636364}}}}}}}}}}}}}},"错":{"docs":{},"误":{"docs":{},"写":{"docs":{},"法":{"docs":{},"一":{"docs":{},":":{"docs":{"alg/704_Binary_Search.html":{"ref":"alg/704_Binary_Search.html","tf":0.0036363636363636364}}}},"二":{"docs":{},":":{"docs":{"alg/704_Binary_Search.html":{"ref":"alg/704_Binary_Search.html","tf":0.0036363636363636364}}}}}}}},"什":{"docs":{},"么":{"docs":{},"地":{"docs":{},"方":{"docs":{},"学":{"docs":{},"到":{"docs":{},"过":{"docs":{},"链":{"docs":{},"表":{"docs":{},"？":{"docs":{"1_linkedlist.html":{"ref":"1_linkedlist.html","tf":0.02564102564102564}}}}}}}}}}}},"其":{"docs":{},"他":{"docs":{},":":{"docs":{"1_linkedlist.html":{"ref":"1_linkedlist.html","tf":0.02564102564102564}}}}},"操":{"docs":{},"作":{"docs":{},"：":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"，":{"docs":{},"递":{"docs":{},"归":{"docs":{"1_linkedlist.html":{"ref":"1_linkedlist.html","tf":0.02564102564102564}}}}}}},"栈":{"docs":{},"，":{"docs":{},"递":{"docs":{},"归":{"docs":{"2_tree.html":{"ref":"2_tree.html","tf":0.041666666666666664}}}}}}}}},"比":{"docs":{},"如":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"中":{"docs":{},"的":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"b":{"docs":{},"u":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"中":{"docs":{},"存":{"docs":{},"放":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"链":{"docs":{},"表":{"docs":{},"连":{"docs":{},"接":{"docs":{},"存":{"docs":{},"储":{"docs":{},"，":{"docs":{},"比":{"docs":{},"如":{"docs":{},"垃":{"docs":{},"圾":{"docs":{},"收":{"docs":{},"集":{"docs":{},"中":{"docs":{},"的":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"，":{"docs":{},"比":{"docs":{},"如":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{},"x":{"docs":{},"文":{"docs":{},"件":{"docs":{},"系":{"docs":{},"统":{"docs":{},"的":{"docs":{},"i":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"，":{"docs":{},"比":{"docs":{},"如":{"docs":{},"堆":{"docs":{},"上":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"创":{"docs":{},"建":{"docs":{},"，":{"docs":{},"比":{"docs":{},"如":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"是":{"docs":{},"不":{"docs":{},"啦":{"docs":{},")":{"docs":{},"，":{"docs":{},"比":{"docs":{},"如":{"docs":{},"图":{"docs":{},"，":{"docs":{},"还":{"docs":{},"有":{"docs":{},"比":{"docs":{},"如":{"docs":{},"某":{"docs":{},"次":{"docs":{},"作":{"docs":{},"业":{"docs":{},"存":{"docs":{},"放":{"docs":{},"j":{"docs":{},"o":{"docs":{},"b":{"docs":{"1_linkedlist.html":{"ref":"1_linkedlist.html","tf":0.02564102564102564}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"组":{"docs":{},"合":{"docs":{},":":{"docs":{"1_linkedlist.html":{"ref":"1_linkedlist.html","tf":0.02564102564102564}}}}},"链":{"docs":{},"表":{"docs":{"1_linkedlist.html":{"ref":"1_linkedlist.html","tf":0.02564102564102564}},"+":{"docs":{},"字":{"docs":{},"典":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"所":{"docs":{},"有":{"docs":{},"用":{"docs":{},"过":{"docs":{},"的":{"docs":{},"点":{"docs":{},"会":{"docs":{},"插":{"docs":{},"入":{"docs":{},"链":{"docs":{},"表":{"docs":{},"末":{"docs":{},"尾":{"docs":{},"：":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.003246753246753247}}}}}}}}}}}}}}}}}}}}}}}},"难":{"docs":{},"点":{"docs":{},"：":{"docs":{},"边":{"docs":{},"界":{"docs":{},"判":{"docs":{},"断":{"docs":{},"，":{"docs":{},"指":{"docs":{},"针":{"docs":{},"指":{"docs":{},"向":{"docs":{"1_linkedlist.html":{"ref":"1_linkedlist.html","tf":0.02564102564102564}}}}}}}}}}},"写":{"docs":{},"递":{"docs":{},"归":{"docs":{},"，":{"docs":{},"有":{"docs":{},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{},"的":{"docs":{},"递":{"docs":{},"归":{"docs":{},"，":{"docs":{},"没":{"docs":{},"有":{"docs":{},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{},"的":{"docs":{},"递":{"docs":{},"归":{"docs":{},"，":{"docs":{},"作":{"docs":{},"为":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"递":{"docs":{},"归":{"docs":{},"等":{"docs":{},"等":{"docs":{},".":{"docs":{},".":{"docs":{"2_tree.html":{"ref":"2_tree.html","tf":0.041666666666666664}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"分":{"docs":{},"为":{"docs":{},"三":{"docs":{},"步":{"docs":{},"：":{"docs":{},"定":{"docs":{},"义":{"docs":{},"递":{"docs":{},"归":{"docs":{},"函":{"docs":{},"数":{"docs":{},"以":{"docs":{},"及":{"docs":{},"它":{"docs":{},"的":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"，":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"递":{"docs":{},"归":{"docs":{},"关":{"docs":{},"系":{"docs":{},"(":{"docs":{},"改":{"docs":{},"指":{"docs":{},"针":{"docs":{},")":{"docs":{},"，":{"docs":{},"设":{"docs":{},"定":{"docs":{},"返":{"docs":{},"回":{"docs":{},"条":{"docs":{},"件":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"为":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"返":{"docs":{},"回":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},")":{"docs":{"alg/206_Reverse_Linked_List.html":{"ref":"alg/206_Reverse_Linked_List.html","tf":0.014705882352941176}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"割":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{"alg/143_Reorder_List.html":{"ref":"alg/143_Reorder_List.html","tf":0.007462686567164179}}}}}},"，":{"docs":{},"反":{"docs":{},"转":{"docs":{},"，":{"docs":{},"合":{"docs":{},"并":{"docs":{"alg/143_Reorder_List.html":{"ref":"alg/143_Reorder_List.html","tf":0.007462686567164179}}}}}}}}}},"四":{"docs":{},"步":{"docs":{},"见":{"docs":{},"图":{"docs":{"alg/206_Reverse_Linked_List.html":{"ref":"alg/206_Reverse_Linked_List.html","tf":0.014705882352941176}}}}}},"和":{"docs":{},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"的":{"docs":{},"递":{"docs":{},"归":{"docs":{},"写":{"docs":{},"法":{"docs":{},"有":{"docs":{},"点":{"docs":{},"像":{"docs":{},"，":{"docs":{},"先":{"docs":{},"定":{"docs":{},"义":{"docs":{},"n":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"让":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"递":{"docs":{},"归":{"docs":{},"去":{"docs":{},"得":{"docs":{},"到":{"docs":{},"结":{"docs":{},"果":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"让":{"docs":{},"n":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"=":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"连":{"docs":{},"接":{"docs":{},"整":{"docs":{},"理":{"docs":{},"好":{"docs":{},"的":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"过":{"docs":{},"程":{"docs":{},"见":{"docs":{},"图":{"docs":{},"。":{"docs":{"alg/24_Swap_Nodes_in_Pairs.html":{"ref":"alg/24_Swap_Nodes_in_Pairs.html","tf":0.011363636363636364}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"alg/101_Symmetric_Tree.html":{"ref":"alg/101_Symmetric_Tree.html","tf":0.01694915254237288}}}}}},"求":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{},"基":{"docs":{},"本":{"docs":{},"一":{"docs":{},"样":{"docs":{"alg/111_Minimum_Depth_of_Binary_Tree.html":{"ref":"alg/111_Minimum_Depth_of_Binary_Tree.html","tf":0.017543859649122806}}}}}}}}}}}}}}}},"见":{"docs":{},"图":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"，":{"docs":{},"d":{"docs":{},"u":{"docs":{},"m":{"docs":{},"m":{"docs":{},"y":{"docs":{},"的":{"docs":{},"作":{"docs":{},"用":{"docs":{},"是":{"docs":{},"创":{"docs":{},"建":{"docs":{},"新":{"docs":{},"的":{"docs":{},"链":{"docs":{},"表":{"docs":{},"头":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"结":{"docs":{},"果":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"用":{"docs":{},"，":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"是":{"docs":{},"取":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"基":{"docs":{},"础":{"docs":{},"。":{"docs":{"alg/24_Swap_Nodes_in_Pairs.html":{"ref":"alg/24_Swap_Nodes_in_Pairs.html","tf":0.011363636363636364}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"快":{"docs":{},"慢":{"docs":{},"指":{"docs":{},"针":{"docs":{},"求":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"间":{"docs":{},"值":{"docs":{},"，":{"docs":{},"奇":{"docs":{},"数":{"docs":{},"时":{"docs":{},"f":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"=":{"docs":{},"=":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"，":{"docs":{},"偶":{"docs":{},"数":{"docs":{},"时":{"docs":{},"f":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"=":{"docs":{},"=":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{"alg/876_Middle_of_the_Linked_List.html":{"ref":"alg/876_Middle_of_the_Linked_List.html","tf":0.02857142857142857}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"当":{"docs":{},"快":{"docs":{},"指":{"docs":{},"针":{"docs":{},"和":{"docs":{},"慢":{"docs":{},"指":{"docs":{},"针":{"docs":{},"重":{"docs":{},"叠":{"docs":{},"时":{"docs":{},"说":{"docs":{},"明":{"docs":{},"有":{"docs":{},"c":{"docs":{},"y":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"，":{"docs":{},"w":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"条":{"docs":{},"件":{"docs":{},"是":{"docs":{},"为":{"docs":{},"了":{"docs":{},"没":{"docs":{},"有":{"docs":{},"c":{"docs":{},"y":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"跳":{"docs":{},"出":{"docs":{},"循":{"docs":{},"环":{"docs":{},"。":{"docs":{"alg/141_Linked_List_Cycle.html":{"ref":"alg/141_Linked_List_Cycle.html","tf":0.02127659574468085}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"寻":{"docs":{},"找":{"docs":{},"c":{"docs":{},"y":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"的":{"docs":{},"开":{"docs":{},"始":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{},"相":{"docs":{},"比":{"docs":{},"快":{"docs":{},"慢":{"docs":{},"指":{"docs":{},"针":{"docs":{},"另":{"docs":{},"外":{"docs":{},"多":{"docs":{},"加":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"，":{"docs":{},"用":{"docs":{},"来":{"docs":{},"从":{"docs":{},"头":{"docs":{},"寻":{"docs":{},"找":{"docs":{},"c":{"docs":{},"y":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"入":{"docs":{},"口":{"docs":{"alg/142_Linked_List_Cycle_II.html":{"ref":"alg/142_Linked_List_Cycle_II.html","tf":0.017543859649122806}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"?":{"docs":{"alg/160_Intersection_of_Two_Linked_Lists.html":{"ref":"alg/160_Intersection_of_Two_Linked_Lists.html","tf":0.03636363636363636},"alg/203_Remove_Linked_List_Elements.html":{"ref":"alg/203_Remove_Linked_List_Elements.html","tf":0.007142857142857143},"alg/83_Remove_Duplicates_from_Sorted_List.html":{"ref":"alg/83_Remove_Duplicates_from_Sorted_List.html","tf":0.014925373134328358},"alg/21_Merge_Two_Sorted_Lists.html":{"ref":"alg/21_Merge_Two_Sorted_Lists.html","tf":0.017857142857142856},"alg/23_Merge_k_Sorted_Lists.html":{"ref":"alg/23_Merge_k_Sorted_Lists.html","tf":0.006944444444444444},"alg/617_Merge_Two_Binary_Trees.html":{"ref":"alg/617_Merge_Two_Binary_Trees.html","tf":0.022727272727272728}}},"由":{"docs":{},"于":{"docs":{},"第":{"docs":{},"一":{"docs":{},"次":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"可":{"docs":{},"能":{"docs":{},"因":{"docs":{},"为":{"docs":{},"不":{"docs":{},"等":{"docs":{},"长":{"docs":{},"找":{"docs":{},"不":{"docs":{},"到":{"docs":{},"交":{"docs":{},"点":{"docs":{},"，":{"docs":{},"在":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"完":{"docs":{},"之":{"docs":{},"后":{"docs":{},"需":{"docs":{},"要":{"docs":{},"让":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"尾":{"docs":{},"部":{"docs":{},"等":{"docs":{},"于":{"docs":{},"对":{"docs":{},"方":{"docs":{},"的":{"docs":{},"头":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"找":{"docs":{},"到":{"docs":{},"交":{"docs":{},"点":{"docs":{},"跳":{"docs":{},"出":{"docs":{},"循":{"docs":{},"环":{"docs":{},"。":{"docs":{"alg/160_Intersection_of_Two_Linked_Lists.html":{"ref":"alg/160_Intersection_of_Two_Linked_Lists.html","tf":0.01818181818181818}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"删":{"docs":{},"除":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"修":{"docs":{},"改":{"docs":{},"值":{"docs":{},"和":{"docs":{},"指":{"docs":{},"针":{"docs":{},"。":{"docs":{"alg/237_Delete_Node_in_a_Linked_List.html":{"ref":"alg/237_Delete_Node_in_a_Linked_List.html","tf":0.05555555555555555}}}}}}}}}}}}}}}}}}}}}},"不":{"docs":{},"看":{"docs":{},"答":{"docs":{},"案":{"docs":{},"还":{"docs":{},"是":{"docs":{},"写":{"docs":{},"不":{"docs":{},"出":{"docs":{},"啊":{"docs":{},"啊":{"docs":{},"啊":{"docs":{},"啊":{"docs":{},"啊":{"docs":{},"啊":{"docs":{},"啊":{"docs":{},"啊":{"docs":{},"啊":{"docs":{"alg/83_Remove_Duplicates_from_Sorted_List.html":{"ref":"alg/83_Remove_Duplicates_from_Sorted_List.html","tf":0.014925373134328358}}}}}}}}}}}}}}}}}}},"加":{"docs":{},"新":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"，":{"docs":{},"直":{"docs":{},"接":{"docs":{},"用":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"，":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"就":{"docs":{},"像":{"docs":{},"一":{"docs":{},"条":{"docs":{},"蛇":{"docs":{},"游":{"docs":{},"走":{"docs":{},"在":{"docs":{},"l":{"docs":{},"和":{"docs":{},"r":{"docs":{},"之":{"docs":{},"间":{"docs":{},"什":{"docs":{},"么":{"docs":{},"鬼":{"docs":{},"啦":{"docs":{},"。":{"docs":{},"这":{"docs":{},"里":{"docs":{},"有":{"docs":{},"个":{"docs":{},"坑":{"docs":{},"点":{"docs":{},"就":{"docs":{},"是":{"docs":{},"必":{"docs":{},"须":{"docs":{},"加":{"docs":{},"上":{"docs":{},"r":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"alg/86_Partition_List.html":{"ref":"alg/86_Partition_List.html","tf":0.010526315789473684}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"你":{"docs":{},"�":{"docs":{},"�":{"docs":{"alg/83_Remove_Duplicates_from_Sorted_List.html":{"ref":"alg/83_Remove_Duplicates_from_Sorted_List.html","tf":0.014925373134328358}}}}},"新":{"docs":{},"建":{"docs":{},"两":{"docs":{},"个":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"，":{"docs":{},"小":{"docs":{},"于":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"去":{"docs":{},"左":{"docs":{},"边":{"docs":{},"，":{"docs":{},"大":{"docs":{},"于":{"docs":{},"去":{"docs":{},"右":{"docs":{},"边":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"拼":{"docs":{},"一":{"docs":{},"拼":{"docs":{"alg/86_Partition_List.html":{"ref":"alg/86_Partition_List.html","tf":0.010526315789473684}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"无":{"docs":{},"脑":{"docs":{},"新":{"docs":{},"添":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"法":{"docs":{"alg/86_Partition_List.html":{"ref":"alg/86_Partition_List.html","tf":0.010526315789473684}}}}}}}}}}},"偶":{"docs":{},"数":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"会":{"docs":{},"被":{"docs":{},"分":{"docs":{},"为":{"1":{"docs":{"alg/143_Reorder_List.html":{"ref":"alg/143_Reorder_List.html","tf":0.007462686567164179}}},"docs":{}}}}}}}}}}},"奇":{"docs":{},"数":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"会":{"docs":{},"被":{"docs":{},"分":{"docs":{},"为":{"1":{"docs":{"alg/143_Reorder_List.html":{"ref":"alg/143_Reorder_List.html","tf":0.007462686567164179}}},"docs":{}}}}}}}}}}},"过":{"docs":{},"程":{"docs":{},"见":{"docs":{},"图":{"docs":{"alg/147_Insertion_Sort_List.html":{"ref":"alg/147_Insertion_Sort_List.html","tf":0.023809523809523808}}}}}},"将":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"等":{"docs":{},"分":{"docs":{},"，":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"函":{"docs":{},"数":{"docs":{},"和":{"2":{"1":{"docs":{},"题":{"docs":{},"一":{"docs":{},"样":{"docs":{"alg/148_Sort_List.html":{"ref":"alg/148_Sort_List.html","tf":0.011764705882352941}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}},"优":{"docs":{},"先":{"docs":{},"队":{"docs":{},"列":{"docs":{},"重":{"docs":{},"写":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"的":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"从":{"docs":{},"小":{"docs":{},"到":{"docs":{},"大":{"docs":{},"取":{"docs":{},"点":{"docs":{},"。":{"docs":{"alg/23_Merge_k_Sorted_Lists.html":{"ref":"alg/23_Merge_k_Sorted_Lists.html","tf":0.006944444444444444}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.006493506493506494}}}}}}},"主":{"docs":{},"要":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"：":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.003246753246753247}}}}}}},"作":{"docs":{},"用":{"docs":{},"：":{"docs":{},"平":{"docs":{},"衡":{"docs":{},"时":{"docs":{},"间":{"docs":{},"和":{"docs":{},"空":{"docs":{},"间":{"docs":{},"的":{"docs":{},"开":{"docs":{},"销":{"docs":{},"。":{"docs":{},"高":{"docs":{},"的":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"alg/146_LRU_Cache.html":{"ref":"alg/146_LRU_Cache.html","tf":0.003246753246753247}}}}}}}}}}}}}}}}}}}}}},"判":{"docs":{},"断":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"元":{"docs":{},"素":{"docs":{},"是":{"docs":{},"否":{"docs":{},"在":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"g":{"docs":{},")":{"docs":{},"中":{"docs":{},"得":{"docs":{},"到":{"docs":{},"连":{"docs":{},"通":{"docs":{},"分":{"docs":{},"量":{"docs":{},"的":{"docs":{},"个":{"docs":{},"数":{"docs":{},"（":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"为":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"或":{"docs":{},"者":{"docs":{},"不":{"docs":{},"在":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"中":{"docs":{},"）":{"docs":{},"。":{"docs":{"alg/817_Linked_List_Components.html":{"ref":"alg/817_Linked_List_Components.html","tf":0.05}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"基":{"docs":{},"本":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"注":{"docs":{},"意":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"复":{"docs":{},"用":{"docs":{},"，":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"和":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"来":{"docs":{},"写":{"docs":{"alg/707_Design_Linked_List.html":{"ref":"alg/707_Design_Linked_List.html","tf":0.004291845493562232}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"础":{"docs":{},"递":{"docs":{},"归":{"docs":{"alg/100_Same_Tree.html":{"ref":"alg/100_Same_Tree.html","tf":0.022727272727272728}}}}}},"高":{"docs":{},"票":{"docs":{},"答":{"docs":{},"案":{"docs":{},"改":{"docs":{},"写":{"docs":{},"：":{"docs":{"alg/19_Remove_Nth_Node_From_End_of_List.html":{"ref":"alg/19_Remove_Nth_Node_From_End_of_List.html","tf":0.009433962264150943}}}}}}}}},"递":{"docs":{},"归":{"docs":{},"三":{"docs":{},"连":{"docs":{},"：":{"docs":{},"前":{"docs":{},"中":{"docs":{},"后":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"，":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"遍":{"docs":{},"历":{"docs":{"2_tree.html":{"ref":"2_tree.html","tf":0.041666666666666664}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"理":{"docs":{},"解":{"docs":{},"：":{"docs":{},"先":{"docs":{},"写":{"docs":{},"出":{"docs":{},"三":{"docs":{},"个":{"docs":{},"点":{"docs":{},"的":{"docs":{},"前":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"发":{"docs":{},"现":{"docs":{},"后":{"docs":{},"面":{"docs":{},"两":{"docs":{},"个":{"docs":{},"左":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"的":{"docs":{},"i":{"docs":{},"f":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"d":{"docs":{},"f":{"docs":{},"s":{"docs":{},"复":{"docs":{},"用":{"docs":{},"。":{"docs":{"alg/144_Binary_Tree_Preorder_Traversal.html":{"ref":"alg/144_Binary_Tree_Preorder_Traversal.html","tf":0.009345794392523364}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"同":{"docs":{},"样":{"docs":{},"先":{"docs":{},"写":{"docs":{},"出":{"docs":{},"三":{"docs":{},"个":{"docs":{},"点":{"docs":{},"的":{"docs":{},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"发":{"docs":{},"现":{"docs":{},"迷":{"docs":{},"之":{"docs":{},"缩":{"docs":{},"进":{"docs":{},"里":{"docs":{},"的":{"docs":{},"两":{"docs":{},"个":{"docs":{},"左":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"的":{"docs":{},"i":{"docs":{},"f":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"d":{"docs":{},"f":{"docs":{},"s":{"docs":{},"复":{"docs":{},"用":{"docs":{},"。":{"docs":{"alg/94_Binary_Tree_Inorder_Traversal.html":{"ref":"alg/94_Binary_Tree_Inorder_Traversal.html","tf":0.008771929824561403}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"写":{"docs":{},"出":{"docs":{},"三":{"docs":{},"个":{"docs":{},"点":{"docs":{},"的":{"docs":{},"后":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"发":{"docs":{},"现":{"docs":{},"迷":{"docs":{},"之":{"docs":{},"缩":{"docs":{},"进":{"docs":{},"里":{"docs":{},"的":{"docs":{},"两":{"docs":{},"个":{"docs":{},"左":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"的":{"docs":{},"i":{"docs":{},"f":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"d":{"docs":{},"f":{"docs":{},"s":{"docs":{},"复":{"docs":{},"用":{"docs":{},"。":{"docs":{"alg/145_Binary_Tree_Postorder_Traversal.html":{"ref":"alg/145_Binary_Tree_Postorder_Traversal.html","tf":0.014705882352941176}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"时":{"docs":{},"，":{"docs":{},"每":{"docs":{},"层":{"docs":{},"路":{"docs":{},"径":{"docs":{},"加":{"docs":{},"一":{"docs":{"alg/104_Maximum_Depth_of_Binary_Tree.html":{"ref":"alg/104_Maximum_Depth_of_Binary_Tree.html","tf":0.02702702702702703}}}}}}}}}}}},"右":{"docs":{},"边":{"docs":{},"的":{"docs":{},"坑":{"docs":{},"：":{"docs":{},"d":{"docs":{},"f":{"docs":{},"s":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},",":{"docs":{"alg/144_Binary_Tree_Preorder_Traversal.html":{"ref":"alg/144_Binary_Tree_Preorder_Traversal.html","tf":0.009345794392523364},"alg/94_Binary_Tree_Inorder_Traversal.html":{"ref":"alg/94_Binary_Tree_Inorder_Traversal.html","tf":0.008771929824561403},"alg/145_Binary_Tree_Postorder_Traversal.html":{"ref":"alg/145_Binary_Tree_Postorder_Traversal.html","tf":0.014705882352941176}}}}}}}}}}}}}}}}}}}}}},"左":{"docs":{},"边":{"docs":{},"的":{"docs":{},"坑":{"docs":{},"：":{"docs":{},"d":{"docs":{},"f":{"docs":{},"s":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{"alg/144_Binary_Tree_Preorder_Traversal.html":{"ref":"alg/144_Binary_Tree_Preorder_Traversal.html","tf":0.009345794392523364},"alg/94_Binary_Tree_Inorder_Traversal.html":{"ref":"alg/94_Binary_Tree_Inorder_Traversal.html","tf":0.008771929824561403},"alg/145_Binary_Tree_Postorder_Traversal.html":{"ref":"alg/145_Binary_Tree_Postorder_Traversal.html","tf":0.014705882352941176}}}}}}}}}}}}}}}}}}}}},"栈":{"docs":{},"：":{"docs":{},"先":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"右":{"docs":{},"边":{"docs":{},"再":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"左":{"docs":{},"边":{"docs":{},"，":{"docs":{},"保":{"docs":{},"持":{"docs":{},"左":{"docs":{},"边":{"docs":{},"元":{"docs":{},"素":{"docs":{},"永":{"docs":{},"远":{"docs":{},"在":{"docs":{},"栈":{"docs":{},"顶":{"docs":{},"（":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"出":{"docs":{},"栈":{"docs":{},"）":{"docs":{"alg/144_Binary_Tree_Preorder_Traversal.html":{"ref":"alg/144_Binary_Tree_Preorder_Traversal.html","tf":0.009345794392523364}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"。":{"docs":{},"注":{"docs":{},"意":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"的":{"docs":{},"用":{"docs":{},"法":{"docs":{},"，":{"docs":{},"比":{"docs":{},"如":{"docs":{},"有":{"docs":{},"时":{"docs":{},"候":{"docs":{},"时":{"docs":{},"d":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"，":{"docs":{},"有":{"docs":{},"时":{"docs":{},"候":{"docs":{},"时":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"。":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"一":{"docs":{},"般":{"docs":{},"用":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"容":{"docs":{},"量":{"docs":{},"满":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"不":{"docs":{},"会":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"异":{"docs":{},"常":{"docs":{},"而":{"docs":{},"是":{"docs":{},"返":{"docs":{},"回":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"。":{"docs":{"alg/102_Binary_Tree_Level_Order_Traversal.html":{"ref":"alg/102_Binary_Tree_Level_Order_Traversal.html","tf":0.010869565217391304}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"永":{"docs":{},"远":{"docs":{},"的":{"docs":{},"栈":{"docs":{},"，":{"docs":{},"注":{"docs":{},"意":{"docs":{},"用":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"alg/94_Binary_Tree_Inorder_Traversal.html":{"ref":"alg/94_Binary_Tree_Inorder_Traversal.html","tf":0.008771929824561403}}}}}}}}}}}}}}}}}}}},"z":{"docs":{},"i":{"docs":{},"g":{"docs":{},"z":{"docs":{},"a":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},",":{"docs":{"alg/102_Binary_Tree_Level_Order_Traversal.html":{"ref":"alg/102_Binary_Tree_Level_Order_Traversal.html","tf":0.010869565217391304}}}}}}}}}}}}}}}}}},"和":{"docs":{},"i":{"docs":{},"i":{"docs":{},"记":{"docs":{},"得":{"docs":{},"去":{"docs":{},"看":{"docs":{},"答":{"docs":{},"案":{"docs":{},"，":{"docs":{},"还":{"docs":{},"有":{"docs":{},"d":{"docs":{},"f":{"docs":{},"s":{"docs":{},"递":{"docs":{},"归":{"docs":{},"解":{"docs":{},"法":{"docs":{},"。":{"docs":{"alg/102_Binary_Tree_Level_Order_Traversal.html":{"ref":"alg/102_Binary_Tree_Level_Order_Traversal.html","tf":0.010869565217391304}}}}}}}}}}}}}}}}}}}}}},"那":{"docs":{},"道":{"docs":{},"题":{"docs":{},"用":{"docs":{},"了":{"docs":{},"f":{"docs":{},"l":{"docs":{},"a":{"docs":{},"g":{"docs":{},".":{"docs":{},".":{"docs":{"alg/102_Binary_Tree_Level_Order_Traversal.html":{"ref":"alg/102_Binary_Tree_Level_Order_Traversal.html","tf":0.010869565217391304}}}}}}}}}}}}}}}}}}},"简":{"docs":{},"单":{"docs":{},"递":{"docs":{},"归":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"先":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"三":{"docs":{},"个":{"docs":{},"点":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"写":{"docs":{},"出":{"docs":{},"来":{"docs":{},"。":{"docs":{"alg/617_Merge_Two_Binary_Trees.html":{"ref":"alg/617_Merge_Two_Binary_Trees.html","tf":0.022727272727272728}}}}}}}}}}}}}}}}}}}}}},"\\":{"docs":{"alg/104_Maximum_Depth_of_Binary_Tree.html":{"ref":"alg/104_Maximum_Depth_of_Binary_Tree.html","tf":0.08108108108108109}}},"保":{"docs":{},"证":{"docs":{},"树":{"docs":{},"是":{"docs":{},"一":{"docs":{},"层":{"docs":{},"的":{"docs":{},"且":{"docs":{},"左":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"有":{"docs":{},"一":{"docs":{},"边":{"docs":{},"为":{"0":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"[":{"1":{"docs":{},",":{"3":{"docs":{},"]":{"docs":{},"，":{"docs":{},"最":{"docs":{},"小":{"docs":{},"值":{"docs":{},"为":{"2":{"docs":{"alg/111_Minimum_Depth_of_Binary_Tree.html":{"ref":"alg/111_Minimum_Depth_of_Binary_Tree.html","tf":0.017543859649122806}}},"docs":{}}}}}}}},"docs":{}}},"docs":{}}}}}},"docs":{}}}}}}}}}}}}}}}}},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"完":{"docs":{},"全":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"的":{"docs":{},"深":{"docs":{},"度":{"docs":{},"为":{"docs":{},"⌊":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"⌋":{"docs":{},"+":{"1":{"docs":{},"。":{"docs":{},"如":{"4":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"树":{"docs":{},"有":{"docs":{},"⌊":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"(":{"4":{"docs":{},")":{"docs":{},"⌋":{"docs":{},"+":{"1":{"docs":{},"=":{"3":{"docs":{},"层":{"docs":{},"。":{"docs":{"alg/222_Count_Complete_Tree_Nodes.html":{"ref":"alg/222_Count_Complete_Tree_Nodes.html","tf":0.010869565217391304}}}}},"docs":{}}},"docs":{}}}}},"docs":{}}}}}}}}}}}}},"docs":{}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}},"则":{"docs":{},"n":{"0":{"docs":{},"＝":{"docs":{},"n":{"2":{"docs":{},"＋":{"1":{"docs":{},"。":{"docs":{"alg/222_Count_Complete_Tree_Nodes.html":{"ref":"alg/222_Count_Complete_Tree_Nodes.html","tf":0.010869565217391304}}}},"docs":{}}},"docs":{}}}},"docs":{}}},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"法":{"docs":{},"求":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"不":{"docs":{},"能":{"docs":{},"判":{"docs":{},"断":{"docs":{},"是":{"docs":{},"不":{"docs":{},"是":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"，":{"docs":{},"且":{"docs":{},"为":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{"alg/222_Count_Complete_Tree_Nodes.html":{"ref":"alg/222_Count_Complete_Tree_Nodes.html","tf":0.010869565217391304}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"度":{"docs":{},"为":{"2":{"docs":{},"的":{"docs":{},"结":{"docs":{},"点":{"docs":{},"数":{"docs":{},"为":{"docs":{},"n":{"2":{"docs":{},",":{"docs":{"alg/222_Count_Complete_Tree_Nodes.html":{"ref":"alg/222_Count_Complete_Tree_Nodes.html","tf":0.010869565217391304}}}},"docs":{}}}}}}}},"docs":{}}},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"很":{"docs":{},"迷":{"docs":{},"的":{"docs":{},"递":{"docs":{},"归":{"docs":{},"，":{"docs":{"alg/222_Count_Complete_Tree_Nodes.html":{"ref":"alg/222_Count_Complete_Tree_Nodes.html","tf":0.010869565217391304}}}}}}}}}}},"补":{"docs":{},"一":{"docs":{},"下":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"的":{"docs":{},"性":{"docs":{},"质":{"docs":{},"：":{"docs":{"alg/222_Count_Complete_Tree_Nodes.html":{"ref":"alg/222_Count_Complete_Tree_Nodes.html","tf":0.010869565217391304}}}}}}}}}}}}},"length":2216},"corpusTokens":["!!!","!=","!stack.isempty())","\"\"\"","#","######","#1","#2","#3","&&","'infinity'dy前面加上decimal，因为浮点数精度可能出现问题导致不同的点算出相同的斜率。","(!(other","(!q.isempty())","(!s.isempty())","(!stack.isempty()","((head==","(1,","(1，1)中有两个点斜率相等","(count","(countnodes(root.left)","(countnodes(root.right)","(cur","(cur.next","(entri","(even","(fast","(head","(head.next","(head.next)","(head.val","(heada","(headb","(i","(int","(int)","(integ","(l","(l.val","(l1","(l1.val","(left","(left.val","(leftdepth","(lists.length","(major","(map.containskey(n))","(map.get(n)","(math.pow(m,","(n","(n>=0)","(newlist.size()","(node","(node.left","(node.next","(node.right","(nums[m]","(other","(point)","(point.next","(pre","(pre.next","(pre.val","(q.size()","(r","(root","(root.left","(root.right","(stack.isempty()","(t1","(this.root","(when","(x","*","*/","+","+1","+=","..","/","/**","//","0","0)","0),","0):","0,","0.75f,","0.75f是hashmap默认的load","0:","0;","0],","1","1)","1),","1):","1);","1)=2个节点","1)个节点。如第二层有2^(2","1,","1.","1.0)","1.boyer","1.recursion:","1.recustion:","1.使用总容量为k+1的优先队列维护值最大的k个点，一旦总数量y超过k，移除y中值最小的点。堆中插入和删除的最差时间为o(log(k),log(k)为堆的高度，又因为遍历整个数组，所以时间复杂度为n*log(k)","1.第i层有2^(i","100,","100.","101,","101.","102","102.","104,","104.","11,","111,","111.","112","112.","12,","13,","141,","141.","142","142.","143.","143（这两题前两步一样，都是先分割再反转，再比较或合并）,","144.","144，94，145,","145.","146(lru)","146.","147","147.","148","148.","149.","15","15,","15.","160","160.","169.","17","173.","18.","19","19.","1;","1=7个节点","1])","1],","1|","1})","1个节点。如三层的树最多有2^3","1改成len(nums)免去检查","2","2)","2));","2):","2,","2.iteration:","2.字典","2.深度为k的二叉树最多有2^k","20","203,","203.","206,","206.","21,","21.","215.","222,","222.","226,","226.","23(一开始的impl很慢)","23.","234,","234.","237,","237.","24","24.","2;","2]","2];","2]]","2sum","2|","2})","3","3,","3.对任何一棵二叉树t,","3.排序+返回中间值","328","328.","3;","3]","3sum","3sum.","3sum偷懒法..","3来说，分割完之后lh.next=1","4","4,","4.具有","4sum","5","5,","5]","6","6,","617","617.","69.","6]","7","704.","707,","707.","817","817.","82,","82.","83,","83.","86,","86.","872","872.","876,","876.","9","94.",":",":rtype:",":type",";","=","==",">",">2",">2,",">2,而rh=4",">2....的无限循环，所以需要删除rh最后这个2。（为什么会有这个2呢是因为在最后一次加node的时候没有新的值了，so这个2没有被覆盖。",">2。rh最后这个2和lh最后这个2是一样的node，所以在运行l.next",">3",">4",">4;",">5",">6",">7",">=",">>","?","@overrid","@return","[1,","[2,","[3,","[3]","[4,","[[0,","[]","[root]","\\","^","_","__init__(self):","__init__(self,","_add(self,","_remove(self,","a,","a;","a[m]","access","add","addathead(self,","addatindex(self,","addattail(self,","algorithm","append","array","arraylist();","arraylist<>(),","arraylist<>();","arraylist<>(arrays.aslist(lists));","arrays.sort(nums);","b)","b;","befor","bfs:","binari","bool","boolean","boundari","bound。","bs(a,","bs(nums,","bs1(a,","bstiter","bstiterator(object):","bstiterator(treenod","cach","capac","capacity)","capacity):","capacity:","capacity;","case","check","class","collect","collection.reverseorder());","compar","comparator()","compare(listnod","complet","compon","comput","concat","concis","continue;","count","count++;","countnodes(root.left)","countnodes(root.right);","countnodes(treenod","cur","cur)","cur.next","cur.next.v","cur.next;","cur.val)","cur;","curr","curr.next","curr.next.next","curr.val","cycl","cycle:","data","decimal(di","def","del","delet","deleteatindex(self,","deleteduplicates(head.next);","deleteduplicates(listnod","deletenode(listnod","deletion:","depth","depth:","design","detectcycle(listnod","dfs(cur,","dfs(int[]","dfs(left.left,","dfs(left.right,","dfs(listnod","dfs(null,","dfs(nums,","dfs(root,","dfs(root.left,","dfs(root.right,","dfs(self,","dfs(treenod","dict","differ","dummi","dummy,","dummy.next","dummy.next;","dummy;","duplic","dx","eldest","eldest)","element","else:","end","entri","entry.next;","entry;","equal","equals(object","even","even.next","even.next.next;","even.next;","even;","evenhead","evenhead;","factor会减少空间开销，但是会增加collision，从而增加了get和put的时间开销。","factor，用于hashmap的自动扩容。比如说hashmap有16个buckets，当12(16*0.75)个buckets装满后，hashmap会自动增加到32个buckets。","fals","false;","fast","fast,","fast.next","fast.next.next;","fast:","find","findkthlargest(int[]","findleaf(root.left,","findleaf(root.right,","findleaf(root1,","findleaf(root2,","findleaf(treenod","first","flag","flag:","follow","forward","foursum(int[]","g)","gcd","get(int","get(self,","getdepth(root.left);","getdepth(root.right);","getdepth(treenod","getintersectionnode(listnod","greater","hascycle(listnod","hashcod","hashcode()","hashmap<>();","hashset();","hasnext()","hasnext(self):","haspathsum(root.left,","haspathsum(root.right,","haspathsum(treenod","head","head)","head):","head);","head,","head.next","head.next,","head.next.next;","head.next.val)","head.next;","head.val","head.val)","head:","head;","heada","heada,","heada.next;","heada;","headb","headb)","headb.next;","headb;","heap","here.","https://en.wikipedia.org/wiki/boyer%e2%80%93moore_majority_vote_algorithm","https://gregable.com/2013/10/major","https://leetcode.com/problems/max","i;","if(left","if(pre.next","if(root","ii","import","index","index)","index):","index,","index:","initi","inord","inordertraversal(self,","inordertraversal(treenod","inordertraversal2(treenod","inorder的递归写法，思路就是按照左中右的处理顺序(左边处理完了，将左边的节点放入结果，上述图例中按照1111231...的顺序执行)","input","input:","insert","inserted.","insertion,","insertion:","insertionsortlist(listnod","instanceof","int","int[]","intern","intersect","intersection:","invalid,","invert","inverttree(root.right);","inverttree(self,","inverttree(tmp);","inverttree(treenod","ispalindrome(listnod","issametree(left.left,","issametree(left.right,","issametree(treenod","issymmetric(treenod","iter","j","j,","java","java用linkedlist做，注意判空不要直接像python一样和null比较。。","k","k)","key","key)","key):","key,","key:","kth","k重复的判断，i,","l","l)","l,","l1","l1,","l1.next","l1.next;","l2","l2)","l2);","l2;","larger","largest","last","last_nod","last_node.next","leaf","leafsimilar(treenod","left","left,","left.val","leftdepth","leftdepth));","len(a)","len(nums)","len(points)","length","length++;","length,","level","levelnum","levelorder(treenod","lh","line","line/discuss/47113/a","line/discuss/47268/two","link","linkedhashmap<>(capacity,","linkedhashmap直接实现，注意参数和removeeldestentry的返回值，这个配置在tij中也提到过，没有被访问过的元素会在列表的最前面。","linkedlist","linkedlist();","linkedlist<>();","list","list);","list,","list.","list>","list[list[int]]","list[point]","listnod","listnode(0)","listnode(0),","listnode(0);","lists)","lists,","lists.length","lists[l];","list升级版","lower_bound(a,","lru","lrucache(object):","lrucache2","lrucache2(int","lrucache:","l不能和它前面的数字相等，l不和它后面的数字相等。题目要求不能有重复的结果。","l和r=m同时写会造成死循环，例如bs([3,4,7,9,10,11],6)，所以要在l=r的时候跳出循环进行边界检查。这个程序会错的原因是返回时没有进行检查。","l没有对边界进行检查。如bs1([3,4,7,9,10,11],11)返回","m","m)","m);","m,","m;","major","major;","majority.html","majorityelement(int[]","majorityelement3(int[]","map","map(value,","map.get(j)","map.get(n)","map.getordefault(key,","map.put(key,","map.put(n,","map;","math.max(maxdepth(root.left),","math.min(left,","math.pow(2,","max","maxdepth(root.right));","maxdepth(treenod","maximum","maxpoints(point[]","maxpoints(self,","maxpoints2(self,","merg","merge(l,","merge(l1,","merge(listnod","merge2list(newlist.get(newlist.size()","merge:","mergeklists(listnode[]","mergeklists2(listnode[]","mergetrees(t1.left,","mergetrees(t1.right,","mergetrees(treenod","mergetwolists(listnod","middl","middle,","middlenode(listnod","mindepth(root.left);","mindepth(root.right);","mindepth(treenod","minimum","moor","mylinkedlist(object):","mysqrt(int","mysqrt3(int","n","n)","n):","n.next","n/2次，用字典记录下各个斜率（或者点）出现的次数。最后返回结果为一次迭代中最多的点+重复的点+本身","n:","n;","naiv","naive方法:","naive方法设置dummi","naive方法，先移除头部，再移除中间。","naive方法，要算两次","naive比较法，效率比较低，还有一种同时比较的方法，记得去看。","naive级别递归三连其一：前序遍历。","naive级别递归三连其三：后序遍历。","naive级别递归三连其二：中序遍历。","naive迭代","naive递归","new","new_nod","newlist","newlist.add(0,","newlist.get(0);","newlist.get(newlist.size()","newlist.remove(newlist.size()","next","next()","next(self):","next_nod","next_node);","next_node.prev","next_node.right","next_node.v","nextnod","nextnode.right;","nextnode.val;","node","node(0,","node(key,","node(object):","node(val)","node)","node):","node.left","node.left:","node.left;","node.next","node.next.next;","node.next.v","node.next.val;","node.next;","node.prev","node.right","node.right:","node.right;","node.v","node.valu","node:","node;","node_remov","nodea","nodeb","nodes:","node再比较大小。","node方法","node法跳过重复nod","none","none:","note","nth","null","null)","null,","null;","null;。比如拿例题head","num","number","numcomponents(listnod","nums)","nums,","nums.length","nums.length;","nums[i","nums[i]","nums[i];","nums[j","nums[j]","nums[j];","nums[l]","nums[nums.length","o","o(1)","o(n)","o(nlogn)","o.x","o.y;","odd","odd.next","odd.next.next;","odd.next;","oddevenlist(listnod","order","ordereddict","ordereddict()","other)","other;","p","p;","pair","palindrom","partit","partition(listnod","partition(listnode[]","partition(lists,","partition:","path","point","point(int","point))","point.next","point.next.next","point.next.next;","point.next;","pointers，注意排序，处理重复，数组越界问题。","points)","points):","points.length;","points:","pop:","postord","postordertraversal(treenod","pre","pre,","pre.next","pre.next.v","pre.next;","pre;","preorder","preordertraversal(treenod","prev_nod","prev_node.next","priorityqueu","priorityqueue<>();","priorityqueue<>(lists.length,","priorityqueue<>(nums.length,","privat","protect","public","put(int","put(self,","python","q","q.offer(node.left);","q.offer(node.right);","q.offer(num);","q.offer(root);","q.poll();","q.size();","queue","queue.append(node.left)","queue.append(node.right)","queue.pop(0)","queue:","r","r)","r);","r,","r;","range(index","range(index):","range(len(queue)):","range(n","re","recurs","recursion:","recus","ref","rel2","rel2;","remov","removeeldestentry(map.entri","removeelements(head.next,","removeelements(listnod","removenthfromend(listnod","removenthfromend(self,","reorder","reorderlist(listnod","res)","res):","res);","res.add(node.val);","res.add(root.left.val);","res.add(root.right.val);","res.add(root.val);","res.append(root.val)","res.append(val)","res1","res1);","res1.equals(res2);","res2","res2);","res;","result","return","return;","revers","reverselist(listnod","reverselist(self,","reversion:","rh","rh.next;的时候，其实会同时改变l和rh，结果就变成1","right","right)","right.left)","right.left);","right.right)","right.right);","right.val","right.val)","rightdepth","rightdepth)","rightdepth));","root","root)","root):","root,","root.left","root.left,","root.left;","root.right","root.right);","root.right,","root.val)","root.val);","root.val;","root1,","root2)","root:","root;","r移动的区域。","s","s.pop();","s.push(node.left);","s.push(node.right);","s.push(root);","s1","s1.next","s1;","s2","s2.next","s2.next;","s2;","same","search","search(int[]","second","self._add(new_node)","self._add(node)","self._remove(node)","self._remove(node_remove)","self.addatindex(0,","self.addatindex(self.size,","self.cap","self.capac","self.d","self.d.pop(key)","self.d.popitem(last=false)","self.d:","self.d[key]","self.d[node_remove.key]","self.dfs(root,","self.dfs(root.left,","self.dfs(root.right,","self.head","self.head,","self.head.next","self.inverttree(root.left)","self.inverttree(root.right)","self.key","self.next","self.p","self.p.left","self.p:","self.prev","self.siz","self.size:","self.stack","self.stack.append(self.p)","self.stack.pop()","self.tail","self.tail.prev","self.val","self.valu","set","similar","size","size()","slow","slow)","slow.next","slow.next.next","slow.next;","slow;","smallest","solut","sort","sort:","sortlist(head),","sortlist(listnod","sortlist(slow);","split","sqrt(x)","stack","stack.pop();","stack.push(node);","stack.push(root);","stack.push(this.root);","stack;","start","static","step","store","structur","subr","sum","sum)","swap","swappairs(head.next.next);","swappairs(listnod","symmetr","t1,","t1.left","t1.right","t1.val","t1;","t2","t2)","t2.left);","t2.right);","t2.val;","tar","tar):","tar:","target","target)","target):","target);","target:","th","third","this)","this.capac","this.i","this.root","this.root.left;","this.x","threesum(int[]","tmp","tmp;","travers","tree","treenod","tree很像，把root弄成了两个点，并且左右子树相反。","true","true)","true;","two","twosum(int[]","updat","val","val)","val):","val);","val.append(node.val)","val.reverse()","val:","valid.","valu","value)","value):","value);","value:","void","vote","whether","x","x)","x;","y","y;","y的gcd来同时缩小x，y的范围避免浮点数的精度问题。","zigzaglevelorder(self,","zigzag和ii记得去看答案，还有dfs递归解法。","zigzag那道题用了flag..","{","{(0,","{(1,","{3,2,1,5,6,4},","{}","||","}","};","一个例子","一个例子：检查左边的none后pop(1),检查右边的none后pop(3)","一开始的实现，拼一拼","一样的java递归写法:","不加新node，直接用head，head就像一条蛇游走在l和r之间什么鬼啦。这里有个坑点就是必须加上r.next","不看答案还是写不出啊啊啊啊啊啊啊啊啊","个结点的完全二叉树的深度为⌊log(n)⌋+1。如4个节点的树有⌊log(4)⌋+1=3层。","主要逻辑：","二分法的扩展，条件是一个数的平方大于x。可以用乘法或者除法进行比较，除法的时候要注意l=1，不然的话m有可能等于零出错。加上二分法最基本的两种写法，那么可以有四种写法。返回lower","二分法的边界问题还是有一点点搞的，特别是题目变形的时候会发现其实是在猜边界写题....这样其实很不好，我觉得这个边界问题其实就是除法取下界的锅。给出两种错掉的迭代写法：","二叉搜索树的中序遍历，定义一个self.p指针，永远指向下一个节点。思路是左边的节点全部一次性进栈，完成后，pop最上面的节点a，检查它是否有右节点，如果有的话就作为下一个遍历的根节点，因为此节点的值大于a小于a的父节点。如果a没有右节点，说明没有值在a和a的父节点之间，那么直接popa的父节点作为答案。","二叉树的性质:","什么地方学到过链表？","优先队列重写listnode的comparator从小到大取点。","作用：平衡时间和空间的开销。高的load","你🐴","使用java重写python第二种方法的时候，逻辑上只要xy相等point就算相等，需要重写point中的equals和hashcode方法，hashcode方法在每次存储或者查找map的时候计算point存放的位置，equals用来比较两个点的x,y是否相等。","使用offer()或者add()方法时会进行排序，这里维护一个小堆。poll()方法移除优先级最高的点，这里是最小值","使用two","保证树是一层的且左右子树有一边为0的时候[1,3]，最小值为2","偶数list会被分为1","其他:","分为三步：定义递归函数以及它的input，考虑递归关系(改指针)，设定返回条件(cur为null的时候返回pre)","分割的时候，","分割，反转，合并","则n0＝n2＋1。","删除链表中的一个节点，就是修改值和指针。","判断链表中元素是否在set(g)中得到连通分量的个数（下一个节点为null或者不在set中）。","变种写法..len(nums)","可以用遍历法求，但是不能判断是不是complete，且为o(n)的时间复杂度","右边的坑：dfs(root.right,","和same","和中序遍历的递归写法有点像，先定义n，然后让head.next递归去得到结果，最后让n.next=head连接整理好的链表，过程见图。","和求maxdepth基本一样","四步见图","基本操作，注意函数的复用，addathead和addattail可以用addatindex来写","基础递归","外部增加循环，判断重复，内部修改起始值。","大概是o(logn)?","奇数list会被分为1","如果使用这种方法的话需要在slope","如果其叶结点数为n0,","字典法，将原字典key和value转换，遍历一次数组并返回第一个数字出现的index和当前数字的index。","寻找cycle的开始节点。相比快慢指针另外多加了一个指针entry，用来从头寻找cycle入口","将list等分，merge函数和21题一样","左边的坑：dfs(root.left,","度为2的结点数为n2,","快慢指针求链表中间值，奇数时fast.next==null，偶数时fast==nul","快慢指针，当快指针和慢指针重叠时说明有cycle，while条件是为了没有cycle的时候跳出循环。","思路是两个for循环，需要比较(n","操作：栈，递归","操作：迭代，递归","新建两个list，小于val去左边，大于去右边，最后拼一拼","无脑新添node法","时间复杂度o(n^2)(for里面套while)，空间复杂度o(k)","时间复杂度o(n^3)(for里面套for再while)，空间复杂度o(k)","是一个很迷的递归，","最大堆可以用collection.reverseorder()这个comparator，别的自定义对象需要自己实现compar","栈。注意list的用法，比如有时候时deque，有时候时linkedlist。queue的时候一般用offer方法，因为容量满的时候不会抛出异常而是返回false。","栈：先push右边再push左边，保持左边元素永远在栈顶（第一个出栈）","正确写法一：小于判断加检查边界后返回(len(num);","正确写法二：小于等于加直接返回(len(num)","比如hashmap中的每一个bucket中存放的对象可以用链表连接存储，比如垃圾收集中的freelist，比如linux文件系统的inode，比如堆上对象的创建，比如poll(是不啦)，比如图，还有比如某次作业存放job","永远的栈，注意用linkedlist","求区间中重复数字的上下界长度：","注意要对数组进行排序，因为要比较大小决定指针移动方向，没有排序会跳过某些数字。","溢出的特殊处理就不提了。","由于第一次遍历可能因为不等长找不到交点，在遍历完之后需要让链表的尾部等于对方的头节点，直到找到交点跳出循环。","第二种方法使用求x,","简单递归，可以先考虑三个点的情况写出来。","算法笔记","粉色格子为count=0时换主，返回绿色格子","紫色是i经过的区域，绿色是l,","组合:","补一下二叉树的性质：","见图顺序，dummy的作用是创建新的链表头，返回结果的时候用，point是取节点的基础。","计算一个列表中最多能有几个点在一条线上。","过程见图","运行例子","返回最大值3","还有一种比较快的方法没有看，好像是直接比较乘法。","这三句是防止i,","这里是l=m+1而不是l=m：是因为除法取下界会造成l边界不会改变，从而形成死循环。","这里的even和odd指的是index。奇数位的连成一个链表，偶数位的连成一个链表，最后这两个链表连一连。","递归三连：前中后序遍历，level遍历","递归时，每层路径加一","递归的理解：先写出三个点的前序遍历，然后发现后面两个左右子树的if可以用dfs复用。","递归的理解：写出三个点的后序遍历，然后发现迷之缩进里的两个左右子树的if可以用dfs复用。","递归的理解：同样先写出三个点的中序遍历，然后发现迷之缩进里的两个左右子树的if可以用dfs复用。","链表","链表+字典实现，所有用过的点会插入链表末尾：","错误写法一:","错误写法二:","难点：写递归，有返回值的递归，没有返回值的递归，作为helper函数的递归等等..","难点：边界判断，指针指向","高票答案改写：","🥰alg"],"pipeline":["stopWordFilter","stemmer"]},"store":{"./":{"url":"./","title":"🥰Alg","keywords":"","body":"算法笔记\n"},"alg/1_2Sum.html":{"url":"alg/1_2Sum.html","title":"1. 2Sum","keywords":"","body":"1. 2Sum\n字典法，将原字典key和value转换，遍历一次数组并返回第一个数字出现的index和当前数字的index。\npublic int[] twoSum(int[] nums, int target) {\n    Map map = new HashMap<>();\n    for (int i = 0; i  nums[i]; map.get(j)  i; map(value, index)\n        }\n    }\n    return null;\n}\n\n"},"alg/15_3Sum.html":{"url":"alg/15_3Sum.html","title":"15. 3Sum","keywords":"","body":"15. 3Sum\n使用Two Pointers，注意排序，处理重复，数组越界问题。\n注意要对数组进行排序，因为要比较大小决定指针移动方向，没有排序会跳过某些数字。\npublic List> threeSum(int[] nums) {\n    List> res = new ArrayList<>();\n    // sort the list !!!\n    Arrays.sort(nums); \n    for (int i = 0; i  0 && nums[i] == nums[i - 1]) continue;\n        // start binary search\n        int target = -nums[i];\n        int l = i + 1,\n            r = nums.length - 1;\n        while (l \n紫色是i经过的区域，绿色是l, r移动的区域。\n\n这三句是防止i, j, k重复的判断，i, l不能和它前面的数字相等，l不和它后面的数字相等。题目要求不能有重复的结果。\nif (i > 0 && nums[i] == nums[i - 1]) continue;\nwhile (l \n时间复杂度O(n^2)(for里面套while)，空间复杂度O(k)\n"},"alg/18_4Sum.html":{"url":"alg/18_4Sum.html","title":"18. 4Sum","keywords":"","body":"18. 4Sum\n3Sum偷懒法.. 外部增加循环，判断重复，内部修改起始值。\npublic List> FourSum(int[] nums, int target) {\n        List> res = new ArrayList<>();\n        // sort the list\n        Arrays.sort(nums);\n        // line 11, 12, 13, 15, 17 are different with 3sum.\n        for (int j = 0; j  0 && nums[j] == nums[j - 1]) continue;\n            for (int i = j + 1; i  j + 1 && nums[i] == nums[i - 1]) continue;\n                // start binary search\n                int tar = target - nums[i] - nums[j];\n                int l = i + 1,\n                        r = nums.length - 1;\n                while (l \n时间复杂度O(n^3)(for里面套for再while)，空间复杂度O(k)\n"},"alg/69_Sqrtx.html":{"url":"alg/69_Sqrtx.html","title":"69. Sqrt(x)","keywords":"","body":"69. Sqrt(x)\n二分法的扩展，条件是一个数的平方大于x。可以用乘法或者除法进行比较，除法的时候要注意l=1，不然的话m有可能等于零出错。加上二分法最基本的两种写法，那么可以有四种写法。返回lower bound。\npublic int mySqrt(int x) {\n    if (x >> 1;\n        if (Math.pow(m, 2) == x) return m;\n        if (Math.pow(m, 2) >> 1;\n        if (x / m == m) return m;\n        if (x / m > m) {\n            l = m + 1;\n        } else {\n            r = m;\n        }\n    }\n    return l - 1;\n}\n\npublic int mySqrt3(int x) {\n    if (x >> 1;\n        if (Math.pow(m, 2) == x) return m;\n        if (Math.pow(m, 2) >> 1;\n        if (x / m == m) return m;\n        if (x / m > m) {\n            l = m + 1;\n        } else {\n            r = m - 1;\n        }\n    }\n    return l - 1;\n}\n\n"},"alg/149_Max_Points_on_a_Line.html":{"url":"alg/149_Max_Points_on_a_Line.html","title":"149. Max Points on a Line","keywords":"","body":"149. Max Points on a Line\n计算一个列表中最多能有几个点在一条线上。\n思路是两个for循环，需要比较(n - 1) + .. + 2 + 1 = (n - 1) * n/2次，用字典记录下各个斜率（或者点）出现的次数。最后返回结果为一次迭代中最多的点+重复的点+本身\nPython\n如果使用这种方法的话需要在slope = Decimal(dy * 1.0) / dx if dx != 0 else 'infinity'dy前面加上decimal，因为浮点数精度可能出现问题导致不同的点算出相同的斜率。\ndef maxPoints2(self, points):\n    \"\"\"\n    :type points: List[Point]\n    :rtype: int\n    \"\"\"\n    if len(points) \n第二种方法使用求x, y的GCD来同时缩小x，y的范围避免浮点数的精度问题。\ndef maxPoints(self, points):\n    \"\"\"\n    :type points: List[Point]\n    :rtype: int\n    \"\"\"\n    if len(points) \n运行例子\ninput = [[0, 0], [1, 0], [1, 1], [2, 2]]\n ^               \n2|     o   \n1|  o         \n o--o---------------->\n 0  1  2  3  4  5  6\n\n# first iteration\n{(1, 0): 1})\n{(1, 0): 1, (1, 1): 1})\n{(1, 0): 1, (1, 1): 2}) # (1，1)中有两个点斜率相等 返回最大值3\n# second iteration\n{(0, 1): 1})\n{(0, 1): 1, (1, 2): 1})\n# third iteration\n{(1, 1): 1})\n\nJava\n使用Java重写python第二种方法的时候，逻辑上只要xy相等point就算相等，需要重写Point中的equals和hashCode方法，hashcode方法在每次存储或者查找map的时候计算Point存放的位置，equals用来比较两个点的x,y是否相等。\n还有一种比较快的方法没有看，好像是直接比较乘法。\nclass Point {\n    int x;\n    int y;\n    Point(int a, int b) {\n        x = a;\n        y = b;\n    }\n\n    @Override\n    public boolean equals(Object other) {\n        if (other == this) return true;\n        if (!(other instanceof Point)) return false;\n        Point o = (Point) other;\n        return this.x == o.x && this.y == o.y;\n    }\n    public int hashCode() {\n        return x * 4 + y * 3;\n    }\n}\n\nclass Solution {\n    public int maxPoints(Point[] points) {\n        int result = 0;\n        int size = points.length;\n        Map map = new HashMap<>();\n        for (int i = 0; i \nRef\nhttps://leetcode.com/problems/max-points-on-a-line/discuss/47113/A-java-solution-with-notes\nhttps://leetcode.com/problems/max-points-on-a-line/discuss/47268/Two-concise-python-solutions\ngcd\nhashcode\n"},"alg/169_Majority_Element.html":{"url":"alg/169_Majority_Element.html","title":"169. Majority Element","keywords":"","body":"169. Majority Element\n1.Boyer-Moore majority vote algorithm\nO(n) + O(1)\npublic static int majorityElement(int[] nums) {\n    int major = 0, count = 0;\n    for (int n: nums) {\n        if (count == 0) {\n            count++;\n            major = n;\n        } else if (major == n)  {\n            count++;\n        } else {\n            count--;\n        }\n    }\n    return major;\n}\n\n粉色格子为count=0时换主，返回绿色格子\n\n2.字典\nO(n) + O(n)\npublic int majorityElement3(int[] nums) {\n    Map map = new HashMap<>();\n    for (Integer n : nums) {\n        if (map.containsKey(n)) {\n            map.put(n, map.get(n) + 1);\n        } else {\n            map.put(n, 1);\n        }\n        if (map.get(n) > nums.length / 2) {\n            return n;\n        }\n    }\n    return 0;\n}\n\n3.排序+返回中间值 \nO(nlogn) + 大概是O(logn)?\npublic int majorityElement(int[] nums) {\n    Arrays.sort(nums);\n    return nums[nums.length / 2];\n}\n\nRef\nhttps://en.wikipedia.org/wiki/Boyer%E2%80%93Moore_majority_vote_algorithm\nhttps://gregable.com/2013/10/majority-vote-algorithm-find-majority.html\n"},"alg/173_Binary_Search_Tree_Iterator.html":{"url":"alg/173_Binary_Search_Tree_Iterator.html","title":"173. Binary Search Tree Iterator","keywords":"","body":"173. Binary Search Tree Iterator\n二叉搜索树的中序遍历，定义一个self.p指针，永远指向下一个节点。思路是左边的节点全部一次性进栈，完成后，pop最上面的节点A，检查它是否有右节点，如果有的话就作为下一个遍历的根节点，因为此节点的值大于A小于A的父节点。如果A没有右节点，说明没有值在A和A的父节点之间，那么直接popA的父节点作为答案。\nclass BSTIterator(object):\n\n    def __init__(self, root):\n        \"\"\"\n        :type root: TreeNode\n        \"\"\"\n        self.stack = []\n        self.p = root\n        while self.p:\n            self.stack.append(self.p)\n            self.p = self.p.left\n\n\n    def next(self):\n        \"\"\"\n        @return the next smallest number\n        :rtype: int\n        \"\"\"\n        if self.stack or self.p:\n            while self.p:\n                self.stack.append(self.p)\n                self.p = self.p.left\n            else:\n                next_node = self.stack.pop()\n                self.p = next_node.right\n                return next_node.val if next_node else None\n\n    def hasNext(self):\n        \"\"\"\n        @return whether we have a next smallest number\n        :rtype: bool\n        \"\"\"\n        if not self.stack and not self.p:\n            return False\n        return True\n\njava用linkedlist做，注意判空不要直接像python一样和null比较。。\nclass BSTIterator {\n    private LinkedList stack;\n    private TreeNode root;\n\n    public BSTIterator(TreeNode root) {\n        stack = new LinkedList<>();\n        this.root = root;\n        while (this.root != null) {\n            stack.push(this.root);\n            this.root = this.root.left;\n        }\n    }\n\n    /**\n     * @return the next smallest number\n     */\n    public int next() {\n        if (!stack.isEmpty() || root != null) {\n            while (root != null) {\n                stack.push(root);\n                root = root.left;\n            }\n            if (root == null) {\n                TreeNode nextNode = stack.pop();\n                root = nextNode.right;\n                return nextNode.val;\n            }\n        }\n        return 0;\n    }\n\n    /**\n     * @return whether we have a next smallest number\n     */\n    public boolean hasNext() {\n        if (stack.isEmpty() && root == null) {\n            return false;\n        }\n        return true;\n    }\n}\n\n一个例子：检查左边的None后pop(1),检查右边的None后pop(3)\n\ninorder的递归写法，思路就是按照左中右的处理顺序(左边处理完了，将左边的节点放入结果，上述图例中按照1111231...的顺序执行)\n    def inorderTraversal(self, root):\n        res = []\n        self.dfs(root, res)\n        return res\n\n    def dfs(self, root, res):\n        if not root:\n            return\n\n        self.dfs(root.left, res)  #1\n        res.append(root.val)      #2\n        self.dfs(root.right, res) #3\n\n"},"alg/215_Kth_Largest_Element_in_an_Array.html":{"url":"alg/215_Kth_Largest_Element_in_an_Array.html","title":"215. Kth Largest Element in an Array","keywords":"","body":"215. Kth Largest Element in an Array\n1.使用总容量为k+1的优先队列维护值最大的k个点，一旦总数量Y超过k，移除Y中值最小的点。堆中插入和删除的最差时间为O(log(k),log(k)为堆的高度，又因为遍历整个数组，所以时间复杂度为n*log(k)\npublic int findKthLargest(int[] nums, int k) {\n    PriorityQueue q = new PriorityQueue<>();\n    for (int num : nums) {\n        q.offer(num);\n        if (q.size() > k) {\n            q.poll();\n        }\n    }\n    return q.poll();\n}\n\n\n使用offer()或者add()方法时会进行排序，这里维护一个小堆。poll()方法移除优先级最高的点，这里是最小值\n\n最大堆可以用Collection.reverseOrder()这个comparator，别的自定义对象需要自己实现comparator\n\n\nPriorityQueue q = new PriorityQueue<>(nums.length, Collection.reverseOrder());\n\n一个例子\ninput: {3,2,1,5,6,4}, 3\n\nBefor pop: [3]\nAfter pop: [3]\nBefor pop: [2, 3]\nAfter pop: [2, 3]\nBefor pop: [1, 3, 2]\nAfter pop: [1, 3, 2]\nBefor pop: [1, 3, 2, 5]\nAfter pop: [2, 3, 5]\nBefor pop: [2, 3, 5, 6]\nAfter pop: [3, 6, 5]\nBefor pop: [3, 4, 5, 6]\nAfter pop: [4, 6, 5]\nreturn 4\n\n"},"alg/704_Binary_Search.html":{"url":"alg/704_Binary_Search.html","title":"704. Binary Search","keywords":"","body":"704. Binary Search\n二分法的边界问题还是有一点点搞的，特别是题目变形的时候会发现其实是在猜边界写题....这样其实很不好，我觉得这个边界问题其实就是除法取下界的锅。给出两种错掉的迭代写法：\n\n错误写法一:\n\ndef bs(a, tar):\n    l, r = 0, len(a) - 1\n    # while l  tar: r = m \n        # if a[m]  tar: r = m - 1\n    return -1                       # \n\n这里是l=m+1而不是l=m：是因为除法取下界会造成l边界不会改变，从而形成死循环。\nwhile l和r=m同时写会造成死循环，例如bs([3,4,7,9,10,11],6)，所以要在l=r的时候跳出循环进行边界检查。这个程序会错的原因是返回时没有进行检查。\n\n错误写法二:\n\n\ndef bs1(a, tar):\n    l, r = 0, len(a) - 1\n    while l  tar: r = m - 1\n    return -1\n\n\nl没有对边界进行检查。如bs1([3,4,7,9,10,11],11)返回-1\n\n正确写法一：小于判断加检查边界后返回(len(num); l \ndef bs(nums, target):\n    l, r = 0, len(nums) - 1\n    while l  target: r = m \n    if nums[l] == target:  ###### check the boundary \n        return l\n    else:\n        return -1\n\n变种写法..len(nums) - 1改成len(nums)免去检查\ndef bs(nums, target):\n    l, r = 0, len(nums)\n    while l  target: r = m \n    return -1\n\n一样的java递归写法:\n    public int search(int[] nums, int target) {\n        int l = 0, r = nums.length;\n        return dfs(nums, l, r, target);\n    }\n\n    public int dfs(int[] nums, int l, int r, int target) {\n        if (l >= r) {\n            return -1;\n        }\n        int m = l + (r - l) / 2;\n        if (nums[m] == target) return m;\n        if (nums[m] > target) {\n            return dfs(nums, l, m, target);\n        } else {\n            return dfs(nums, m + 1, r, target);\n        }\n    }\n\n正确写法二：小于等于加直接返回(len(num) - 1; l \ndef bs(nums, target):\n    l, r = 0, len(nums) - 1\n    while l  target: r = m - 1\n    return -1\n\n一样的java递归写法:\n    public int search(int[] nums, int target) {\n        int l = 0, r = nums.length - 1;\n        return dfs(nums, l, r, target);\n    }\n\n    public int dfs(int[] nums, int l, int r, int target) {\n        if (l > r) {\n            return -1;\n        }\n        int m = l + (r - l) / 2;\n        if (nums[m] == target) return m;\n        if (nums[m] > target) {\n            return dfs(nums, l, m - 1, target);\n        } else {\n            return dfs(nums, m + 1, r, target);\n        }\n    }\n\n溢出的特殊处理就不提了。\n求区间中重复数字的上下界长度：    \ndef lower_bound(a, tar): \n    l, r = 0, len(a)\n    while l \n"},"1_linkedlist.html":{"url":"1_linkedlist.html","title":"Linked List","keywords":"","body":"链表\n\n难点：边界判断，指针指向\n操作：迭代，递归\n\ninsertion:\n147\n\ndeletion:\n237, 203, 83, 82, 19\n\npartition:\n86, 328\n\nreversion: \n206, 24\n\nfind middle, cycle:\n876, 141, 142\n\nintersection:\n160\n\nmerge: \n21, 23(一开始的impl很慢)\n\nsort:\n148\n\n组合:\n707, 234, 143（这两题前两步一样，都是先分割再反转，再比较或合并）, 146(LRU)\n\n其他:\n817\n\n\n什么地方学到过链表？\n比如hashmap中的每一个bucket中存放的对象可以用链表连接存储，比如垃圾收集中的freelist，比如linux文件系统的inode，比如堆上对象的创建，比如poll(是不啦)，比如图，还有比如某次作业存放jobs\n\n"},"alg/206_Reverse_Linked_List.html":{"url":"alg/206_Reverse_Linked_List.html","title":"206. Reverse Linked List","keywords":"","body":"206. Reverse Linked List\n1.recursion:\n分为三步：定义递归函数以及它的input，考虑递归关系(改指针)，设定返回条件(cur为null的时候返回pre)\npublic ListNode reverseList(ListNode head) {\n    return dfs(null, head);\n}\n\npublic ListNode dfs(ListNode pre, ListNode cur) {\n    if (cur == null) return pre;\n    ListNode next_node = cur.next;\n    cur.next = pre;\n    return dfs(cur, next_node);\n}\n\n\n2.iteration:\n四步见图\ndef reverseList(self, head):\n    \"\"\"\n    :type head: ListNode\n    :rtype: ListNode\n    \"\"\"\n    pre = None\n    while head:\n        next_node = head.next\n        head.next = pre\n        pre = head\n        head = next_node\n    return pre\n\n\n"},"alg/24_Swap_Nodes_in_Pairs.html":{"url":"alg/24_Swap_Nodes_in_Pairs.html","title":"24. Swap Nodes in Pairs","keywords":"","body":"24. Swap Nodes in Pairs\nreverse linked list升级版\n1.recustion:\n和中序遍历的递归写法有点像，先定义n，然后让head.next递归去得到结果，最后让n.next=head连接整理好的链表，过程见图。\npublic ListNode swapPairs(ListNode head) {\n    if ((head== null) || (head.next) == null) {\n        return head;\n    }\n    ListNode n = head.next;\n    head.next = swapPairs(head.next.next);\n    n.next = head;\n    return n;\n}\n\n\n2.iteration:\n见图顺序，dummy的作用是创建新的链表头，返回结果的时候用，point是取节点的基础。\npublic ListNode swapPairs(ListNode head) {\n    ListNode dummy = new ListNode(0);\n    dummy.next = head;\n    ListNode point = dummy;\n    while (point.next != null && point.next.next != null) {\n        ListNode s1 = point.next;\n        ListNode s2 = point.next.next;\n        point.next = s2;\n        s1.next = s2.next;\n        s2.next = s1;\n        point = s1;\n    }\n    return dummy.next;\n}\n\n\n"},"alg/876_Middle_of_the_Linked_List.html":{"url":"alg/876_Middle_of_the_Linked_List.html","title":"876. Middle of the Linked List","keywords":"","body":"876. Middle of the Linked List\n快慢指针求链表中间值，奇数时fast.next==null，偶数时fast==null\npublic ListNode middleNode(ListNode head) {\n    ListNode fast = head, slow = head;\n    while (fast != null && fast.next != null) {\n        fast = fast.next.next;\n        slow = slow.next;\n    }\n    return slow;\n}\n\n"},"alg/141_Linked_List_Cycle.html":{"url":"alg/141_Linked_List_Cycle.html","title":"141. Linked List Cycle","keywords":"","body":"141. Linked List Cycle\n快慢指针，当快指针和慢指针重叠时说明有cycle，while条件是为了没有cycle的时候跳出循环。\npublic boolean hasCycle(ListNode head) {\n    ListNode fast = head, slow = head;\n    while (fast != null && fast.next != null) { // in case that no cycle in the linked list\n        fast = fast.next.next;\n        slow = slow.next;\n        if (fast == slow) {\n            return true;\n        }\n    }\n    return false;\n}\n\n"},"alg/142_Linked_List_Cycle_II.html":{"url":"alg/142_Linked_List_Cycle_II.html","title":"142. Linked List Cycle II","keywords":"","body":"142. Linked List Cycle II\n寻找cycle的开始节点。相比快慢指针另外多加了一个指针entry，用来从头寻找cycle入口\npublic ListNode detectCycle(ListNode head) {\n    ListNode entry = head,\n             fast = head,\n             slow = head;\n    while (fast != null && fast.next != null) {\n        fast = fast.next.next;\n        slow = slow.next;\n        if (fast == slow) {\n            while (entry != slow) {\n                entry = entry.next;\n                slow = slow.next;\n            }\n            return entry;\n        }\n    }\n    return null;\n}\n\n\n"},"alg/160_Intersection_of_Two_Linked_Lists.html":{"url":"alg/160_Intersection_of_Two_Linked_Lists.html","title":"160. Intersection of Two Linked Lists","keywords":"","body":"160. Intersection of Two Linked Lists\n由于第一次遍历可能因为不等长找不到交点，在遍历完之后需要让链表的尾部等于对方的头节点，直到找到交点跳出循环。\npublic ListNode getIntersectionNode(ListNode headA, ListNode headB) {\n    if (headA == null || headB == null) return null;\n\n    ListNode nodeA = headA,\n             nodeB = headB;\n    while (headA != headB) {\n        headA = (headA == null) ? nodeB : headA.next;\n        headB = (headB == null) ? nodeA : headB.next;\n    }\n    return headA;\n}\n\n\n"},"alg/237_Delete_Node_in_a_Linked_List.html":{"url":"alg/237_Delete_Node_in_a_Linked_List.html","title":"237. Delete Node in a Linked List","keywords":"","body":"237. Delete Node in a Linked List\n删除链表中的一个节点，就是修改值和指针。\npublic void deleteNode(ListNode node) {\n    node.val = node.next.val;\n    node.next = node.next.next;\n}\n\n"},"alg/203_Remove_Linked_List_Elements.html":{"url":"alg/203_Remove_Linked_List_Elements.html","title":"203. Remove Linked List Elements","keywords":"","body":"203. Remove Linked List Elements\nrecursion\npublic ListNode removeElements(ListNode head, int val) {\n    if (head == null) return null;\n    head.next = removeElements(head.next, val);\n    return (head.val == val) ? head.next : head;\n}\n\nnaive方法，先移除头部，再移除中间。\npublic ListNode removeElements(ListNode head, int val) {\n    // remove head\n    while (head != null && head.val == val) head = head.next;\n    // remove internal nodes\n    ListNode node = head;\n    while (node != null && node.next != null) {\n        if (node.next != null && node.next.val == val) {\n            node.next = node.next.next;\n        } else {\n            node = node.next;\n        }\n    }\n    return head;\n}\n\ndummy node方法\npublic ListNode removeElements(ListNode head, int val) {\n    ListNode dummy = new ListNode(0);\n    dummy.next = head;\n    ListNode cur = dummy;\n    while (head != null) {\n        if (head.val != val) {\n            cur.next = head;\n            cur = head;\n        }\n        head = head.next;\n    }\n    cur.next = null; // in case that all elements in the list are same\n    return dummy.next;\n}\n\n\n"},"alg/83_Remove_Duplicates_from_Sorted_List.html":{"url":"alg/83_Remove_Duplicates_from_Sorted_List.html","title":"83. Remove Duplicates from Sorted List","keywords":"","body":"83. Remove Duplicates from Sorted List\nrecursion: \n你🐴 不看答案还是写不出啊啊啊啊啊啊啊啊啊\npublic ListNode deleteDuplicates(ListNode head) {\n    if (head == null || head.next == null) return head;\n    head.next = deleteDuplicates(head.next);\n    return (head.val == head.next.val) ? head.next : head;\n}\n\nnaive方法:\npublic ListNode deleteDuplicates(ListNode head) {\n    ListNode node = head;\n    while (head != null) {\n        while (head.next != null && head.val == head.next.val) {\n            head.next = head.next.next;\n        }\n        head = head.next;\n    }\n    return node;\n}\n\n"},"alg/82_Remove_Duplicates_from_Sorted_List_II.html":{"url":"alg/82_Remove_Duplicates_from_Sorted_List_II.html","title":"82. Remove Duplicates from Sorted List II","keywords":"","body":"82. Remove Duplicates from Sorted List II\ndummy node法跳过重复node\npublic ListNode deleteDuplicates(ListNode head) {\n    ListNode dummy = new ListNode(0);\n    dummy.next = head;\n    ListNode pre = dummy;\n    ListNode cur = head;\n\n    while (cur != null) {\n        while (cur.next != null && cur.next.val == cur.val) {\n            cur = cur.next;\n        }\n        if(pre.next == cur) {\n            pre = pre.next;\n        } else {\n            pre.next = cur.next;\n        }\n        cur = cur.next;\n    }\n    return dummy.next;\n}\n\n"},"alg/86_Partition_List.html":{"url":"alg/86_Partition_List.html","title":"86. Partition List","keywords":"","body":"86. Partition List\n新建两个list，小于val去左边，大于去右边，最后拼一拼\n无脑新添Node法\npublic ListNode partition(ListNode head, int x) {\n    ListNode l = new ListNode(0),\n             r = new ListNode(0);\n    ListNode lh = l, rh = r;\n    while (head != null) {\n        if (head.val \n不加新node，直接用head，head就像一条蛇游走在l和r之间什么鬼啦。这里有个坑点就是必须加上r.next = null;。比如拿例题head = 1->4->3->2->5->2, x = 3来说，分割完之后lh.next=1->2->2,而rh=4->3->5->2。rh最后这个2和lh最后这个2是一样的node，所以在运行l.next = rh.next;的时候，其实会同时改变l和rh，结果就变成1->2->2->4->3->5->2->4->3->5->2....的无限循环，所以需要删除rh最后这个2。（为什么会有这个2呢是因为在最后一次加node的时候没有新的值了，so这个2没有被覆盖。\npublic ListNode partition(ListNode head, int x) {\n    ListNode l = new ListNode(0), r = new ListNode(0);\n    ListNode lh = l, rh = r;\n    ListNode node = head;\n    while (head != null) {\n        if (head.val \n"},"alg/234_Palindrome_Linked_List.html":{"url":"alg/234_Palindrome_Linked_List.html","title":"234. Palindrome Linked List","keywords":"","body":"234. Palindrome Linked List\nnaive迭代\npublic boolean isPalindrome(ListNode head) {\n    // split\n    ListNode fast = head,\n             slow = head;\n    while (fast != null && fast.next != null) {\n        fast = fast.next.next;\n        slow = slow.next;\n    }\n\n    // reverse\n    ListNode node = slow;\n    ListNode pre = null;\n    while (node != null) {\n        ListNode tmp = node.next;\n        node.next = pre;\n        pre = node;\n        node = tmp;\n    }\n\n    // compare\n    while (pre != null) {\n        if (pre.val != head.val) {\n            return false;\n        }\n        pre = pre.next;\n        head = head.next;\n    }\n    return true;\n}\n\n"},"alg/143_Reorder_List.html":{"url":"alg/143_Reorder_List.html","title":"143. Reorder List","keywords":"","body":"143. Reorder List\n分割，反转，合并\npublic void reorderList(ListNode head) {\n    if (head == null || head.next == null) return;\n    // split\n    ListNode fast = head,\n            slow = head;\n    while (fast != null && fast.next != null) {\n        fast = fast.next.next;\n        slow = slow.next;\n    }\n    ListNode l2 = slow.next;   // l2 = 4 --> null\n    slow.next = null;   // head = 1 -- > 2 --> 3 --> null\n\n    // reverse\n    ListNode rel2 = null,\n            cur = l2;\n    while (cur != null) {\n        ListNode tmp = cur.next;\n        cur.next = rel2;\n        rel2 = cur;\n        cur = tmp;\n    }\n\n    ListNode l1 = head;\n    // merge\n    while (l1 != null && rel2 != null) {\n        ListNode tmp = l1.next;\n        l1.next = rel2;\n        l1 = l1.next;\n        rel2 = tmp;\n    }\n}\n\n分割的时候，\n奇数list会被分为1-->2-->3-->4; 5-->6-->7\n偶数list会被分为1-->2-->3 -->4; 5-->6\n"},"alg/147_Insertion_Sort_List.html":{"url":"alg/147_Insertion_Sort_List.html","title":"147. Insertion Sort List","keywords":"","body":"147. Insertion Sort List\n过程见图\npublic ListNode insertionSortList(ListNode head) {\n    ListNode dummy = new ListNode(0); \n    ListNode pre = dummy,\n            cur = head,\n            next = null;\n    while (cur != null) {\n        ListNode tmp = cur.next;  // store the following value\n        while (pre.next != null && pre.next.val \n\n"},"alg/328_Odd_Even_Linked_List.html":{"url":"alg/328_Odd_Even_Linked_List.html","title":"328. Odd Even Linked List","keywords":"","body":"328. Odd Even Linked List\n这里的even和odd指的是index。奇数位的连成一个链表，偶数位的连成一个链表，最后这两个链表连一连。\npublic ListNode oddEvenList(ListNode head) {\n    if (head == null) return head;\n    ListNode odd = head,\n            even = head.next,\n            evenHead = even;\n\n    while (even != null && even.next != null) {\n        odd.next = odd.next.next;\n        even.next = even.next.next;\n        odd = odd.next;\n        even = even.next;\n    }\n    // concat\n    odd.next = evenHead;\n    return head;\n}\n\n"},"alg/148_Sort_List.html":{"url":"alg/148_Sort_List.html","title":"148. Sort List","keywords":"","body":"148. Sort List\n将list等分，merge函数和21题一样\npublic ListNode sortList(ListNode head) {\n    if (head == null || head.next == null) return head;\n    ListNode fast = head,\n            slow = head,\n            pre = null;\n    while (fast != null && fast.next != null) {\n        pre = slow;\n        slow = slow.next;\n        fast = fast.next.next;\n    }\n    pre.next = null;\n    ListNode l = sortList(head), r = sortList(slow);\n    return merge(l, r);\n}\n\npublic ListNode merge(ListNode l, ListNode r) {\n    ListNode dummy = new ListNode(0);\n    ListNode head = dummy;\n    while (l != null && r != null) {\n        if (l.val \n"},"alg/21_Merge_Two_Sorted_Lists.html":{"url":"alg/21_Merge_Two_Sorted_Lists.html","title":"21. Merge Two Sorted Lists","keywords":"","body":"21. Merge Two Sorted Lists\nrecursion: \npublic ListNode mergeTwoLists(ListNode l1, ListNode l2) {\n    if (l1 == null || l2 == null) \n        return (l1 != null) ? l1 : l2;\n\n    if (l1.val \n\nnaive方法设置dummy node再比较大小。\npublic ListNode mergeTwoLists(ListNode l1, ListNode l2) {\n    ListNode p = new ListNode(0);\n    ListNode head = p;\n    while (l1 != null && l2 != null) {\n        if (l1.val \n"},"alg/23_Merge_k_Sorted_Lists.html":{"url":"alg/23_Merge_k_Sorted_Lists.html","title":"23. Merge k Sorted Lists","keywords":"","body":"23. Merge k Sorted Lists\nrecusion\npublic ListNode mergeKLists(ListNode[] lists) {\n    return partition(lists, 0, lists.length - 1);\n}\n\npublic ListNode partition(ListNode[] lists, int l, int r) {\n    if (l == r) return lists[l];\n    else if (l >> 1;\n        ListNode l1 = partition(lists, l, m);\n        ListNode l2 = partition(lists, m + 1, r);\n        return merge(l1, l2);\n    }\n    return null;\n}\n\npublic ListNode merge(ListNode l1, ListNode l2) {\n    if (l1 == null || l2 == null) return (l1 != null) ? l1 : l2;\n    if (l1.val \nheap\n优先队列重写ListNode的Comparator从小到大取点。\npublic ListNode mergeKLists2(ListNode[] lists) {\n    if (lists.length == 0) return null;\n    PriorityQueue q = new PriorityQueue<>(lists.length, new Comparator() {\n        public int compare(ListNode l1, ListNode l2) {\n            if (l1.val \nnaive\n一开始的实现，拼一拼\npublic ListNode mergeKLists(ListNode[] lists) {\n    List newList = new ArrayList<>(Arrays.asList(lists));\n    while (newList.size() >= 2) {\n        ListNode list = merge2List(newList.get(newList.size() - 1), newList.get(newList.size() - 2));\n        newList.add(0, list);\n        newList.remove(newList.size() - 1);\n        newList.remove(newList.size() - 1);\n    }\n    if (newList.size() == 1) return newList.get(0);\n    return null;\n}\n\n"},"alg/146_LRU_Cache.html":{"url":"alg/146_LRU_Cache.html","title":"146. LRU Cache","keywords":"","body":"146. LRU Cache\n主要逻辑：\n\nfrom collections import OrderedDict\nclass LRUCache:\n\n    def __init__(self, capacity):\n        \"\"\"\n        :type capacity: int\n        \"\"\"\n        self.cap = capacity\n        self.d = OrderedDict()\n\n\n    def get(self, key):\n        \"\"\"\n        :type key: int\n        :rtype: int\n        \"\"\"\n        if key in self.d:\n            value = self.d.pop(key)\n            self.d[key] = value\n            return value\n        return -1\n\n    def put(self, key, value):\n        \"\"\"\n        :type key: int\n        :type value: int\n        :rtype: void\n        \"\"\"\n        if key in self.d:\n            self.d.pop(key)\n        else:\n            if self.cap > 0:\n                self.cap -= 1\n                self.d[key] = value\n            else:\n                self.d.popitem(last=False)\n        self.d[key] = value\n\n链表+字典实现，所有用过的点会插入链表末尾：\nclass Node:\n    def __init__(self, key, value):\n        self.key = key\n        self.value = value\n        self.prev = None\n        self.next = None\n\nclass LRUCache(object):\n\n    def __init__(self, capacity):\n        \"\"\"\n        :type capacity: int\n        \"\"\"\n        self.capacity = capacity\n        self.d = {}\n        self.head, self.tail = Node(0, 0), Node(0, 0)\n        self.head.next = self.tail\n        self.tail.prev = self.head\n\n    def get(self, key):\n        \"\"\"\n        :type key: int\n        :rtype: int\n        \"\"\"\n        if key in self.d:\n            node = self.d[key]\n            self._remove(node)\n            self._add(node)\n            return node.value\n        return -1\n\n\n    def put(self, key, value):\n        \"\"\"\n        :type key: int\n        :type value: int\n        :rtype: void\n        \"\"\"\n        new_node = Node(key, value)\n        if key in self.d:\n            node_remove = self.d[key]\n            self._remove(node_remove)\n        else:\n            if self.capacity > 0:\n                self.capacity -= 1\n            else:\n                node_remove = self.head.next\n                self._remove(node_remove)   # remove linked list\n                del self.d[node_remove.key] # remove dict\n        self._add(new_node)         # update linked list\n        self.d[key] = new_node      # update dict\n\n\n    def _add(self, node):\n        last_node = self.tail.prev\n        last_node.next = node\n        node.prev = last_node\n        node.next = self.tail\n        self.tail.prev = node\n\n    def _remove(self, node):\n        prev_node = node.prev\n        next_node = node.next\n        prev_node.next = next_node\n        next_node.prev = prev_node\n\n\njava LinkedHashMap直接实现，注意参数和removeEldestEntry的返回值，这个配置在TIJ中也提到过，没有被访问过的元素会在列表的最前面。\nclass LRUCache2 {\n    int capacity;\n    Map map;\n\n    public LRUCache2(int capacity) {\n        this.capacity = capacity;\n        map = new LinkedHashMap<>(capacity, 0.75f, true) { // removed by access order\n            // true if eldest element should be removed\n            // (when self.size larger than capacity)\n            protected boolean removeEldestEntry(Map.Entry eldest) {\n                return size() > capacity;\n            }\n        };\n    }\n\n    public int get(int key) {\n        return map.getOrDefault(key, -1);\n    }\n\n    public void put(int key, int value) {\n        map.put(key, value);\n    }\n}\n\n0.75f是HashMap默认的load factor，用于hashmap的自动扩容。比如说hashmap有16个buckets，当12(16*0.75)个buckets装满后，hashmap会自动增加到32个buckets。\n作用：平衡时间和空间的开销。高的load factor会减少空间开销，但是会增加collision，从而增加了get和put的时间开销。\n"},"alg/817_Linked_List_Components.html":{"url":"alg/817_Linked_List_Components.html","title":"817. Linked List Components","keywords":"","body":"817. Linked List Components\n判断链表中元素是否在set(G)中得到连通分量的个数（下一个节点为null或者不在set中）。\npublic int numComponents(ListNode head, int[] G) {\n    Set set = new HashSet();\n    for (int i = 0; i \n"},"alg/707_Design_Linked_List.html":{"url":"alg/707_Design_Linked_List.html","title":"707. Design Linked List","keywords":"","body":"707. Design Linked List\n基本操作，注意函数的复用，addAtHead和addAtTail可以用addAtIndex来写\nclass Node(object):\n\n    def __init__(self, val):\n        self.val = val\n        self.next = None\n\n\nclass MyLinkedList(object):\n\n    def __init__(self):\n        \"\"\"\n        Initialize your data structure here.\n        \"\"\"\n        self.head = None\n        self.size = 0\n\n    def get(self, index):\n        \"\"\"\n        Get the value of the index-th node in the linked list. If the index is invalid, return -1.\n        :type index: int\n        :rtype: int\n        \"\"\"\n        if index = self.size:\n            return -1\n\n        if self.head is None:\n            return -1\n\n        curr = self.head\n        for i in range(index):\n            curr = curr.next\n        return curr.val\n\n    def addAtHead(self, val):\n        \"\"\"\n        Add a node of value val before the first element of the linked list.\n        After the insertion, the new node will be the first node of the linked list.\n        :type val: int\n        :rtype: void\n        \"\"\"\n        self.addAtIndex(0, val)\n\n    def addAtTail(self, val):\n        \"\"\"\n        Append a node of value val to the last element of the linked list.\n        :type val: int\n        :rtype: void\n        \"\"\"\n        self.addAtIndex(self.size, val)\n\n    def addAtIndex(self, index, val):\n        \"\"\"\n        Add a node of value val before the index-th node in the linked list.\n        If index equals to the length of linked list, the node will be appended to the end of linked list.\n        If index is greater than the length, the node will not be inserted.\n        :type index: int\n        :type val: int\n        :rtype: void\n        \"\"\"\n        if index  self.size:\n            return\n\n        node = Node(val)\n\n        if index == 0:\n            node.next = self.head\n            self.head = node\n        else:\n            curr = self.head\n            for i in range(index - 1):\n                curr = curr.next\n            node.next = curr.next\n            curr.next = node\n\n        self.size += 1\n\n    def deleteAtIndex(self, index):\n        \"\"\"\n        Delete the index-th node in the linked list, if the index is valid.\n        :type index: int\n        :rtype: void\n        \"\"\"\n        if index = self.size:\n            return\n\n        curr = self.head\n        if index == 0:\n            self.head = curr.next\n        else:\n            for i in range(index - 1):\n                curr = curr.next\n            curr.next = curr.next.next\n\n        self.size -= 1\n\n"},"alg/19_Remove_Nth_Node_From_End_of_List.html":{"url":"alg/19_Remove_Nth_Node_From_End_of_List.html","title":"19. Remove Nth Node From End of List","keywords":"","body":"19. Remove Nth Node From End of List\nnaive方法，要算两次\npublic ListNode removeNthFromEnd(ListNode head, int n) {\n    if (n == 0) return head;\n    ListNode dummy = new ListNode(0);\n    dummy.next = head;\n    ListNode res = dummy;\n\n    // compute length\n    int length = 0;\n    ListNode l1 = head;\n    while (l1 != null) {\n        length++;\n        l1 = l1.next;\n    }\n\n    // forward steps\n    int step = length - n;\n    for (int i = 0; i \n高票答案改写：\ndef removeNthFromEnd(self, head, n):\n    \"\"\"\n    :type head: ListNode\n    :type n: int\n    :rtype: ListNode\n    \"\"\"\n    dummy = ListNode(0)\n    dummy.next = head\n    fast, slow = dummy, dummy\n\n    for i in range(n + 1):\n        fast = fast.next\n\n    while fast:\n        fast = fast.next\n        slow = slow.next\n\n    slow.next = slow.next.next\n    return dummy.next\n\n"},"2_tree.html":{"url":"2_tree.html","title":"Tree","keywords":"","body":"\n难点：写递归，有返回值的递归，没有返回值的递归，作为helper函数的递归等等..\n操作：栈，递归\n\n递归三连：前中后序遍历，level遍历\n144，94，145, 102\n\nsame || symmetric || invert || merge: \n100, 101, 226, 617\n\n\n\n二叉树的性质:\ndepth:  104, 111, 112\nnodes: 222, 872\n\n"},"alg/144_Binary_Tree_Preorder_Traversal.html":{"url":"alg/144_Binary_Tree_Preorder_Traversal.html","title":"144. Binary Tree Preorder Traversal","keywords":"","body":"144. Binary Tree Preorder Traversal\nnaive级别递归三连其一：前序遍历。\npublic List preorderTraversal(TreeNode root) {\n    List res = new ArrayList<>();\n    dfs(root, res);\n    return res;\n}\n\npublic void dfs(TreeNode root, List res) {\n    if (root == null) return;\n    res.add(root.val);\n\n    dfs(root.left, res);\n    dfs(root.right, res);\n}\n\n递归的理解：先写出三个点的前序遍历，然后发现后面两个左右子树的if可以用dfs复用。\npublic void dfs(TreeNode root, List res) {\n    if (root == null) return;\n    res.add(root.val);\n        //  左边的坑：dfs(root.left, res);\n        if (root.left == null) return;\n        res.add(root.left.val);\n        // 右边的坑：dfs(root.right, res);\n        if (root.right == null) return;\n        res.add(root.right.val);\n}\n\n栈：先push右边再push左边，保持左边元素永远在栈顶（第一个出栈）\npublic List preorderTraversal(TreeNode root) {\n    List res = new ArrayList<>();\n    LinkedList s = new LinkedList<>();\n    if (root != null) s.push(root);\n\n    while (!s.isEmpty()) {\n        TreeNode node = s.pop();\n        res.add(node.val);\n        if (node.right != null) s.push(node.right);\n        if (node.left != null) s.push(node.left);\n    }\n    return res;\n}\n\n"},"alg/94_Binary_Tree_Inorder_Traversal.html":{"url":"alg/94_Binary_Tree_Inorder_Traversal.html","title":"94. Binary Tree Inorder Traversal","keywords":"","body":"94. Binary Tree Inorder Traversal\nnaive级别递归三连其二：中序遍历。\npublic List inorderTraversal(TreeNode root) {\n    List res = new ArrayList<>();\n    dfs(root, res);\n    return res;\n}\n\npublic void dfs(TreeNode root, List res) {\n    if (root == null) return;\n\n    dfs(root.left, res);\n    res.add(root.val);\n    dfs(root.right, res);\n}\n\n递归的理解：同样先写出三个点的中序遍历，然后发现迷之缩进里的两个左右子树的if可以用dfs复用。\npublic void dfs(TreeNode root, List res) {\n    if (root == null) return;\n        // 左边的坑：dfs(root.left, res);\n        if (root.left == null) return;\n        res.add(root.left.val);\n    res.add(root.val);\n        // 右边的坑：dfs(root.right, res)\n        if (root.right == null) return;\n        res.add(root.right.val);\n}\n\n永远的栈，注意用linkedlist\npublic List inorderTraversal2(TreeNode root) {\n    List res = new ArrayList();\n    LinkedList stack = new LinkedList();\n    TreeNode node = root;\n\n    while (node != null || !stack.isEmpty()) {\n        while (node != null) {\n            stack.push(node);\n            node = node.left;\n        }\n        node = stack.pop();\n        res.add(node.val);\n        node = node.right;\n    }\n    return res;\n}\n\n"},"alg/145_Binary_Tree_Postorder_Traversal.html":{"url":"alg/145_Binary_Tree_Postorder_Traversal.html","title":"145. Binary Tree Postorder Traversal","keywords":"","body":"145. Binary Tree Postorder Traversal\nnaive级别递归三连其三：后序遍历。\npublic List postorderTraversal(TreeNode root) {\n    List res = new ArrayList<>();\n    dfs(root, res);\n    return res;\n}\n\npublic void dfs(TreeNode root, List res) {\n    if (root == null) return;\n\n    dfs(root.left, res);\n    dfs(root.right, res);\n    res.add(root.val);\n}\n\n递归的理解：写出三个点的后序遍历，然后发现迷之缩进里的两个左右子树的if可以用dfs复用。\npublic void dfs(TreeNode root, List res) {\n    if (root == null) return;\n        // 左边的坑：dfs(root.left, res);\n        if (root.left == null) return;\n        res.add(root.left.val);\n        // 右边的坑：dfs(root.right, res)\n        if (root.right == null) return;\n        res.add(root.right.val);\n    res.add(root.val);\n}\n\n"},"alg/102_Binary_Tree_Level_Order_Traversal.html":{"url":"alg/102_Binary_Tree_Level_Order_Traversal.html","title":"102. Binary Tree Level Order Traversal","keywords":"","body":"102. Binary Tree Level Order Traversal\nzigzag和II记得去看答案，还有DFS递归解法。\n栈。注意List的用法，比如有时候时deque，有时候时linkedlist。queue的时候一般用offer方法，因为容量满的时候不会抛出异常而是返回false。\npublic List> levelOrder(TreeNode root) {\n    Queue q = new LinkedList<>();\n    List> res = new LinkedList<>();\n    if (root == null) return res;\n\n    q.offer(root);\n\n    while (!q.isEmpty()) {\n        int levelNum = q.size();\n        List subRes = new LinkedList<>();\n        for (int i = 0; i \nzigzag那道题用了flag..\n    def zigzagLevelOrder(self, root):\n        \"\"\"\n        :type root: TreeNode\n        :rtype: List[List[int]]\n        \"\"\"\n        res = []\n        if not root: return res\n        queue = [root]\n        flag = False\n\n        while queue:\n            val = []\n            for _ in range(len(queue)):\n                node = queue.pop(0)\n                if node.left: queue.append(node.left)\n                if node.right: queue.append(node.right)\n                val.append(node.val)\n\n            if flag:\n                val.reverse()\n                flag = False\n            else:\n                flag = True\n            res.append(val)\n        return res\n\n"},"alg/100_Same_Tree.html":{"url":"alg/100_Same_Tree.html","title":"100. Same Tree","keywords":"","body":"100. Same Tree\n基础递归\npublic boolean isSameTree(TreeNode left, TreeNode right) {\n    if (left == null && right == null) {\n        return true;\n    }\n    if (left == null || right == null) {\n        return false;\n    }\n    return left.val == right.val && \n        isSameTree(left.left, right.left) && isSameTree(left.right, right.right);\n}\n\n"},"alg/101_Symmetric_Tree.html":{"url":"alg/101_Symmetric_Tree.html","title":"101. Symmetric Tree","keywords":"","body":"101. Symmetric Tree\n和same tree很像，把root弄成了两个点，并且左右子树相反。\npublic boolean isSymmetric(TreeNode root) {\n    if (root == null) return true;\n    return dfs(root.left, root.right);\n}\n\npublic boolean dfs(TreeNode left, TreeNode right) {\n    if (left == null && right == null) {\n        return true;\n    }\n    if (left == null || right == null) {\n        return false;\n    }\n    return (left.val == right.val) && \n            dfs(left.left, right.right) && dfs(left.right, right.left);\n}\n\n"},"alg/226_Invert_Binary_Tree.html":{"url":"alg/226_Invert_Binary_Tree.html","title":"226. Invert Binary Tree","keywords":"","body":"226. Invert Binary Tree\nnaive递归\ndef invertTree(self, root):\n    \"\"\"\n    :type root: TreeNode\n    :rtype: TreeNode\n    \"\"\"\n    if not root: return \n    root.left, root.right = root.right, root.left\n    self.invertTree(root.left)\n    self.invertTree(root.right)\n    return root\n\npublic TreeNode invertTree(TreeNode root) {\n    if (root == null) return null;\n    TreeNode tmp = root.left;\n    root.left = invertTree(root.right);\n    root.right = invertTree(tmp);\n    return root;\n}\n\nBFS:\npublic TreeNode invertTree(TreeNode root) {\n    if (root == null) return null;\n    Queue q = new LinkedList<>();\n    q.offer(root);\n\n    while (!q.isEmpty()) {\n        TreeNode node = q.poll();\n        TreeNode tmp = node.right;\n        node.right = node.left;\n        node.left = tmp;\n\n        if (node.left != null) q.offer(node.left);\n        if (node.right != null) q.offer(node.right);\n    }\n    return root;\n}\n\n"},"alg/617_Merge_Two_Binary_Trees.html":{"url":"alg/617_Merge_Two_Binary_Trees.html","title":"617. Merge Two Binary Trees","keywords":"","body":"617. Merge Two Binary Trees\n简单递归，可以先考虑三个点的情况写出来。\npublic TreeNode mergeTrees(TreeNode t1, TreeNode t2) {\n    if (t1 == null || t2 == null) {\n        return (t1 == null) ? t2 : t1;\n    }\n    t1.val += t2.val;\n    t1.left = mergeTrees(t1.left, t2.left);\n    t1.right = mergeTrees(t1.right, t2.right);\n    return t1;\n}\n\n"},"alg/872_Leaf-Similar_Trees.html":{"url":"alg/872_Leaf-Similar_Trees.html","title":"872. Leaf-Similar Trees","keywords":"","body":"872. Leaf-Similar Trees\nnaive比较法，效率比较低，还有一种同时比较的方法，记得去看。\npublic boolean leafSimilar(TreeNode root1, TreeNode root2) {\n    List res1 = new ArrayList<>(),\n                    res2 = new ArrayList<>();\n    findLeaf(root1, res1);\n    findLeaf(root2, res2);\n    return res1.equals(res2);\n}\n\npublic void findLeaf(TreeNode root, List res) {\n    if (root == null) return;\n    if (root.left == null && root.right == null) res.add(root.val);\n    findLeaf(root.left, res);\n    findLeaf(root.right, res);\n}\n\n"},"alg/104_Maximum_Depth_of_Binary_Tree.html":{"url":"alg/104_Maximum_Depth_of_Binary_Tree.html","title":"104. Maximum Depth of Binary Tree","keywords":"","body":"104. Maximum Depth of Binary Tree\n递归时，每层路径加一\npublic int maxDepth(TreeNode root) {\n    if(root == null)  return 0;\n    return 1 + Math.max(maxDepth(root.left), maxDepth(root.right));\n}\n\n    3\n   / \\ +1\n  9  20\n    /  \\ +1\n   15   7\n         \\ + 1\n         null\n\n"},"alg/111_Minimum_Depth_of_Binary_Tree.html":{"url":"alg/111_Minimum_Depth_of_Binary_Tree.html","title":"111. Minimum Depth of Binary Tree","keywords":"","body":"111. Minimum Depth of Binary Tree\n和求maxDepth基本一样\npublic int minDepth(TreeNode root) {\n    if(root == null) return 0;\n    int left = minDepth(root.left);\n    int right = minDepth(root.right);\n    if(left == 0 || right == 0)  return left + right + 1; \n    return Math.min(left, right) + 1;\n}\n\n保证树是一层的且左右子树有一边为0的时候[1,3]，最小值为2\nif(left == 0 || right == 0)  return left + right + 1;\n\n"},"alg/112_Path_Sum.html":{"url":"alg/112_Path_Sum.html","title":"112. Path Sum","keywords":"","body":"112. Path Sum\npublic boolean hasPathSum(TreeNode root, int sum) {\n    if (root == null) return false;\n    if (root.left == null && root.right == null) return sum == root.val;\n    return hasPathSum(root.left, sum - root.val) || \n           hasPathSum(root.right, sum - root.val);\n}\n\n"},"alg/222_Count_Complete_Tree_Nodes.html":{"url":"alg/222_Count_Complete_Tree_Nodes.html","title":"222. Count Complete Tree Nodes","keywords":"","body":"222. Count Complete Tree Nodes\n可以用遍历法求，但是不能判断是不是complete，且为O(n)的时间复杂度\npublic int countNodes(TreeNode root) {\n    if (root == null) return 0;\n    return 1 + countNodes(root.left) + countNodes(root.right);\n}\n\n\n是一个很迷的递归，\npublic int countNodes(TreeNode root) {\n    if (root == null) return 0;\n    int leftDepth = getDepth(root.left);\n    int rightDepth = getDepth(root.right);\n    if (leftDepth == rightDepth) {\n        return (int) (countNodes(root.right) + Math.pow(2, leftDepth));\n    }\n    else {\n        return (int) (countNodes(root.left) + Math.pow(2, rightDepth));\n    }\n}\n\npublic int getDepth(TreeNode root) {\n    if (root == null) return 0;\n    return 1 + getDepth(root.left);\n}\n\n\n补一下二叉树的性质：\n1.第i层有2^(i-1)个节点。如第二层有2^(2-1)=2个节点\n2.深度为k的二叉树最多有2^k-1个节点。如三层的树最多有2^3-1=7个节点\n3.对任何一棵二叉树T, 如果其叶结点数为n0, 度为2的结点数为n2, 则n0＝n2＋1。\n4.具有 n (n>=0) 个结点的完全二叉树的深度为⌊log(n)⌋+1。如4个节点的树有⌊log(4)⌋+1=3层。\n"}}}